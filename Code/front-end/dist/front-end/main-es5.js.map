{"version":3,"sources":["webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/shared/layout/layout.component.ts","webpack:///src/app/shared/layout/layout.component.html","webpack:///src/app/admin/service/posting.service.ts","webpack:///src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.html","webpack:///src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.ts","webpack:///src/app/shared/model/organisation.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-details-month/payment-details-month.component.html","webpack:///src/app/shared/analysis/payment-analysis/payment-details-month/payment-details-month.component.ts","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis.component.ts","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis.component.html","webpack:///src/app/shared/model/file-import.ts","webpack:///src/app/shared/liquidity/credit-line/credit-line.component.ts","webpack:///src/app/shared/liquidity/credit-line/credit-line.component.html","webpack:///src/app/shared/user-registration/user-registration.component.ts","webpack:///src/app/shared/user-registration/user-registration.component.html","webpack:///src/app/shared/reset-password/reset-password.component.html","webpack:///src/app/shared/reset-password/reset-password.component.ts","webpack:///src/app/shared/model/creditLine.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component.html","webpack:///src/app/shared/nav-bar/nav-bar.component.html","webpack:///src/app/shared/nav-bar/nav-bar.component.ts","webpack:///src/app/shared/service/posting-data.service.ts","webpack:///src/app/shared/analysis/amount-analysis/details/amount-analysis-details.html","webpack:///src/app/shared/analysis/amount-analysis/details/amount-analysis-details.component.ts","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/app/shared/model/choices.ts","webpack:///src/app/admin/service/organisation.service.ts","webpack:///src/app/shared/service/auth.service.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component.html","webpack:///src/app/shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component.ts","webpack:///src/app/admin/admin-registration/admin-registration.component.ts","webpack:///src/app/admin/admin-registration/admin-registration.component.html","webpack:///src/app/shared/service/user.service.ts","webpack:///src/app/shared/model/titles.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.html","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.ts","webpack:///src/app/shared/notfound/notfound.component.ts","webpack:///src/app/shared/notfound/notfound.component.html","webpack:///src/app/shared/user-dashboard/user-dashboard.component.html","webpack:///src/app/shared/user-dashboard/user-dashboard.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.html","webpack:///src/app/shared/sap-data-table/susa/susa.component.html","webpack:///src/app/shared/sap-data-table/susa/susa.component.ts","webpack:///src/app/admin/procedure-registration/procedure-registration.component.ts","webpack:///src/app/admin/procedure-registration/procedure-registration.component.html","webpack:///src/app/admin/import/import.component.ts","webpack:///src/app/admin/import/import.component.html","webpack:///src/app/admin/procedure-edit/procedure-edit.component.html","webpack:///src/app/admin/procedure-edit/procedure-edit.component.ts","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.ts","webpack:///src/app/admin/document-type/document-type.component.html","webpack:///src/app/admin/document-type/document-type.component.ts","webpack:///src/app/admin/account-type/account-type.component.html","webpack:///src/app/admin/account-type/account-type.component.ts","webpack:///src/app/shared/organisation-users/organisation-users.component.html","webpack:///src/app/shared/organisation-users/organisation-users.component.ts","webpack:///src/app/admin/service/import.service.ts","webpack:///src/app/shared/service/procedure.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/shared/pipes/highlight.pipe.ts","webpack:///src/app/shared/service/export-data.service.ts","webpack:///src/app/shared/sap-data-table/sap-data-table.component.html","webpack:///src/app/shared/sap-data-table/sap-data-table.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/admin/service/admin-registration.service.ts","webpack:///src/app/shared/model/users.ts","webpack:///src/app/admin/pre-calculate/pre-calculate.component.html","webpack:///src/app/admin/pre-calculate/pre-calculate.component.ts","webpack:///src/app/shared/analysis/payment-analysis/due-date/due-date.component.html","webpack:///src/app/shared/analysis/payment-analysis/due-date/due-date.component.ts","webpack:///src/app/shared/service/dictionary.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/admin/service/role-service.service.ts","webpack:///src/app/shared/model/dataTableColumns.ts","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/admin/service/procedure.service.ts","webpack:///src/app/admin/organisation-registration/organisation-registration.component.ts","webpack:///src/app/admin/organisation-registration/organisation-registration.component.html","webpack:///src/app/shared/liquidity/opening-balance/opening-balance.component.ts","webpack:///src/app/shared/liquidity/opening-balance/opening-balance.component.html","webpack:///src/app/shared/user-edit/user-edit.component.ts","webpack:///src/app/shared/user-edit/user-edit.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/app/admin/service/pre-calculate.service.ts","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.html","webpack:///src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis.component.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis.component.html","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component.ts","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component.html","webpack:///src/app/shared/analysis/text-analysis/text-analysis.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/model/bar.ts","webpack:///src/app/shared/unauth/unauth.component.ts","webpack:///src/app/shared/unauth/unauth.component.html","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity.component.html","webpack:///src/app/shared/service/data-filter.service.ts","webpack:///src/app/admin/service/users.service.ts","webpack:///src/app/shared/model/procedures.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/shared/service/analysis.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/service/liquidity.service.ts","webpack:///src/app/shared/reset-password-new-user/reset-password-new-user.component.html","webpack:///src/app/shared/reset-password-new-user/reset-password-new-user.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AdminDashboardComponent","_organisationService","_router","organisations","users","cols","Array","get","subscribe","data","error","console","log","header","field","align","id","localStorage","setItem","navigate","LayoutComponent","_route","_translateService","username","getItem","role","setDefaultLang","fragment","currentRoute","PostingService","_http","_thisURL","baseUrl","_docTypeURL","orgId","prcdrId","put","prcId","DueDateDetailsComponent","_messageService","_analysisService","labels","docDateLabels","docDataTable","filteredDataTable","docPositiveData","docNegativeData","docData","docDateData","selectedOrganisation","selectedProcedure","procedureName","accountNumber","snapshot","paramMap","waiting","elem","items","label","paymentLabel","routerLink","routerLinkActiveOptions","exact","url","home","icon","getDueDateAnalysisDetails","res","docDateReference","records","forEach","element","push","monthName","yearName","positive","negative","datasets","type","average","borderColor","borderWidth","fill","backgroundColor","record","appDate","Date","applicationDate","dueDate","delay","Math","ceil","getTime","er","basicData","basicOptions","scales","xAxes","ticks","minRotation","maxRotation","yAxes","stepSize","delayCols","e","index","_index","selectedDate","startTemp","split","startDate","parseInt","endDate","getFullYear","getMonth","filter","row","documentDate","backToPayment","selectBarData","Organisation","name","email","street","houseNr","city","postCode","country","organisation","result","PaymentDetailsMonthComponent","displayData","month","updateData","paymentOptions","value","color","date","filteredBlue","blueData","filteredRed","redData","filteredGreen","greenData","AmountAnalysisComponent","baseBalance","criteria","responsive","legend","display","position","min","getData","getAmountAnalysis","account","toString","isNaN","tempData","i","length","accountName","random","totlaCount","query","colName","searching","Object","keys","key","prototype","hasOwnProperty","call","toLowerCase","includes","FileToImport","template","defaultTemplate","fileHeader","CreditLineComponent","_liquidityService","datepipe","filtersNo","getCreditLine","val","creditLineFromDate","creditLineToDate","creditLine","parseFloat","isEditable","map","r","originalCreditLine","originalCreditLineFromDate","originalCreditLineToDate","tempRow","transform","updateCreditLine","numOfRecords","add","severity","summary","detail","newRecord","newDialog","deleteCreditLine","getDate","UserRegistrationComponent","_userService","titles","getTitles","roles","userModel","OrganisationId","addUser","err","errorMsg","status","badRequest_400","unauthorized_401","forbidden_403","NotFound_404","internalServerError_500","life","submitHandler","cancelHandle","ResetPasswordComponent","_authService","passwordObj","selectedPassword","confirmedPassword","password","changePassword","passwordsMatch","submitHandle","CreditLine","TextAnalysisIndexedComponent","prcService","byAccount","dataWord","criteriaWord","basicOptionsWords","colsWord","getTextAnalysisIndex","getTextAnalysisWordIndex","tempDataWord","labelsWord","wordAccountsData","wordRecordsData","word","accountsCount","recordsCount","basicDataWord","NavBarComponent","sideBarShow","menuItems","userPages","sidebarItems","browserLang","prcName","addLangs","getBrowserLang","use","match","getScreenSize","event","scrWidth","window","innerWidth","prcStyle","document","getElementById","innerHTML","onLangChange","lang","toPromise","visible","logout","command","currentProcedureStatus","addOrganisation","addDocumentType","addAccountType","resetPassword","preCalculateAnalysis","disabled","analysis","amountAnalyisis","textAnalysis","paymentAnalyse","dueDateAnalyse","creditorsAnalyse","liquidity","openingBalance","freeLiquidity","procedures","table","clear","PostingDataService","companyCode","offset","limit","fromDate","toDate","params","AmountAnalysisDetailsComponent","_exportDataService","details","allRecordData","selected","detailsOption","pageLimitSizes","pageNr","maxPageNr","backCriteria","orderBy","sortOrder","detailsOptions","frozenCols","width","getAmountAnalysisDetails","translatedData","translatedRecord","translatedKey","temp","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","parse","toLocaleDateString","year","day","then","xlsx","worksheet","utils","json_to_sheet","workbook","Sheets","amount_analysis","SheetNames","excelBuffer","write","bookType","saveAsExcelFile","buffer","fileName","EXCEL_TYPE","EXCEL_EXTENSION","d","Blob","item","indexOf","amountRelevant","amountRelevantComment","setRelevantAmountAnalysis","option","getSysRelevant","getUserRelevant","getAmountAnalysisDetailsRelevant","getAmountAnalysisDetailsByAccount","rows","totalCount","count","displayedDataCount","criteriaWithLang","exportXLSX","sortField","getAllByAccount","trim","changeData","CreditorAnalysisComponent","sum","getCreditorAnalysis","sort","environment","production","TokenInterceptor","_authSrvc","request","next","token","getToken","tokenizedReq","clone","setHeaders","Authorization","observer","handle","ErrorEvent","fromImport","msg","Choices","OrganisationService","p","post","AuthService","TextAnalysisWordDetailsComponent","keyword","getTextAnalysisWordDetails","AdminRegistrationComponent","_adminRegistrationService","_orgService","orgs","RoleId","UserService","user","organisationId","Titles","PaymentAnalysisDetailsComponent","relevantData","blue","red","green","tooltips","callbacks","tooltipItem","currencyPipe","datasetIndex","callback","values","sysRelevant","userRelevant","allRelevant","comment","getPaymentAnalysisDetails","dateRange","mindate","maxdate","abs","paymentRelevant","paymentRelevantComment","setRelevantPaymentAnalysis","payment_analysis","getPaymentAnalysisDetailsRelevant","getPaymentAnalysisDetailsByAccount","child","NotfoundComponent","UserDashboardComponent","_procedureService","_confirmationService","navbar","check","getProcedures","prc","amount","text_word","text_account","credit","payment","due_date","docType","updateLocal","reset","REJECT","CANCEL","message","acceptLabel","rejectLabel","accept","reject","confirm","FreeLiquidityDetailsComponent","baseFromDateTemp","baseFromDate","baseToDateTemp","baseToDate","fromDateTemp","toDateTemp","maxRange","dayDiff","rangeValues","start","end","tempStart","setDate","tempEnd","d1","d2","diff","diffDays","toISOString","getFreeLiquidityDetails","bankBalances","creditLines","selectedDateData","tempDate","slice","getFreeLiquidityDetailsRecords","handleSliderChange","SusaComponent","_postingDataService","procedureId","completeWords","getDefaultSusaDateRange","fdate","tdate","getSusa","famount","debitAmount","creditAmount","inamount","outamount","Susa","ProcedureRegistrationComponent","_roleServiceService","_usersService","dataSources","getDataSources","procedureModel","addProcedure","ImportComponent","_importService","activeIndex","uploadedFiles","templates","getTemplates","fileTypes","getFileType","fileClass","getFileClass","locals","getLocalization","accountTypes","getAccountTypes","filesList","currentFileIndex","accountsCustomTemplate","postingCustomTemplate","headCustomTemplate","selectedOrgId","selectedProcedureId","tempheader","firstStepLabel","secondStepLabel","thirdStepLabel","firthStepLabel","addFormData","splice","f","selectedTemplate","wizardIndex","fileIndex","nameOnServer","deleteFile","orginalName","removeFormData","file","fileType","local","temmplate","formData","FormData","append","JSON","stringify","uploadFile","headers","uploaded","selectedFiles","files","theFile","filePath","accountType","importFile","imported","filtered","orgChangedHandler","goPrev","goNext","importThisFile","ProcedureEditComponent","getOne","procedure","update","CreditorAnalysisDetailsComponent","getCreditorAnalysisDetails","totalAmount","totalBalance","totalAmountCount","totalPayment","totalPaymentCount","totalText","text","totalTextCount","chartData","amountLabel","textLabel","hoverBackgroundColor","displayDetails","setDetails","DocumentTypeComponent","_docTypesService","selectedPrcId","docTypes","docTypesFilter","originalVal","documentTypeName","getDocTypesEnum","postingDocTypes","documentTypeNewId","documentTypeNewName","updateNewDocType","currentPrcID","prcStatus","getPostingDocTypes","save","AccountTypeComponent","_postingService","accountTypesFilter","AccountTypeName","getAccountTypesEnum","getPostingAccountTypes","postingAccountTypes","accountTypeNewId","accountTypeNewName","updateNewAccountType","OrganisationUsersComponent","getUsers","subField","title","firstname","lastname","mobileNumber","housenumber","ImportService","formdata","ProcedureService","_adminURL","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","webpackContextKeys","resolve","module","exports","HighlightPipe","el","sanitizer","keywords","_nativeElement","nativeElement","regEx","RegExp","wordList","test","w","replace","sanitize","HTML","ExportDataService","tableName","ProcedureId","responseType","SAPDataTableComponent","_dataFilterService","_autocompleteService","loading","selectLastPage","postings","getDataTableColumns","tempCriteria","autoComplete","exportPDF","AppComponent","primengConfig","bnIdle","ripple","startWatching","isTimedOut","AdminRegistrationService","Users","PreCalculateComponent","_preCalcService","disableDocType","disableAmount","disableCredit","disabletextWord","disableText_account","disablePayment","disableDueDate","patch","textAnalysisByWord","updateProcedureStatus","textAnalysisByAccount","amountAnalysis","creditorAnalysis","paymentAnalysis","dueDateAnalysis","textByWordStart","textByAccountStart","amountStart","DueDateComponent","secondChartLabels","detailsData","minDate","detailsCols","parmas","maxDelay","selectedAccount","getDueDateAnalysis","dueDateReference","secondChartDataRecords","recordsDelay","maxappdate","maxDate","rangeDays","secondChartOptions","point","stacked","gridLines","secondChartData","delayData","dueDateRefAccounts","due_date_analysis","DictionaryService","HttpLoaderFactory","http","AppModule","provide","useValue","useClass","multi","forRoot","loader","useFactory","deps","RoleServiceService","dataTableColumns","translateService","LoginComponent","login","userinfo","userInfo","fullName","Role","OrganisationRegistrationComponent","fromFront","logo","reader","FileReader","onload","imageSrc","readAsDataURL","insert","UploadHandler","OpeningBalanceComponent","getOpeningBalance","StartingBalanceDate","StartingBalance","originalOpeningBalance","originalOpeningBalanceDate","updateOpeningBalance","UserEditComponent","editUser","removeItem","PreCalculateService","CreditorAnalysisCalcComponent","getCreditorAnalysisCalc","TextAnalysisDetailsComponent","getTextAnalysisDetails","text_analysis","textRelevant","textRelevantComment","setRelevantTextAnalysis","getTextAnalysisDetailsRelevant","getTextAnalysisDetailsByAccount","PaymentAnalysisComponent","RedData","GreenData","specificAccountBlueData","specificAccountRedData","specificAccountGreenData","ready","accounts","blueAccounts","top10Blue","greenAccounts","redAccounts","top10","top10Cols","accountsCols","specificAccountData","getPaymentAnalysis","a","b","top10Red","top10Green","selectedMaxAccountNumber","selectedMaxAccountName","total","g","chart","refresh","AmountAnalysisPreComponent","TextAnalysisComponent","getTextAnalysis","getTextAnalysisWord","FooterComponent","Bar","UnauthComponent","FreeLiquidityComponent","allAccountsDataBankBalances","allAccountsDataCreditLines","selectedDateCols","bankBalancesTotal","creditLinesTotal","freeLiquidityTotal","getFreeLiquidity","bankBalance","calculateTotals","DataFilterService","UsersService","userId","Procedures","dataSource","AuthGuard","authorized","route","isLoggedIn","currentUserRole","getRole","AnalysisService","step","routes","path","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","LiquidityService","from","to","ResetPasswordNewUserComponent","TextAnalysisPreComponent","getTextAnalysisAccountCalcAll","getTextAnalysisWordCalcAll","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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A;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAA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","file":"main-es5.js","sourcesContent":["<div class=\"p-mt-2\">\r\n  <p-table [value]=\"organisations\" [columns]=\"cols\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n    [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n      </colgroup>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\" >\r\n      <tr>\r\n        <th pResizableColumn pReorderableColumn  *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n          {{col.header | translate}}\r\n        </th>\r\n        <th>{{'Data_Table.actions' | translate}}</th>\r\n      </tr>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"body\" let-organisation>\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of cols\"  class=\"p-text-{{col.align}}\">{{organisation[col.field]}}</td>\r\n        <td pReorderableRowHandle>\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showProcedures(organisation.id)\"></button> &nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showUsers(organisation.id)\"></button>&nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'general_actions.edit' | translate }}\" tooltipPosition=\"bottom\" (click)=\"editOrg(organisation.id)\"></button>\r\n        </td>\r\n\r\n      </tr>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No organisations found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Header } from 'primeng/api';\r\nimport { OrganisationService } from \"../service/organisation.service\";\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.sass']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  organisations: [] = []\r\n  users: [] = []\r\n  organisationRoleId: number;\r\n  cols: { header, field , align}[] = new Array();\r\n\r\n  constructor(private _organisationService: OrganisationService, private _router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this._organisationService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.organisations = data\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Admin_Dashboard.organisationName',\r\n        field: 'name',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationEmail',\r\n        field: 'email',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCountry',\r\n        field: 'country',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCity',\r\n        field: 'city',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationPostCode',\r\n        field: 'postCode',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationStreet',\r\n        field: 'street',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationHouseNr',\r\n        field: 'houseNr',\r\n        align: 'center'\r\n      }\r\n\r\n    ];\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  showProcedures(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n\r\n\r\n  }\r\n  showUsers(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/dashboard/shared/user/users']);\r\n\r\n  }\r\n\r\n  editOrg(id) {\r\n    this._router.navigate(['/dashboard/admin/organisation/edit/' + id]);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router ,ActivatedRoute} from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.sass']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  username: string = localStorage.getItem('username'); \r\n  role: string = localStorage.getItem('role');\r\n\r\n  constructor(private _route: ActivatedRoute, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.setDefaultLang('de');\r\n    this._route.fragment.subscribe(currentRoute => {\r\n      this.role = localStorage.getItem('role');\r\n      this.username = localStorage.getItem('username'); \r\n    });\r\n    \r\n  }\r\n\r\n}\r\n"," <div class=\"p-grid\">\r\n    <div class=\"p-mb-6 p-col-12\">\r\n        <app-nav-bar></app-nav-bar>\r\n    \r\n    </div>\r\n    <div class=\"p-mt-6 p-col-12 dashboard\">\r\n        <router-outlet></router-outlet>\r\n    </div> \r\n<!--     <div class=\"p-mb-6 p-col-12\">\r\n        <app-footer></app-footer>\r\n    </div> -->\r\n </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { Observable } from 'rxjs';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingService {\r\n  _thisURL = environment.baseUrl + 'admin/';\r\n  _docTypeURL = environment.baseUrl + 'admin/document-type/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDocTypesEnum(): Observable<DocumentTypes[]> {\r\n    return this._http.get<DocumentTypes[]>(this._docTypeURL);\r\n  }\r\n\r\n  getPostingDocTypes(orgId: number, prcdrId: number): Observable<PostingDocTypes[]>{\r\n    return this._http.get<PostingDocTypes[]>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId);\r\n  }\r\n\r\n  updateNewDocType(orgId: number, prcdrId: number, data: {documentType, documentTypeNewId, documentTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId, data);\r\n  }\r\n\r\n\r\n\r\n  getAccountTypesEnum():Observable<AccountTypes[]> {\r\n    return this._http.get<AccountTypes[]>(this._thisURL + 'account-type');\r\n  }\r\n\r\n  getPostingAccountTypes(orgId: number, prcId: number): Observable<PostingAccountTypes[]>{\r\n    return this._http.get<PostingAccountTypes[]>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId);\r\n  }\r\n\r\n  updateNewAccountType(orgId: number, prcId: number, data: {accountNumber, accountTypeNewId, accountTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId, data);\r\n  }\r\n  \r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\"{{ 'DueDateAnalysis.backtoDueDate' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\"\r\n      pTooltip=\"{{ 'DueDateAnalysis.backtoDueDate' | translate }}\" tooltipPosition=\"bottom\"></button>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\"\r\n      (onDataSelect)=\"selectBarData($event)\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-7\" *ngIf=\"selectedDate\">\r\n    <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-5 p-text-right\" *ngIf=\"selectedDate\">\r\n    <button type=\"button\" pButton pRipple label=\"All\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-warning\"\r\n      (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\" style=\"margin-top: 20px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedDate\">\r\n    <p-table [value]=\"filteredDataTable\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"\r\n            col.field == 'dueDate' ||\r\n            col.field == 'applicationDate' ||\r\n            col.field == 'documentDate'\r\n          \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n            col.field != 'balance' &&\r\n            col.field != 'documentDate' &&\r\n            col.field != 'dueDate' &&\r\n            col.field != 'applicationDate'\r\n          \">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"!selectedDate\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"data\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                col.field == 'dueDate' ||\r\n                col.field == 'applicationDate' ||\r\n                col.field == 'documentDate'\r\n              \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'applicationDate'\r\n              \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-due-date-details',\r\n  templateUrl: './due-date-details.component.html',\r\n  styleUrls: ['./due-date-details.component.sass'],\r\n})\r\nexport class DueDateDetailsComponent implements OnInit {\r\n\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountNumber: string;\r\n  accountName: string;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateLabels: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  filteredDataTable: any[] = new Array();\r\n  data: any[] = new Array();\r\n  docPositiveData: any[] = new Array();\r\n  docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDateData: any = {};\r\n  delayCols: TableColumn[];\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  selectedDate: string;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService,\r\n    private _router: Router, private _route: ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.waiting = true;\r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe(elem => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        { label: elem.paymentLabel, routerLink: '/dashboard/analysis/payment', routerLinkActiveOptions: { exact: true } },\r\n        { label: elem.label, routerLink: '/dashboard/analysis/due-date', routerLinkActiveOptions: { exact: true } },\r\n        { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n      ];\r\n\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/dashboard/shared/data' };\r\n      this._analysisService\r\n        .getDueDateAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.accountNumber, null, null, null)\r\n        .subscribe(res => {\r\n\r\n          this.waiting = false;\r\n          this.docDataTable = res.data.docDateReference;\r\n          this.data = res.data.records;\r\n\r\n          this.docDataTable.forEach(element => {\r\n            this.docDateLabels.push(element.monthName + '-' + element.yearName);\r\n            this.docPositiveData.push(element.positive);\r\n            this.docNegativeData.push(element.negative);\r\n            this.docData.push(+element.positive + +element.negative);\r\n          });\r\n\r\n          this.docDateData = {\r\n            labels: this.docDateLabels,\r\n            datasets: [{\r\n              type: 'line',\r\n              label: elem.average,\r\n              borderColor: '#42A5F5',\r\n              borderWidth: 2,\r\n              fill: false,\r\n              data: this.docData\r\n            }, {\r\n              type: 'bar',\r\n              label: elem.positive,\r\n              backgroundColor: '#F5B59B',\r\n              data: this.docPositiveData,\r\n              borderColor: '#E5A58B',\r\n              borderWidth: 2\r\n            }, {\r\n              type: 'bar',\r\n              label: elem.negative,\r\n              backgroundColor: '#FFD795',\r\n              borderColor: '#EFC785',\r\n              data: this.docNegativeData\r\n            }]\r\n          };\r\n\r\n          this.data.forEach(record => {\r\n            let appDate = new Date(record.applicationDate);\r\n            let dueDate = new Date(record.dueDate);\r\n            if (appDate && dueDate && appDate instanceof Date && dueDate instanceof Date)\r\n              record.delay = Math.ceil((appDate?.getTime() - dueDate?.getTime()) / (1000 * 3600 * 24));\r\n          })\r\n\r\n        }, er => {\r\n          this.waiting = false;\r\n        });\r\n    })\r\n\r\n\r\n    this.basicData = {\r\n      labels: this.labels,\r\n      datasets: new Array()\r\n    };\r\n\r\n    this.basicOptions = {\r\n\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            minRotation: 40,\r\n            maxRotation: 90,\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 0,\r\n            stepSize: 50\r\n          }\r\n        }],\r\n      }\r\n    };\r\n\r\n    this.delayCols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNewName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.delay',\r\n        field: 'delay',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['/dashboard/analysis/due-date']);\r\n  }\r\n\r\n  selectBarData(e) {\r\n    debugger;\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.docDateLabels[index];\r\n    let startTemp = this.selectedDate.split('-');\r\n    let startDate = new Date(parseInt(startTemp[1]), parseInt(startTemp[0]) - 1, 1);\r\n    let endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0);\r\n    this.filteredDataTable = this.data.filter(row => (new Date(row.documentDate)).getTime() >= startDate.getTime() &&\r\n    (new Date(row.documentDate)).getTime() <= endDate.getTime());\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Organisation {\r\n    id: number;\r\n    name: string ='';\r\n    logo:  File ;\r\n    email: string = '';\r\n    street: string ='';\r\n    houseNr: number = null;\r\n    city: string ='';\r\n    postCode: number = null;\r\n    country: string ='';\r\n\r\n\r\n    // constructor(name: string, logo: File ,email: string, street: string , houseNr: number , city: string , country: string ) {\r\n    //     this.name = name;\r\n    //     this.logo = logo;\r\n    //     this.email = email;\r\n    //     this.street = street;\r\n    //     this.houseNr = houseNr;\r\n    //     this.city = city;\r\n    //     this.country = country;\r\n\r\n    // }\r\n\r\n    static setOrganisation(organisation) {\r\n\r\n        let result: Organisation = organisation\r\n        return result\r\n    }\r\n\r\n\r\n}","<span class=\"p-text-center\">\r\n    <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"displayData\" optionLabel=\"name\" optionValue=\"value\">\r\n    </p-selectButton>\r\n  </span>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredBlue\" *ngIf=\"displayData == 1\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredRed\" *ngIf=\"displayData == 2\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredGreen\" *ngIf=\"displayData == 3\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\" let-columns>\r\n      <tr>\r\n        <td [attr.colspan]=\"columns.length\">No records found</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-payment-details-month',\r\n  templateUrl: './payment-details-month.component.html',\r\n  styleUrls: ['./payment-details-month.component.sass']\r\n})\r\nexport class PaymentDetailsMonthComponent implements OnInit {\r\n\r\n  @Input('blue') blueData: any[];\r\n  @Input('red') redData: any[];\r\n  @Input('green') greenData: any[];\r\n  @Input('month') month: string; // like: '9-2019'\r\n  startDate: Date;\r\n  endDate: Date;\r\n  filteredBlue: any[];\r\n  filteredRed: any[];\r\n  filteredGreen: any[];\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  cols: TableColumn[];\r\n  displayData = 1;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.month)\r\n      this.updateData(this.month);\r\n\r\n    this.paymentOptions = [\r\n      { name: 'blue', value: 1, color: 'blue !important' },\r\n      { name: 'red', value: 2, color: 'red' },\r\n      { name: 'green', value: 3, color: 'green' },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n  updateData(date: string) {\r\n    let startTemp = date.split('-');\r\n    this.startDate = new Date(parseInt(startTemp[1]), parseInt(startTemp[0]) - 1, 1);\r\n    this.endDate = new Date(this.startDate.getFullYear(), this.startDate.getMonth() + 1, 0);\r\n    this.filteredBlue = this.blueData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n    this.filteredRed = this.redData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n    this.filteredGreen = this.greenData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AmountAnalysis } from '../../model/amountAnalysis';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Bar } from '../../model/bar';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-amount-analysis',\r\n  templateUrl: './amount-analysis.component.html',\r\n  styleUrls: ['./amount-analysis.component.sass'],\r\n})\r\nexport class AmountAnalysisComponent implements OnInit {\r\n  data: AmountAnalysis[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  baseBalance = 500;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.totalBalance',\r\n        field: 'totalBalance',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: AmountAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/amount/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber +\r\n        '/' +\r\n        this.baseBalance,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.tempData = [...this.data];\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid p-mt-2\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-text-right\">\r\n      <label for=\"baseBalance\">{{'AmountAnalysis.baseBalance' | translate}}: </label>\r\n      <!-- <input pInputNumber type=\"number\" name=\"baseBalance\" [(ngModel)]=\"baseBalance\"/> -->\r\n      <p-inputNumber [(ngModel)]=\"baseBalance\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n      </p-inputNumber>\r\n      <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\" class=\"p-ml-2\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12 \" *ngIf=\"selectedProcedure>0\">\r\n    <!-- <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar> -->\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span><p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">{{ row[col.field] | currency:'EUR':''}}</span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Choices } from \"./choices\";\r\n\r\nexport class FileToImport {\r\n\r\n    OrganisationId: number;\r\n    procedureId: number;\r\n    template: any = {};\r\n    defaultTemplate: any = {};\r\n    fileType: Choices;\r\n    fileClass: Choices;\r\n    local: Choices;\r\n    accountType: Choices;\r\n    size: Number;\r\n    orginalName: string;\r\n    nameOnServer: string;\r\n    file: File;\r\n    index: number;\r\n    uploaded: boolean;\r\n    imported: boolean;\r\n    fileHeader: any = {};\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CreditLine } from '../../model/creditLine';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-credit-line',\r\n  templateUrl: './credit-line.component.html',\r\n  styleUrls: ['./credit-line.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class CreditLineComponent implements OnInit {\r\n  procedureName: string;\r\n  prcId: number;\r\n  orgId: number;\r\n  data: CreditLine[];\r\n  cols: TableColumn[];\r\n  originalCreditLine: number;\r\n  originalCreditLineFromDate: Date;\r\n  originalCreditLineToDate: Date;\r\n  newDialog: boolean;\r\n  newRecord: CreditLine;\r\n  // for filter\r\n  searching: boolean = true;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private datepipe: DatePipe,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // debugger;\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLine',\r\n        field: 'creditLine',\r\n        // width: '250',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineFromDate',\r\n        field: 'creditLineFromDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineToDate',\r\n        field: 'creditLineToDate',\r\n        align: 'center'\r\n      },\r\n    ];\r\n    this.searching = true;\r\n    this._liquidityService.getCreditLine(this.orgId, this.prcId).subscribe(\r\n      (res) => {\r\n        res.forEach((val) => {\r\n          val.creditLineFromDate = val.creditLineFromDate\r\n            ? new Date(val.creditLineFromDate)\r\n            : null;\r\n          val.creditLineToDate = val.creditLineToDate\r\n            ? new Date(val.creditLineToDate)\r\n            : null;\r\n          let accountNumber = parseInt(val.accountNumber?.toString(), 10);\r\n          val.accountNumber = isNaN(accountNumber)\r\n            ? val.accountNumber\r\n            : accountNumber;\r\n          let creditLine = parseFloat(val?.creditLine?.toString());\r\n          val.creditLine = isNaN(creditLine)\r\n            ? val.creditLine\r\n            : creditLine;\r\n        });\r\n        this.data = res;\r\n        this.tempData = res;\r\n        // debugger;\r\n        this.searching = false;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  } // end of ng on init\r\n\r\n  editRow(row: CreditLine) {\r\n    this.data\r\n      .filter((row) => row.isEditable)\r\n      .map((r) => {\r\n        r.isEditable = false;\r\n        return r;\r\n      });\r\n    row.isEditable = true;\r\n    this.originalCreditLine = row.creditLine;\r\n    this.originalCreditLineFromDate = row.creditLineFromDate;\r\n    this.originalCreditLineToDate = row.creditLineToDate;\r\n  }\r\n\r\n  save(row: CreditLine) {\r\n    this.searching = true;\r\n    // debugger;\r\n    let tempRow: any = {...row};\r\n    tempRow.creditLineFromDate = this.datepipe.transform(row.creditLineFromDate, 'yyyy-MM-dd');\r\n    tempRow.creditLineToDate = this.datepipe.transform(row.creditLineToDate, 'yyyy-MM-dd');\r\n    this._liquidityService\r\n      .updateCreditLine(this.orgId, this.prcId, tempRow)\r\n      .subscribe(\r\n        (res) => {\r\n          row.isEditable = false;\r\n          let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`,\r\n          });\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(row: CreditLine) {\r\n    row.creditLineFromDate = this.originalCreditLineFromDate;\r\n    row.creditLineToDate = this.originalCreditLineToDate;\r\n    row.creditLine = this.originalCreditLine;\r\n    row.isEditable = false;\r\n  }\r\n\r\n  addRow(row: CreditLine) {\r\n    this.newRecord = new CreditLine();\r\n    this.newRecord.accountName = row.accountName;\r\n    this.newRecord.accountNumber = row.accountNumber;\r\n    this.newDialog = true;\r\n  }\r\n\r\n  deleteRow(row: CreditLine) {\r\n    this.searching = true;\r\n    this._liquidityService\r\n      .deleteCreditLine(this.orgId, this.prcId, row)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = this.data.filter((val) => val.id != row.id);\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is deleted successfully`,\r\n          });\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  hideDialog() {\r\n    this.newDialog = false;\r\n    this.newRecord = new CreditLine();\r\n  }\r\n\r\n  saveCreditLie() {\r\n    this.searching = true;\r\n    this._liquidityService\r\n      .updateCreditLine(this.orgId, this.prcId, this.newRecord)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data.push(this.newRecord);\r\n          this.data = [...this.data];\r\n          this.newDialog = false;\r\n          this.searching = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is inserted successfully in the targeted posting data`,\r\n          });\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (key == 'creditLineFromDate' || key == 'creditLineToDate') {\r\n              // debugger;\r\n              this.data = this.tempData.filter(\r\n                (value) =>\r\n                  value[key]?.getDate() == element.getDate() &&\r\n                  value[key]?.getMonth() == element.getMonth() &&\r\n                  value[key]?.getFullYear() == element.getFullYear()\r\n              );\r\n            } else {\r\n              if (element.length < 3) {\r\n                this.data = this.tempData.filter(\r\n                  (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n                );\r\n              } else {\r\n                this.data = this.tempData.filter((value) =>\r\n                  value[key]?.toLowerCase().includes(element.toLowerCase())\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (key == 'creditLineFromDate' || key == 'creditLineToDate') {\r\n            // debugger;\r\n            this.data = this.tempData.filter(\r\n              (value) =>\r\n                value[key]?.getDate() == element.getDate() &&\r\n                value[key]?.getMonth() == element.getMonth() &&\r\n                value[key]?.getFullYear() == element.getFullYear()\r\n            );\r\n          } else {\r\n            if (element.length < 3) {\r\n              this.data = this.data.filter(\r\n                (value) =>\r\n                  value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.data.filter((value) =>\r\n                value[key]\r\n                  ?.toString()\r\n                  .toLowerCase()\r\n                  .includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">\r\n      {{ procedureName }}\r\n    </h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\">\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"data\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\" *ngIf=\"filtersNo > 0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n          <th>\r\n            {{ \"Liquidity.action\" | translate }}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" *ngIf=\"\r\n                col.field != 'creditLineFromDate' &&\r\n                col.field != 'creditLineToDate'\r\n              \" />\r\n            <p-calendar *ngIf=\"\r\n                col.field == 'creditLineFromDate' ||\r\n                col.field == 'creditLineToDate'\r\n              \" [(ngModel)]=\"criteria[col.field]\" (onSelect)=\"filterChange($event, col.field)\" [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\">\r\n            </p-calendar>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"\r\n                col.field != 'creditLine' &&\r\n                col.field != 'creditLineToDate' &&\r\n                col.field != 'creditLineFromDate'\r\n              \">\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'creditLine'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n\r\n            <span *ngIf=\"\r\n                !row.isEditable &&\r\n                (col.field == 'creditLineToDate' ||\r\n                  col.field == 'creditLineFromDate')\r\n              \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n\r\n            <p-inputNumber *ngIf=\"row.isEditable && col.field == 'creditLine'\" [(ngModel)]=\"row.creditLine\"\r\n              mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\" [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{ 'margin-left': '5%' }\"\r\n              size=\"10\">\r\n            </p-inputNumber>\r\n\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineFromDate'\" [(ngModel)]=\"row.creditLineFromDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineToDate'\" [(ngModel)]=\"row.creditLineToDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.edit' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.save' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.cancel' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.creditLine\"\r\n              pTooltip=\"{{ 'Liquidity.add' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"deleteRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.creditLine\"\r\n              pTooltip=\"{{ 'Liquidity.delete' | translate }}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"newDialog\" [style]=\"{ width: '450px' }\" header=\"{{ 'Liquidity.creditLineLabel' | translate }}\"\r\n  [modal]=\"true\" styleClass=\"p-fluid\">\r\n  <ng-template pTemplate=\"content\">\r\n    <div class=\"p-field\">\r\n      <label for=\"number\">{{ \"Liquidity.accountNumber\" | translate }}:\r\n        {{ newRecord.accountNumber }}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"name\">{{ \"Liquidity.accountName\" | translate }}:\r\n        {{ newRecord.accountName }}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"CreditLine\">{{ \"Liquidity.creditLineLabel\" | translate }}:</label>\r\n      <p-inputNumber [(ngModel)]=\"newRecord.creditLine\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{ width: '40%' }\" size=\"10\"\r\n        class=\"p-ml-4\">\r\n      </p-inputNumber>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineFromDate\">{{\r\n        \"Liquidity.creditLineFromDate\" | translate\r\n        }}</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineFromDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineToDate\">{{\r\n        \"Liquidity.creditLineToDate\" | translate\r\n        }}</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineToDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\">\r\n    <button pButton pRipple label=\"{{ 'Liquidity.cancel' | translate }}\" icon=\"pi pi-times\" class=\"p-button-text\"\r\n      (click)=\"hideDialog()\"></button>\r\n    <button pButton pRipple label=\"{{ 'Liquidity.save' | translate }}\" icon=\"pi pi-check\" class=\"p-button-text\"\r\n      (click)=\"saveCreditLie()\"></button>\r\n  </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.sass']\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{ name: 'Manager', value: 2 }, { name: 'User', value: 3 }];\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.OrganisationId = +localStorage.getItem('organisationId');\r\n  }\r\n  submitHandler() {\r\n    this._userService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\";\r\n\r\n          if (err.status === 400) {\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status === 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status === 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status === 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status === 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/users']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.header' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}}  </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                    <small *ngIf=\"role.invalid && role.untouched \"  class=\"spanCss\"> {{'User_Registration.roleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstname' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}}  </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">  {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}} </small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","\r\n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Password_Reset.header' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandle()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n  \r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'Password_Reset.password' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                    <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Password_Reset.passwordConfirm' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                    <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n      \r\n                  <!-- <button pbutton pripple type=\"button\" label=\"cancel\"\r\n                    class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n                  </button> -->\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                  <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n                  </button>\r\n                </div>\r\n      \r\n              </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.sass'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  passwordObj = {\r\n    selectedPassword: '',\r\n    confirmedPassword: '',\r\n  };\r\n  pass: string;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    public _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  submitHandle() {\r\n    // console.log(this.passwordObj)\r\n    if (\r\n      this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword\r\n    ) {\r\n      let password = this.passwordObj.selectedPassword;\r\n      this._authService.changePassword({ password: password }).subscribe(\r\n        (res) => {\r\n          this._router.navigate(['/']);\r\n        },\r\n        (err) => {}\r\n      );\r\n    } else {\r\n      this._translateService.get('ErrorHandler').subscribe((elem) => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n  }\r\n}\r\n","export class CreditLine {\r\n    id: number;\r\n    accountNumber: string | number;\r\n    accountName: string;\r\n    procedureId: number;\r\n    creditLineFromDate: Date;\r\n    creditLineToDate: Date;\r\n    creditLine: number;\r\n    isEditable: boolean;\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { AnalysisService } from '../../../service/analysis.service';\r\nimport { Bar } from '../../../model/bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TextAnalysis } from '../../../model/textAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../../service/procedure.service';\r\nimport { TableColumn } from '../../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-indexed',\r\n  templateUrl: './text-analysis-indexed.component.html',\r\n  styleUrls: ['./text-analysis-indexed.component.sass']\r\n})\r\nexport class TextAnalysisIndexedComponent implements OnInit {\r\n\r\n\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    this.waiting = true;\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysisIndex(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${(Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWordIndex(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => { }\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n      this.selectedOrganisation +\r\n      '/' +\r\n      this.selectedProcedure +\r\n      '/' +\r\n      row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n      row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n      <!-- <h1 class=\"p-text-center\">Text Analysis with full text index</h1>\r\n    <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n    <h4 class=\"p-text-right\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount? 'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n","<div id=\"prc\" [style]=\"prcStyle\">\r\n  {{prcName}}\r\n</div>\r\n<div>\r\n  <div>\r\n    <p-menubar [model]=\"menuItems\">\r\n      <ng-template pTemplate=\"start\">\r\n        <img src=\"assets/logo.jpg\" height=\"60\" width=\"75\" class=\"p-mr-6\" style=\"border: hidden\" />\r\n        <p-button icon=\"pi pi-bars\" styleClass=\"sidebar-button\" class=\"p-button-raised p-button-outlined\"\r\n          (click)=\"getSideBarItems()\"></p-button>\r\n      </ng-template>\r\n      <!-- <ng-template pTemplate=\"p-menubarsub\">\r\n        <div class=\"p-field\" style=\"margin-right: auto; color: #ffffff;\">\r\n          {{prcName}}\r\n        </div>\r\n      </ng-template> -->\r\n      <ng-template pTemplate=\"end\">\r\n        <div class=\"p-formgroup-inline\" >\r\n          <div class=\"p-field\">\r\n            <select #langSelect (change)=\"_translateService.use(langSelect.value)\" class=\"\r\n                layout-topbar-action\r\n                p-d-flex p-dir-row p-jc-center p-ai-center p-px-2\r\n                rounded-circle\r\n                ng-tns-c186-0\r\n                p-ripple\r\n              \" style=\"\r\n                height: 60px;\r\n                background-color: #58585a;\r\n                color: #ffffff;\r\n                border: none;\r\n              \" [(ngModel)]=\"browserLang\">\r\n              <option *ngFor=\"let lang of _translateService.getLangs(); index as i\" value=\"{{ lang }}\">\r\n                {{ lang | uppercase }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"p-field\">\r\n            <a pripple class=\"\r\n                layout-topbar-action\r\n                p-d-flex p-dir-row p-jc-center p-ai-center p-px-2\r\n                rounded-circle\r\n                ng-tns-c186-0\r\n                p-ripple\r\n              \">\r\n              <img src=\"assets/profile.png\" style=\"\r\n                  width: 60px;\r\n                  height: 60px;\r\n                  background-color: none;\r\n                  color: none;\r\n                \" class=\"p-mr-2\" (click)=\"menu.toggle($event)\" />\r\n              <span class=\"p-link\"></span>\r\n            </a>\r\n            <p-menu #menu [popup]=\"true\" [model]=\"userPages\"></p-menu>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      \r\n    </p-menubar>\r\n  </div>\r\n  <div>\r\n    <p-sidebar [(visible)]=\"sideBarShow\" class=\"sideBarWidth\" [showCloseIcon]=\"false\">\r\n      <h2 style=\"font-weight: lighter\" class=\"p-text-center\">{{ username }}</h2>\r\n      <p style=\"font-weight: lighter\" *ngIf=\"currentProcedureStatus\" class=\"p-text-center {{ currentProcedureStatus }}\">\r\n        {{ 'sideBarMenu.' + currentProcedureStatus | translate }}</p>\r\n      <p-menu #menu [model]=\"sidebarItems\" [style]=\"{ width: '300px', border: 'none' }\"></p-menu>\r\n    </p-sidebar>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, Injectable, OnInit, ViewChild } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\nimport { HostListener } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.sass'],\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  sideBarShow: boolean = false;\r\n  menuItems: MenuItem[] = [];\r\n  userPages: MenuItem[] = [];\r\n  sidebarItems: MenuItem[] = [];\r\n  username: string = localStorage.getItem('username');\r\n  role: string = localStorage.getItem('role');\r\n  browserLang: string = 'de';\r\n  orgId: number;\r\n  prcId: number;\r\n  @ViewChild('menu') menu: any;\r\n  currentProcedureStatus: string;\r\n  prcNameObserve: Observable<string>;\r\n  prcName: string = localStorage.getItem('currentProcedureName');\r\n  scrWidth: number;\r\n  prcStyle: string;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _router: Router\r\n  ) {\r\n    this._translateService.addLangs(['de', 'en']);\r\n    this._translateService.setDefaultLang('de');\r\n    this.browserLang = this._translateService.getBrowserLang();\r\n    this._translateService.use(this.browserLang.match(/de|en/) ? this.browserLang : 'de');\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    // this.scrHeight = window.innerHeight;\r\n    this.scrWidth = window.innerWidth;\r\n      this.prcStyle = 'position: fixed; z-index: 999; top: 30px; right:' + (this.scrWidth / 2 - 25) + 'px; color: #ffffff; height: 100px; font-size: x-large;';\r\n    // let elem: HTMLElement = document.getElementById('navbar-title');\r\n    // elem?.setAttribute(\"style\", `margin-left: ${this.scrWidth/3} !important`);\r\n  }\r\n\r\n\r\n  updateLocal() {\r\n    debugger;\r\n    this.prcName = localStorage.getItem('currentProcedureName');\r\n    let elem: HTMLElement = document.getElementById('prc');\r\n    elem.innerHTML = this.prcName;\r\n    this.prcStyle = 'position: fixed; z-index: 999; top: 30px; right:' + (this.scrWidth / 2 - this.prcName?.length) + 'px; color: #ffffff; height: 100px; font-size: x-large;';\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.username = localStorage.getItem('username');\r\n    this.role = localStorage.getItem('role');\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n\r\n\r\n    this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this._translateService.use(event.lang);\r\n      localStorage.setItem('lang', event.lang);\r\n    });\r\n    this.userPages = [\r\n      {\r\n        label: await this._translateService.get('setting').toPromise(),\r\n        icon: 'pi pi-globe',\r\n        visible:\r\n          localStorage.getItem('role') == 'Admin' ||\r\n          localStorage.getItem('role') == 'Manager',\r\n      },\r\n      {\r\n        label: await this._translateService.get('logout').toPromise(),\r\n        icon: 'pi pi-fw pi-power-off',\r\n        command: () => {\r\n          this.logout();\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  getSideBarItems() {\r\n    this.sideBarShow = true;\r\n    this.currentProcedureStatus = localStorage.getItem('currentProcedureStatus');\r\n    this._translateService.get('sideBarMenu').subscribe((elem) => {\r\n      if (this.role === 'Admin') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Administrator',\r\n            items: [\r\n              {\r\n                label: 'Import',\r\n                icon: 'pi pi-file',\r\n                routerLink: ['/dashboard/admin/import'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addUser,\r\n                icon: 'pi pi-user-plus',\r\n                routerLink: ['/dashboard/admin/admin/add'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addOrganisation,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/organisation/add'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addDocumentType,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/document-type'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addAccountType,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/accountType'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.resetPassword,\r\n                icon: 'pi pi-lock',\r\n                routerLink: ['/dashboard/resetPassword'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n\r\n              {\r\n                label: elem.preCalculateAnalysis,\r\n                icon: 'pi pi-flag',\r\n                routerLink: ['/dashboard/admin/pre-calc'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n\r\n            ],\r\n          },\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.organisations,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/admin/dashboard'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.data,\r\n                icon: 'pi  pi-table',\r\n                routerLink: ['/dashboard/shared/data'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-file',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.dueDateAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/due-date'],\r\n                disabled: localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      } else if (this.role === 'Manager') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.procedures,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/shared/user/procedures'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.users,\r\n                icon: 'pi pi-users',\r\n                routerLink: ['/dashboard/shared/user/users'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.table,\r\n                icon: 'pi pi-table',\r\n                routerLink: ['/dashboard/data'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-inbox',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      } else if (this.role === 'User') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.procedures,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/shared/user/procedures'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.table,\r\n                icon: 'pi pi-table',\r\n                routerLink: ['/dashboard/data'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-inbox',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this._router.navigate(['/']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDataTable(companyCode:string, offset:number, limit: number) {\r\n    return this._http.get(this._thisURL + '/getPostingData/' + companyCode + '/' + offset + '/' + limit);\r\n  }\r\n\r\n  getDefaultSusaDateRange(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + `/susa/defaultDate/${orgId}/${prcId}`);\r\n  }\r\n\r\n  getSusa(orgId: number, prcId: number, fromDate: string, toDate: string, criteria: any) {\r\n    let url = this._thisURL + `/susa/${orgId}/${prcId}`;\r\n    if (fromDate && toDate) {\r\n      url += `/${fromDate}/${toDate}`\r\n    }\r\n    return this._http.get<any>(url, { params: criteria });\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h3 class=\"p-text-center\">{{accountName}}</h3>\r\n    <!-- <p-messages></p-messages> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton\r\n        [options]=\"detailsOptions\"\r\n        (onChange)=\"changeData($event.value)\"\r\n        optionLabel=\"name\"\r\n        optionValue=\"value\"\r\n        [(ngModel)]=\"detailsOption\"\r\n      >\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{'height': '5px'}\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"Xlsx\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{'width': (col.width? col.width : 200) +'px'}\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{col.field}}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{col.header | translate}}<p-sortIcon\r\n              field=\"{{col.field}}\"\r\n            ></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{col.align}}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.amountRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.amountRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.amountRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field] | currency:'EUR':'' }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\"\r\n            >\r\n              {{ row[col.field] | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <!-- All records table... back-end filter and pagination -->\r\n\r\n    <p-table\r\n      #dtall\r\n      [value]=\"allRecordData\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n      [lazy]=\"true\"\r\n      [customSort]=\"true\"\r\n      (onLazyLoad)=\"sort($event)\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"Xlsx\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-7\">\r\n            <!-- Limit options -->\r\n            <p-dropdown\r\n              [options]=\"pageLimitSizes\"\r\n              optionValue=\"value\"\r\n              optionLabel=\"value\"\r\n              [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\"\r\n              class=\"p-mr-2\"\r\n            ></p-dropdown>\r\n            <!-- Go to First page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go previous -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.previous' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Page number -->\r\n            <input\r\n              pInputText\r\n              type=\"number\"\r\n              min=\"1\"\r\n              class=\"pageNrInput p-mr-2\"\r\n              (input)=\"pageNrChange($any($event.target).value)\"\r\n              [value]=\"pageNr\"\r\n              [placeholder]=\"pageNr\"\r\n            />\r\n            <!-- Go to next Page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go to last page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- dispalyed data of total count -->\r\n            {{displayedDataCount}} of {{totalCount}}\r\n            <!-- Clear filter -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-filter-slash\"\r\n              (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\"\r\n              pTooltip=\"{{'Data_Table.clearFilter' | translate}}\"\r\n              *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{'width': (col.width? col.width : 200) +'px'}\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{col.field}}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"backCriteria[col.field]\"\r\n              [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChangeBack($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{col.align}}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.amountRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.amountRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.amountRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field] | currency:'EUR':'' }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\"\r\n            >\r\n              {{ row[col.field] | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AmountAnalysisDetails } from 'src/app/shared/model/amountAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'amount-analysis-details',\r\n  templateUrl: './amount-analysis-details.html',\r\n  styleUrls: ['./amount-analysis-details.sass'],\r\n})\r\nexport class AmountAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: AmountAnalysisDetails[] = new Array();\r\n  allRecordData: AmountAnalysisDetails[] = new Array();\r\n  waiting: boolean;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  baseBalance: number;\r\n  procedureName: any;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: AmountAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  accountName: string;\r\n  // for pagination ends\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _messageService: MessageService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _exportDataService: ExportDataService,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.baseBalance = +this._route.snapshot.paramMap.get('baseBalance');\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // {label: 'Analysis'},\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount/' + this.baseBalance },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'User Relevant', value: 2 },\r\n      { name: 'All', value: 3 },\r\n    ];\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'amountRelevant',\r\n        width: '6',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'amountRelevantComment',\r\n        width: '35',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          if (this.data.length > 0) {\r\n            this.accountName = this.data[0].accountName;\r\n          }\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/amount/' + this.baseBalance]);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { amount_analysis: worksheet },\r\n        SheetNames: ['amount_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'amount_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  selectRow(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.amountRelevant) {\r\n      row.amountRelevant = false;\r\n      row.amountRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['amountRelevant'] = false;\r\n        this.selected[index]['amountRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.amountRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['amountRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.amountRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['amountRelevant'] = true;\r\n      this.selected[index]['amountRelevantComment'] = row.amountRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantAmountAnalysis(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records updated successfully!',\r\n          });\r\n        },\r\n        (er) => {}\r\n      );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsRelevant(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsByAccount(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.prcId;\r\n    this._exportDataService\r\n      .exportXLSX('amount_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Amount_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (error) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n    this.filtersNo = 0;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<p-table\r\n  #dtmaxb\r\n  dataKey=\"accountNumber\"\r\n  [value]=\"data\"\r\n  [resizableColumns]=\"true\"\r\n  styleClass=\"p-datatable-gridlines\"\r\n  [columns]=\"cols\"\r\n  responsive=\"true\"\r\n  [scrollable]=\"true\"\r\n  scrollHeight=\"350px\"\r\n  [reorderableColumns]=\"true\"\r\n  [loading]=\"waiting\"\r\n  [lazy]=\"true\"\r\n  [customSort]=\"true\"\r\n  (onLazyLoad)=\"sort($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Limit options -->\r\n      <p-dropdown\r\n        [options]=\"pageLimitSizes\"\r\n        optionValue=\"value\"\r\n        optionLabel=\"label\"\r\n        [(ngModel)]=\"limit\"\r\n        (onChange)=\"limitChange($event)\"\r\n        class=\"p-mr-2\"\r\n      ></p-dropdown>\r\n      <!-- Go to First page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-left\"\r\n        (click)=\"firstPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go previous -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-left\"\r\n        (click)=\"previousPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Page number -->\r\n      <input\r\n        pInputText\r\n        type=\"number\"\r\n        min=\"1\"\r\n        class=\"pageNrInput p-mr-2\"\r\n        (input)=\"pageNrChange($any($event.target).value)\"\r\n        [value]=\"pageNr\"\r\n        [placeholder]=\"pageNr\"\r\n      />\r\n      <!-- Go to next Page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-right\"\r\n        (click)=\"nextPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go to last page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-right\"\r\n        (click)=\"lastPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n\r\n      <!-- dispalyed data of total count -->\r\n      {{ displayedDataCount }} of {{ totalCount }}\r\n      <!-- Clear filter -->\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-filter-slash\"\r\n        (click)=\"clearFilter()\"\r\n        class=\"p-ml-6 clearFilter\"\r\n        pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n        *ngIf=\"filtersNo > 0\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\" let-columns>\r\n    <colgroup>\r\n      <col *ngFor=\"let col of columns\" />\r\n      <col />\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\" let-columns>\r\n    <tr>\r\n      <th\r\n        pSortableColumn=\"{{ col.field }}\"\r\n        pResizableColumn\r\n        pReorderableColumn\r\n        class=\"p-text-{{ col.align }}\"\r\n        *ngFor=\"let col of columns\"\r\n      >\r\n        <span pTooltip=\"{{ col.header | translate }}\">\r\n          {{ col.header | translate }}\r\n        </span>\r\n        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n      </th>\r\n      <th>Details</th>\r\n    </tr>\r\n    <tr>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountNumber']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountNumber')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountName']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountName')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n    <tr [pSelectableRow]=\"row\">\r\n      <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n        <span *ngIf=\"col.field == 'totalBalance'\">\r\n          {{ row.totalBalance | currency: \"EUR\":\"\" }}\r\n        </span>\r\n        <span\r\n          *ngIf=\"col.field != 'totalBalance'\"\r\n          pTooltip=\"{{ row[col.field] }}\"\r\n        >\r\n          {{ row[col.field] }}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-list\"\r\n          class=\"p-button-rounded p-button-warning\"\r\n          (click)=\"goToDetails(row)\"\r\n          pTooltip=\"Details\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis',\r\n  templateUrl: './creditor-analysis.component.html',\r\n  styleUrls: ['./creditor-analysis.component.sass'],\r\n})\r\nexport class CreditorAnalysisComponent implements OnInit {\r\n  cols: TableColumn[];\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: any;\r\n  data: any;\r\n  accountNumber: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  criteria: any = {\r\n    limit: 25,\r\n    offset: 0,\r\n    orderBy: 'accountNumber',\r\n    sortOrder: 1,\r\n  };\r\n  pageLimitSizes = [{ value: 25, label: '25' }, { value: 50, label: '50' }, { value: 100, label: '100' }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/creditor' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.cols = [\r\n        {\r\n          header: elem.accountNumber,\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.accountName,\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.count,\r\n          field: 'totlaCount',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.sum,\r\n          field: 'totalBalance',\r\n          align: 'right',\r\n        },\r\n      ];\r\n    });\r\n\r\n    // this.getData();\r\n  } // end of ng o0n init\r\n\r\n  filterChange(query, colName): void {\r\n    this.getData();\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/creditor/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key] && key != 'offset') {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length - 4;\r\n    this._analysisService\r\n      .getCreditorAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.data = res.data;\r\n          this.totalCount = res.count[0]['FOUND_ROWS()'];\r\n          this.displayedDataCount =\r\n            this.totalCount > this.limit ? this.limit : this.totalCount;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField? event.sortField : 'accountNumber';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.criteria.offset -= +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false\r\n  };\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private _authSrvc: AuthService,\r\n    private _messageService: MessageService,\r\n    private _translateService: TranslateService\r\n  ) { }\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    // return next.handle(request);\r\n    const token = this._authSrvc.getToken();\r\n    const tokenizedReq = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    return new Observable((observer) => {\r\n      next.handle(tokenizedReq).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          // debugger;\r\n          if (res instanceof HttpResponse) {\r\n            observer.next(res);\r\n          }\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          // debugger;\r\n          if (err.error instanceof ErrorEvent || err.error.fromImport) {\r\n            // console.log('this is client side error');\r\n            // errorMsg = `Error: ${error.error.message}`;\r\n          } else {\r\n            this._translateService\r\n              .get('ErrorHandler.' + err.error.msg)\r\n              .toPromise()\r\n              .then((errorMsg) => {\r\n                this._messageService.add({\r\n                  severity: 'error',\r\n                  summary: 'ERROR!',\r\n                  life: 10000,\r\n                  detail: errorMsg,\r\n                });\r\n              });\r\n          }\r\n          observer.error(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import {  TranslateService } from '@ngx-translate/core';\r\n\r\nexport class Choices {\r\n    name: string = 'Select Template';\r\n    value: number = 1;\r\n\r\n    constructor(name: string, value: number) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n\r\n    static getTemplates(): Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP_W-mobel\", 1));\r\n        result.push(new Choices(\"SAP_Cinram\", 2));\r\n        result.push(new Choices(\"Other\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getFileType() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Excel\", 1));\r\n        result.push(new Choices(\"Csv\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getFileClass() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Accounts\", 1));\r\n        result.push(new Choices(\"Posting\", 2));\r\n        result.push(new Choices(\"Helper\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getLocalization() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"en_US\", 1));\r\n        result.push(new Choices(\"de_DE\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getAccountTypes() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Creditor\", 1));\r\n        result.push(new Choices(\"Debtor\", 2));\r\n        result.push(new Choices(\"GLA_Account\", 3));\r\n        result.push(new Choices(\"Other\", 4));\r\n        return result;\r\n    }\r\n    static getDataSources() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP\", 1));\r\n        result.push(new Choices(\"Datev\", 2));\r\n        result.push(new Choices(\"Lexware\", 3));\r\n        return result;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganisationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/organisation';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get() {\r\n    return this._http.get<any>(this._thisURL);\r\n  }\r\n\r\n  insert(p: FormData) {\r\n    return this._http.post<any>(this._thisURL, p);\r\n  }\r\n\r\n  getOne(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  update(p: FormData, id: number) {\r\n    return this._http.put<any>(this._thisURL + '/' + id, p);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this._http.delete<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  getProcedures(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id + '/procedures')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  \r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  login(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/login', data);\r\n  }\r\n\r\n  resetPassword(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/resetPassword', data);\r\n  }\r\n\r\n  changePassword(data: {password: string}) {\r\n    return this._http.post<any>(this._thisURL + '/profile/resetPassword', data);\r\n  }\r\n\r\n\r\n  adminRegistration(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/adminRegistration', data);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getRole() {\r\n    return localStorage.getItem('role');\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h3 class=\"p-text-center\">{{ keyword }}</h3>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button> -->\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <!-- <th></th> -->\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'textRelevant'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <!-- <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor> -->\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { TextAnalysisDetails } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-word-details',\r\n  templateUrl: './text-analysis-word-details.component.html',\r\n  styleUrls: ['./text-analysis-word-details.component.sass'],\r\n})\r\nexport class TextAnalysisWordDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  keyword: string;\r\n  data: TextAnalysisDetails[] = new Array();\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private _translateService: TranslateService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      {\r\n        label: 'Text Analysis',\r\n        routerLink: '/dashboard/analysis/text/true',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n      {\r\n        label: 'Details',\r\n        routerLink: this._router.url,\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: 'Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n    this.waiting = true;\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.keyword = this._route.snapshot.paramMap.get('key');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'textRelevant',\r\n        width: '6',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'textRelevantComment',\r\n        width: '35',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.reference',\r\n        field: 'reference',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textPosting',\r\n        field: 'textPosting',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textHeader',\r\n        field: 'textHeader',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n\r\n    this._analysisService\r\n      .getTextAnalysisWordDetails(this.orgId, this.prcId, this.keyword)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this.waiting = false;\r\n      });\r\n\r\n\r\n  } // end of ng on init\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/text/true']);\r\n  }\r\n\r\n\r\n  async exportExcel() {\r\n\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key) && key != 'id' && key != 'procedureId') {\r\n          let translatedKey = await this._translateService.get('DataTableColumns.' + key).toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (element[key] &&\r\n            (key == 'balance' || key == 'debitAmount' || key == 'creditAmount' || key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' || key == 'taxAmountCredit' || key == 'StartingBalance')) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n              }\r\n\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (element[key] &&\r\n            (key == 'documentDate' || key == 'postingDate' || key == 'dueDate' || key == 'dueDateNew' ||\r\n              key == 'executionDate' || key == 'applicationDate' || key == 'StartingBalanceDate')) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString('de-DE', {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n              });\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n          }\r\n          // end of formatting\r\n          \r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = { Sheets: { 'text_analysis': worksheet }, SheetNames: ['text_analysis'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"text_analysis\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.waiting = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.waiting = false;\r\n  }\r\n\r\n\r\n} // end of class\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Roles } from \"../../shared/model/roles\";\r\nimport { Titles } from \"../../shared/model/titles\";\r\nimport { Users } from \"../../shared/model/users\";\r\nimport { AdminRegistrationService } from \"../service/admin-registration.service\";\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-registration',\r\n  templateUrl: './admin-registration.component.html',\r\n  styleUrls: ['./admin-registration.component.sass']\r\n})\r\nexport class AdminRegistrationComponent implements OnInit {\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, public _translateService: TranslateService,\r\n      private _adminRegistrationService: AdminRegistrationService, private _orgService : OrganisationService) { }\r\n\r\n\r\n  orgs: [] = [];\r\n  titles: Titles[] = Titles.getTitles();\r\n  //roles: Roles[] = Roles.getRoles();\r\n  roles = [{name:'Admin', value: 1}];\r\n\r\n\r\n  userModel: Users;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.RoleId = 1;\r\n    \r\n    this._orgService.get()\r\n    .subscribe(\r\n      (data) => {\r\n        this.orgs = data;\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  submitHandler() {\r\n    this._adminRegistrationService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/dashboard/admin/dashboard']); \r\n\r\n  }\r\n}\r\n"," <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'User_Registration.header' | translate}}</div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\" *ngIf=\"userModel.role==='Manager' || userModel.role==='User'\">\r\n                    <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\" > {{'User_Registration.organisation' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                      <p-dropdown placeholder=\"{{'User_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n                        #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n                        [showClear]=\"true\" [(ngModel)]=\"userModel.OrganisationId\">\r\n                        <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                          <span\r\n                            class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                          </span>\r\n                        </div>\r\n                      </p-dropdown>\r\n                      <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'User_Registration.organisationErrorMsg' | translate}} </small>\r\n          \r\n                    </div>\r\n                  </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}} </small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" maxlength=\"25\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" maxlength=\"50\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  addUser(user) {\r\n    // console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user/add', user);\r\n  }\r\n\r\n  editUser(user) {\r\n    // console.log(user)\r\n     return this._http.put<any>(this._thisURL + '/user/edit', user);\r\n  }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getUsers(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId );\r\n  }\r\n}\r\n","\r\nexport class Titles {\r\n\r\n    name: string = \"\"\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    static getTitles(): Titles[] {\r\n        let result: Titles[] = [];\r\n\r\n        result.push(new Titles(\"Frau\"));\r\n        result.push(new Titles(\"Herr\"));\r\n        return result;\r\n    }\r\n\r\n\r\n}","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n    <!-- <p-messages></p-messages> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!waiting\"\r\n        (onDataSelect)=\"selectBarData($event)\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-7\" *ngIf=\"selectedDate\">\r\n      <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n    </div>\r\n    <div class=\"p-col-5 p-text-right\" *ngIf=\"selectedDate\">\r\n      <button type=\"button\" pButton pRipple label=\"All\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\" style=\"margin-top: 20px;\"></button>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n      <app-payment-details-month  [hidden]=\"!selectedDate\" [month]=\"selectedDate\" [blue]=\"blueData\" [red]=\"redData\" [green]=\"greenData\" #child>\r\n      </app-payment-details-month>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-grid\" *ngIf=\"!selectedDate\" >\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"detailsOptions\" (onChange)=\"changeData($event.value)\" optionLabel=\"name\"\r\n        optionValue=\"value\" [(ngModel)]=\"detailsOption\">\r\n      </p-selectButton>\r\n    </span>\r\n    <div *ngIf=\"detailsOption == 1\">\r\n      <span class=\"p-text-center\">\r\n        <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"displayData\" optionLabel=\"name\" optionValue=\"value\">\r\n        </p-selectButton>\r\n      </span>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"blueData\" *ngIf=\"displayData == 1\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\" class=\"p-button-primary\"\r\n                label=\"{{ 'Analysis.back' | translate }} \" pTooltip=\"{{ 'Analysis.back' | translate }} \"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(blueData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"redData\" *ngIf=\"displayData == 2\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(redData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"greenData\" *ngIf=\"displayData == 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(greenData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\" let-columns>\r\n          <tr>\r\n            <td [attr.colspan]=\"columns.length\">No records found</td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"detailsOption != 1\">\r\n      <p-table #dtrelevant dataKey=\"id\" [value]=\"relevantData\" *ngIf=\"detailsOption != 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(relevantData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" *ngIf=\"detailsOption == 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [lazy]=\"true\" [customSort]=\"true\" (onLazyLoad)=\"sort($event)\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n            <div class=\"p-col-7\">\r\n              <!-- Limit options -->\r\n              <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n                (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n              <!-- Go to First page -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n                (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go previous -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\"\r\n                (click)=\"previousPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Page number -->\r\n              <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\"\r\n                (input)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n              <!-- Go to next Page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n                (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go to last page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n                (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n\r\n              <!-- dispalyed data of total count -->\r\n              {{ displayedDataCount }} of {{ totalCount }}\r\n              <!-- Clear filter -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\" *ngIf=\"filtersNo > 0\"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"\r\n                  col.field != 'paymentRelevant' &&\r\n                  col.field != 'accountNumber' &&\r\n                  col.field != 'accountName'\r\n                \" pInputText type=\"text\" [(ngModel)]=\"backCriteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeBack($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row.paymentRelevantComment }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <br /><br /><br />\r\n  </div>\r\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport {\r\n  PaymentData,\r\n  PaymentDetailsRecord,\r\n} from 'src/app/shared/model/paymentAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport { PaymentAnalysisDetailsData } from 'src/app/shared/model/paymentAnalysis';\r\nimport * as FileSaver from 'file-saver';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-payment-analysis-details',\r\n  templateUrl: './payment-analysis-details.component.html',\r\n  styleUrls: ['./payment-analysis-details.component.sass'],\r\n})\r\nexport class PaymentAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  data: PaymentData[];\r\n  blueData: PaymentDetailsRecord[] = new Array();\r\n  redData: PaymentDetailsRecord[] = new Array();\r\n  greenData: PaymentDetailsRecord[] = new Array();\r\n  relevantData: PaymentAnalysisDetailsData[] = new Array();\r\n  allRecordData: PaymentAnalysisDetailsData[] = new Array();\r\n  basicOptions: any;\r\n  basicData: any;\r\n  blue: any[] = new Array();\r\n  red: any[] = new Array();\r\n  green: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  accountName: string = '';\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  accountNumber: string;\r\n  waiting: boolean = true;\r\n  procedureName: string;\r\n  displayData: number;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  selected: PaymentAnalysisDetailsData[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  selectedDate: any;\r\n  // for pagination ends\r\n\r\n  @ViewChild('child') child: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _exportDataService: ExportDataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._translateService.get('PaymentAnalysis').subscribe((elem) => {\r\n      this.waiting = true;\r\n      this.displayData = 1;\r\n      this.detailsOption = 1;\r\n\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        {\r\n          label: elem.label,\r\n          routerLink: '/dashboard/analysis/payment',\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              // debugger;\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 40,\r\n                maxRotation: 90,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 0,\r\n                maxRotation: 0,\r\n                callback: function (label, index, values) {\r\n                  let currencyPipe = new CurrencyPipe('de');\r\n                  label = currencyPipe.transform(label, 'EURO', '');\r\n                  return label;\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n      this.backCriteria = {\r\n        limit: 25,\r\n        offset: 0,\r\n        orderBy: 'id',\r\n        sortOrder: 1,\r\n      };\r\n\r\n      this.paymentOptions = [\r\n        { name: elem.blue, value: 1, color: 'blue !important' },\r\n        { name: elem.red, value: 2, color: 'red' },\r\n        { name: elem.green, value: 3, color: 'green' },\r\n      ];\r\n      this.detailsOptions = [\r\n        { name: elem.sysRelevant, value: 1 },\r\n        { name: elem.userRelevant, value: 2 },\r\n        { name: elem.allRelevant, value: 3 },\r\n      ];\r\n\r\n      this.frozenCols = [\r\n        {\r\n          header: '',\r\n          field: 'paymentRelevant',\r\n          width: '6',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.comment,\r\n          field: 'paymentRelevantComment',\r\n          width: '35',\r\n          align: 'left',\r\n        },\r\n      ];\r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.basicData.datasets.push(\r\n        {\r\n          label: elem.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.blue,\r\n        },\r\n        {\r\n          label: elem.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.red,\r\n        },\r\n        {\r\n          label: elem.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.green,\r\n        }\r\n      );\r\n    });\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center',\r\n      },\r\n      // {\r\n      //   header: 'DataTableColumns.ledgerId',\r\n      //   field: 'ledgerId',\r\n      //   align: 'center',\r\n      // },\r\n      // {\r\n      //   header: 'DataTableColumns.executionDate',\r\n      //   field: 'executionDate',\r\n      //   align: 'center',\r\n      // },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this._analysisService\r\n      .getPaymentAnalysisDetails(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res.data.data;\r\n          this.startDate = res.dateRange[0].mindate;\r\n          this.endDate = res.dateRange[0].maxdate;\r\n          this.blueData = res.data.blue;\r\n          this.redData = res.data.red;\r\n          this.greenData = res.data.green;\r\n          if (!this.accountName) {\r\n            if (this.blueData.length > 0) {\r\n              this.accountName = this.blueData[0].accountName;\r\n            } else if (this.redData.length > 0) {\r\n              this.accountName = this.redData[0].accountName;\r\n            } else if (this.greenData.length > 0) {\r\n              this.accountName = this.greenData[0].accountName;\r\n            }\r\n          }\r\n\r\n          if (!(this.labels.length > 0)) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n              const element = this.data[i];\r\n              this.labels.push(element.monthName + '-' + element.yearName);\r\n              this.blue.push(Math.abs(element.blue.value));\r\n              this.green.push(Math.abs(element.green.value));\r\n              this.red.push(Math.abs(element.red.value));\r\n            }\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  selectRow(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.paymentRelevant) {\r\n      row.paymentRelevant = false;\r\n      row.paymentRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['paymentRelevant'] = false;\r\n        this.selected[index]['paymentRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.paymentRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['paymentRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.paymentRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['paymentRelevant'] = true;\r\n      this.selected[index]['paymentRelevantComment'] =\r\n        row.paymentRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantPaymentAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.getData();\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records set as relevant successfully!',\r\n          });\r\n        },\r\n        (er) => {}\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/payment/']);\r\n  }\r\n\r\n  async exportExcel(data) {\r\n    let translatedData = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n      let element = data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { payment_analysis: worksheet },\r\n        SheetNames: ['payment_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'payment_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getData();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getData();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsRelevant(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.relevantData = res;\r\n          // this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsByAccount(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.selectedProcedure;\r\n    this._exportDataService\r\n      .exportXLSX(\r\n        'payment_analysis',\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        criteriaWithLang\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Payment_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (err) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n\r\n  selectBarData(e) {\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    this.child.updateData(this.selectedDate);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.sass']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{'Notfound.errorMsg' | translate}}</p>\r\n\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<p-table [value]=\"procedures\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n  responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Add Procedure -->\r\n      <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addProcedure()\"\r\n        class=\"p-button-rounded p-button-primary\"\r\n        pTooltip=\"{{'Procedure_Registration.addProedurePlaceHolder' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\">\r\n    <colgroup>\r\n      <col *ngFor=\"let col of cols\">\r\n      <col>\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n        {{ col.header | translate}}\r\n      </th>\r\n      <th *ngIf=\"role!=='User'\" style=\"width: 10em\"> </th>\r\n\r\n    </tr>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"body\" let-procedure>\r\n    <tr>\r\n      <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n        <i *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'true'\" class=\"pi pi-check checkIcon\"></i> <i\r\n          *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'false'\" class=\"pi pi-times closeIcon\"></i>\r\n        {{ (procedure[col.field]?.toString().toLowerCase().trim() != 'true' &&\r\n        procedure[col.field]?.toString().toLowerCase().trim() != 'false') ? procedure[col.field] : ''}}\r\n      </td>\r\n      <td style=\"width: 10em\" class=\"p-text-right\">\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" [disabled]=\"procedure.status=='NOT_IMPORTED' || !procedure.data\"\r\n          class=\"p-button-rounded p-button-warning headerColor\" pTooltip=\"{{'Admin_Dashboard.show' | translate}}\"\r\n          tooltipPosition=\"bottom\" (click)=\"dataTable(procedure)\"></button> &nbsp;\r\n        <button  *ngIf=\"role ==='Admin'\" pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'Procedure_Registration.editProedurePlaceHolder' | translate}}\" tooltipPosition=\"bottom\"\r\n          (click)=\"editProcedure(procedure)\"></button> &nbsp;\r\n        <button  *ngIf=\"role ==='Admin'\" pButton (click)=\"reset(procedure)\" icon=\"pi pi-times\" pRipple class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'Admin_Dashboard.delete' | translate}}\"  tooltipPosition=\"bottom\" [disabled]=\"procedure.status=='NOT_IMPORTED'\"></button>\r\n      </td>\r\n\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"4\">{{'Procedure_Registration.NoProceduresFound' | translate}}</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../service/procedure.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.sass']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId');\r\n  role = localStorage.getItem('role');\r\n  procedures: [] = [];\r\n  cols: { header, field, align }[] = new Array();\r\n  check = '<i class=\"pi pi-check checkIcon\"></i>';\r\n\r\n  constructor(private _translateService: TranslateService, private _router: Router, private _procedureService: ProcedureService,\r\n    private _confirmationService: ConfirmationService, private _messageService: MessageService,\r\n    private navbar: NavBarComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this._procedureService\r\n      .getProcedures(this.organisationId)\r\n      .subscribe(\r\n        (data) => {\r\n          this.procedures = data;\r\n\r\n        },\r\n        (error) => console.log(error),\r\n        () => { }\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Procedure_Registration.name',\r\n        field: 'name',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.datasource',\r\n        field: 'dataSource',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.data',\r\n        field: 'data',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.analysis',\r\n        field: 'analysis',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.status',\r\n        field: 'status',\r\n        align: 'center'\r\n      },\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n\r\n  dataTable(prc) {\r\n    localStorage.setItem('currentProcedureId', prc.id);\r\n    localStorage.setItem('currentProcedureName', prc.name);\r\n    localStorage.setItem('currentProcedureData', prc.data);\r\n    localStorage.setItem('currentProcedureAnalysis', prc.analysis);\r\n    localStorage.setItem('currentProcedureStatus', prc.status);\r\n    localStorage.setItem('currentProcedureAmount', prc.amount);\r\n    localStorage.setItem('currentProcedureText_word', prc.text_word);\r\n    localStorage.setItem('currentProcedureText_account', prc.text_account);\r\n    localStorage.setItem('currentProcedureCredit', prc.credit);\r\n    localStorage.setItem('currentProcedurePayment', prc.payment);\r\n    localStorage.setItem('currentProcedureDueDate', prc.due_date);\r\n    localStorage.setItem('currentProcedureLiquidity', prc.liquidity);\r\n    localStorage.setItem('currentProcedureDocType', prc.docType);\r\n    this.navbar.updateLocal();\r\n    this._router.navigate(['/dashboard/shared/data']);\r\n\r\n  }\r\n  editProcedure(prc) {\r\n    localStorage.setItem('currentProcedureId', prc.id);\r\n    localStorage.setItem('currentProcedureName', prc.name);\r\n    localStorage.setItem('currentProcedureData', prc.data);\r\n    localStorage.setItem('currentProcedureAnalysis', prc.analysis);\r\n    localStorage.setItem('currentProcedureStatus', prc.status);\r\n    localStorage.setItem('currentProcedureAmount', prc.amount);\r\n    localStorage.setItem('currentProcedureText_word', prc.text_word);\r\n    localStorage.setItem('currentProcedureText_account', prc.text_account);\r\n    localStorage.setItem('currentProcedureCredit', prc.credit);\r\n    localStorage.setItem('currentProcedurePayment', prc.payment);\r\n    localStorage.setItem('currentProcedureDueDate', prc.due_date);\r\n    localStorage.setItem('currentProcedureLiquidity', prc.liquidity);\r\n    localStorage.setItem('currentProcedureDocType', prc.docType);\r\n    this.navbar.updateLocal();\r\n    this._router.navigate(['/dashboard/admin/procedure/edit']);\r\n\r\n  }\r\n  addProcedure() {\r\n    this._router.navigate(['/dashboard/admin/procedure/add']);\r\n  }\r\n\r\n  async reset(prc) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        this._procedureService.reset(this.organisationId, prc.id)\r\n          .subscribe(async (res) => {\r\n            prc.status = 'NOT_IMPORTED';\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.delete_success').toPromise(),\r\n              detail: await this._translateService.get('general_messages.delete_success').toPromise()\r\n            });\r\n          });\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { CurrencyPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { LiquidityService } from 'src/app/shared/service/liquidity.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity-details',\r\n  templateUrl: './free-liquidity-details.component.html',\r\n  styleUrls: ['./free-liquidity-details.component.sass'],\r\n})\r\nexport class FreeLiquidityDetailsComponent implements OnInit {\r\n  accountNumber: string;\r\n  accountName: string;\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  selectedDateData: any[];\r\n  selectedDate: string;\r\n  cols: TableColumn[];\r\n  tempData: any;\r\n  searching: boolean = true;\r\n  criteria: any = {};\r\n  creditLinesTotal: number;\r\n  bankBalancesTotal: number;\r\n  freeLiquidityTotal: number;\r\n  /// for slider\r\n  baseFromDate: Date;\r\n  baseToDate: Date;\r\n  maxRange: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  rangeValues: number[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    let baseFromDateTemp = this._route.snapshot.paramMap.get('baseFromDate');\r\n    this.baseFromDate = new Date(baseFromDateTemp);\r\n    let baseToDateTemp = this._route.snapshot.paramMap.get('baseToDate');\r\n    this.baseToDate = new Date(baseToDateTemp);\r\n    let fromDateTemp = this._route.snapshot.paramMap.get('fromDate');\r\n    this.fromDate = new Date(fromDateTemp);\r\n    let toDateTemp = this._route.snapshot.paramMap.get('toDate');\r\n    this.toDate = new Date(toDateTemp);\r\n    this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n    this.rangeValues = [\r\n      this.dayDiff(this.baseFromDate, this.fromDate),\r\n      this.dayDiff(this.baseFromDate, this.toDate)\r\n    ];\r\n    this._translateService.get('Liquidity').subscribe((elem) => {\r\n\r\n      this.items = [\r\n        {\r\n          label: elem.freeLiquidity,\r\n          routerLink: '/dashboard/liquidity/freeLiquidity/' +\r\n            baseFromDateTemp + '/' + baseToDateTemp + '/' +\r\n            fromDateTemp + '/' + toDateTemp,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    })\r\n\r\n\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                // debugger;\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.getData();\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.fromDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n  \r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  getData() {\r\n    this.searching = true;\r\n    let start = this.fromDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    this._liquidityService\r\n      .getFreeLiquidityDetails(this.orgId, this.prcId, this.accountNumber, start, end)\r\n      .subscribe(\r\n        (res) => {\r\n          this.accountName = res.bankBalances.accountName;\r\n          this.labels = res.bankBalances.labels;\r\n          this.basicData = {\r\n            labels: res.bankBalances.labels,\r\n            datasets: [\r\n              {\r\n                type: 'line',\r\n                label: 'Credit Lines',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: res.creditLines,\r\n              },\r\n              {\r\n                type: 'line',\r\n                label: 'Free Liquidity',\r\n                fill: false,\r\n                data: res.freeLiquidity,\r\n                borderColor: '#E5A58B',\r\n                borderWidth: 2,\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Bank Balances',\r\n                backgroundColor: '#88FF88',\r\n                borderColor: '#58dF58',\r\n                data: res.bankBalances.bankBalances,\r\n              },\r\n            ],\r\n          };\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  // on clock on a bar in the chart\r\n  selectBarData(e) {\r\n    this.searching = true;\r\n    this.selectedDateData = new Array();\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    let tempDate =\r\n      this.selectedDate.slice(this.selectedDate.length - 4) +\r\n      '-' +\r\n      this.selectedDate.slice(3, 5) +\r\n      '-' +\r\n      this.selectedDate.slice(0, 2);\r\n    // debugger;\r\n    this._liquidityService\r\n      .getFreeLiquidityDetailsRecords(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        tempDate\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.selectedDateData = res;\r\n          this.tempData = res;\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n    // this.calculateTotals();\r\n  }\r\n\r\n  // calculateTotals() {\r\n  //   this.creditLinesTotal = 0;\r\n  //   this.bankBalancesTotal = 0;\r\n  //   this.freeLiquidityTotal = 0;\r\n  //   for(let data of this.selectedDateData) {\r\n  //     this.bankBalancesTotal += data.bankBalance;\r\n  //     this.creditLinesTotal += data.creditLine;\r\n  //     this.freeLiquidityTotal += data.bankBalance + data.creditLine;\r\n  // }\r\n  // }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.selectedDateData = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.selectedDateData = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.selectedDateData = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.selectedDateData = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.selectedDateData = this.selectedDateData.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.selectedDateData = this.selectedDateData.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{fromDate | date}} - {{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-3\"></div>\r\n  <div class=\"p-col-1 p-text-right\">{{baseFromDate | date}}</div>\r\n  <div class=\"p-col-4\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\" [min]=\"0\"\r\n      [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\">{{baseToDate | date}}</div>\r\n  <div class=\"p-col-1\">\r\n    <button pButton pRipple type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\" style=\"margin-top: -18px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"\r\n        (onDataSelect)=\"selectBarData($event)\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\" *ngIf=\"selectedDate\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"selectedDateData\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'accountNumber' || col.field != 'accountName'\" />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <!-- <ng-template pTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"p-text-right\">Totals</td>\r\n          <td class=\"p-text-right\">\r\n            {{ bankBalancesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ creditLinesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ freeLiquidityTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </ng-template> -->\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<br /><br />","<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<!-- <div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-8 p-mb-4 p-text-right\">\r\n    <p-toast></p-toast>\r\n    <label>{{ 'Susa.from' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"fromDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <label>{{ 'Susa.to' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"toDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-filter\" [disabled]=\"waiting\"\r\n      class=\" p-button-primary\" label=\"{{'Susa.search' | translate}}\" (click)=\"getData();\"\r\n      pTooltip=\"{{ 'Susa.search' | translate}} \" tooltipPosition=\"bottom\">\r\n      <i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i>\r\n    </button>\r\n  </div>\r\n  <!-- <div class=\"p-sm-4\">\r\n    <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n  </div> -->\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"waiting\"></p-progressBar>\r\n\r\n    <p-table #dt [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\" >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\">\r\n            <!-- Add Procedure -->\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-primary\" label=\"{{ 'Susa.daten' | translate}} \"\r\n              pTooltip=\"{{ 'Susa.datenToolTip' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-2\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 150) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th  pSortableColumn=\"{{col.field}}\"  pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n           *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">{{col.header | translate}}</span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon></th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n              *ngIf=\"col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName'\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n            <!-- <p-autoComplete [suggestions]=\"completeWords\" (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\" (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\" [minLength]=\"1\" [inputStyle]=\"{width:'90%'}\" [style]=\"{width:'90%'}\" appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"></p-autoComplete> -->\r\n\r\n            <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <div\r\n              *ngIf=\"(col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName');then withoutFilter else withFilter\">\r\n            </div>\r\n            <ng-template #withoutFilter>\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n              </span>\r\n            </ng-template>\r\n            <ng-template #withFilter>\r\n              {{ +row[col.field] | currency:'EUR':''}}\r\n            </ng-template>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"4\">{{'not Found' | translate}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostingDataService } from '../../service/posting-data.service';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as FileSaver from 'file-saver';\r\nimport { Word } from '../../model/word';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-susa',\r\n  templateUrl: './susa.component.html',\r\n  styleUrls: ['./susa.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class SusaComponent implements OnInit {\r\n  organisationId: number = +localStorage.getItem('organisationId');\r\n  procedureId: number = +localStorage.getItem('currentProcedureId');\r\n  fromDate: Date = new Date();\r\n  toDate: Date = new Date();\r\n  procedureName: string = '';\r\n  cols: TableColumn[] = new Array();\r\n  data: any[] = new Array();\r\n  waiting: boolean = false;\r\n  criteria: any = {};\r\n  completeWords: Word[] = new Array();\r\n  filtersNo: number = 0;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  tempData: any;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _postingDataService: PostingDataService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private datepipe: DatePipe,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.waiting = true;\r\n    this.items = [\r\n      {\r\n        label: 'SUSA',\r\n        routerLink: '/dashboard/shared/data/susa',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n      routerLinkActiveOptions: { exact: true },\r\n    };\r\n\r\n    this.organisationId = +localStorage.getItem('organisationId');\r\n    this.procedureId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._postingDataService\r\n      .getDefaultSusaDateRange(this.organisationId, this.procedureId)\r\n      .subscribe(\r\n        (res) => {\r\n          this.fromDate = new Date(Date.parse(res[0].mindate));\r\n          this.toDate = new Date(Date.parse(res[0].maxdate));\r\n          // let minYear = this.fromDate.getFullYear();\r\n          // debugger;\r\n          // if (isNaN(minYear)) {\r\n          //   this.fromDate = this.toDate = new Date();\r\n          //   this.waiting = false;\r\n          //   this._messageService.add({\r\n          //     severity: 'error',\r\n          //     summary: 'ERROR',\r\n          //     life: 10000,\r\n          //     detail: 'There is no dates in this procedure',\r\n          //   });\r\n          // } else {\r\n            this.getData();\r\n          // }\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Susa.accountType',\r\n        field: 'accountType',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.accountnumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.startingBalance',\r\n        field: 'famount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.sumDebit',\r\n        field: 'debitAmount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.sumCredit',\r\n        field: 'creditAmount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.balance',\r\n        field: 'inamount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.endingBalance',\r\n        field: 'outamount',\r\n        align: 'right',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    let fdate = this.datepipe.transform(this.fromDate, 'yyyy-MM-dd');\r\n    let tdate = this.datepipe.transform(this.toDate, 'yyyy-MM-dd');\r\n    this._postingDataService\r\n      .getSusa(\r\n        this.organisationId,\r\n        this.procedureId,\r\n        fdate,\r\n        tdate,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          if (res && res.length) {\r\n            res.forEach((element) => {\r\n              element.accountNumber = Number.parseInt(element.accountNumber, 10)\r\n                ? Number.parseInt(element.accountNumber, 10)\r\n                : element.accountNumber;\r\n              element.famount = Number.parseFloat(element.famount)\r\n                ? Number.parseFloat(element.famount)\r\n                : 0;\r\n              element.debitAmount = Number.parseFloat(element.debitAmount)\r\n                ? Number.parseFloat(element.debitAmount)\r\n                : 0;\r\n              element.creditAmount = Number.parseFloat(element.creditAmount)\r\n                ? Number.parseFloat(element.creditAmount)\r\n                : 0;\r\n              element.inamount = Number.parseFloat(element.inamount)\r\n                ? Number.parseFloat(element.inamount)\r\n                : 0;\r\n              element.outamount = element.famount + element.inamount;\r\n            });\r\n          }\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField;\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    // this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.waiting) this.getData();\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/shared/data']);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      // debugger;\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key)) {\r\n          let translatedKey = await this._translateService\r\n            .get('Susa.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'famount' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'inamount' ||\r\n              key == 'outamount')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { Susa: worksheet },\r\n        SheetNames: ['Susa'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'Susa');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length;\r\n    if (!query) {\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element && element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toString().toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.waiting = false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoleServiceService } from \"../service/role-service.service\";\r\nimport { UsersService } from \"../service/users.service\";\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-procedure-registration',\r\n  templateUrl: './procedure-registration.component.html',\r\n  styleUrls: ['./procedure-registration.component.sass']\r\n})\r\nexport class ProcedureRegistrationComponent implements OnInit {\r\n\r\n  orgs: [] = [];\r\n  dataSources: Choices[] = Choices.getDataSources();\r\n  organisationId = localStorage.getItem('organisationId')\r\n\r\n  procedureModel: Procedures = new Procedures();\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _roleServiceService: RoleServiceService,\r\n     private _usersService: UsersService, private _orgService : OrganisationService, public _translateService: TranslateService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n  }\r\n\r\n\r\n  submitHandler() {\r\n    this._roleServiceService.addProcedure(this.procedureModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'Procedure_Registration.registrationHeader' | translate}} </div>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.organisation' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n              #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.OrganisationId\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'Procedure_Registration.organisationErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.datasource' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.datasourcePlaceHolder' | translate}}\" name=\"dataSource\" optionValue=\"name\" optionLabel=\"name\"\r\n              #dataSource=\"ngModel\" [options]=\"dataSources\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.dataSource\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"dataSource.invalid && dataSource.touched \"> {{'Procedure_Registration.datasourceErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"procedureModel.name\">\r\n            <small *ngIf=\"procedureName.invalid && procedureName.touched \" class=\"spanCss \">{{'Procedure_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.data' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"data\" binary=\"true\" [(ngModel)]=\"procedureModel.data\" inputId=\"data\"></p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\">\r\n            </p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { ImportService } from \"../service/import.service\";\r\nimport { FileToImport } from \"../../shared/model/file-import\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.sass']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n\r\n\r\n  items: MenuItem[] = [];\r\n  activeIndex: number = 0;\r\n  uploadedFiles: any[] = [];\r\n  templates: Choices[] = Choices.getTemplates();\r\n  fileTypes: Choices[] = Choices.getFileType();\r\n  fileClass: Choices[] = Choices.getFileClass();\r\n  locals: Choices[] = Choices.getLocalization();\r\n  accountTypes: Choices[] = Choices.getAccountTypes();\r\n  selectedTemplate: any;\r\n  waiting: boolean = false;\r\n  filesList: FileToImport[] = new Array();\r\n  currentFileIndex: number = -1;\r\n  accountsCustomTemplate: any = {};\r\n  postingCustomTemplate: any = {};\r\n  headCustomTemplate: any = {};\r\n  orgs: Organisation[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  procedures: Procedures[] = new Array();\r\n  selectedProcedureId: number = -1;\r\n  tempheader: any = {};\r\n\r\n\r\n  constructor(public _translateService: TranslateService ,private _messageService: MessageService, private _importService: ImportService, private _orgService: OrganisationService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.get('Admin_Import').subscribe(elem => {\r\n\r\n      this.items = [\r\n        {\r\n          label: elem.firstStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 0;\r\n            // this._messageService.add({severity:'info', summary:'First Step', detail: event.item.label});\r\n          }\r\n        },\r\n        {\r\n          label: elem.secondStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 1;\r\n          }\r\n        },\r\n        {\r\n          label: elem.thirdStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 2;\r\n          }\r\n        },\r\n        {\r\n          label: elem.firthStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 3;\r\n          }\r\n        }\r\n      ];\r\n  \r\n  \r\n      this._orgService.get()\r\n        .subscribe(\r\n          (data) => {\r\n            this.orgs = data;\r\n          },\r\n          (error) => console.log(error)\r\n        );\r\n    })\r\n\r\n\r\n\r\n  } \r\n  // end of ngOnInit\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  selectTemplatHandler(e) {\r\n    this.filesList = [];\r\n    this.addFormData();\r\n  }\r\n\r\n  removeFormData(index: number) {\r\n    this.filesList.splice(index, 1);\r\n  }\r\n\r\n  addFormData() {\r\n    let f = new FileToImport();\r\n    f.OrganisationId = this.selectedOrgId;\r\n    f.procedureId = this.selectedProcedureId;\r\n    f.defaultTemplate = this.selectedTemplate;\r\n    this.filesList.push(f);\r\n  }\r\n\r\n  goToImport(wizardIndex, fileIndex) {\r\n    this.currentFileIndex = fileIndex;\r\n    this.activeIndex = ++wizardIndex;\r\n  }\r\n\r\n  goNext(index) {\r\n    this.activeIndex = ++index;\r\n  }\r\n\r\n  goPrev(index) {\r\n    this.activeIndex = --index;\r\n  }\r\n\r\n  setTemplate() {\r\n    this.filesList[this.currentFileIndex].defaultTemplate = this.postingCustomTemplate;\r\n  }\r\n\r\n  deleteFileFromServer(f: FileToImport, index) {\r\n    this.waiting = true;\r\n\r\n    const nameOnServer = f?.nameOnServer;\r\n    if (nameOnServer) {\r\n      this._importService\r\n        .deleteFile({nameOnServer: nameOnServer})\r\n        .subscribe(res => {\r\n          this.waiting = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'File Deleted!',\r\n            detail: 'the file ' + this.filesList[index].orginalName + ' deleted successfuly!'\r\n          });\r\n          this.removeFormData(index);\r\n\r\n        },\r\n          err => {\r\n            this.waiting = false;\r\n            this._messageService.add({\r\n              severity: 'warning',\r\n              summary: 'File not Deleted!',\r\n              detail: 'the file ' + this.filesList[index].orginalName + ' not found on the server!'\r\n            });\r\n          });\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'File not Deleted!',\r\n        detail: 'There is no file selected!'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // upload step 1\r\n  uploadFirstStep(f: FileToImport, index) {\r\n    this.waiting = true;\r\n    // send to back-end\r\n    // if type excel to excel-head\r\n    // else if type csv to csv-head\r\n    // else warn user to select type\r\n    // get headers orginal name  and name on the server and set them to f\r\n    const file: File = f?.file;\r\n    const fileType: number = f?.fileType?.value;\r\n    const local: number = f?.local?.value;\r\n    const fileClass: number = f?.fileClass?.value;\r\n    const temmplate: number = this.selectedTemplate;\r\n    const formData: FormData = new FormData();\r\n    if (!!file) {\r\n      formData.append('excel', file);\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'Please choose a file',\r\n        detail: 'You should chose a posting file!'\r\n      });\r\n      return;\r\n    }\r\n\r\n    formData.append('data', JSON.stringify({\r\n      template: temmplate,\r\n      fileType: fileType,\r\n      fileClass: fileClass,\r\n      local: local\r\n    }));\r\n\r\n    this._importService\r\n      .uploadFile(formData)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.tempheader = res.headers;\r\n        f.fileHeader = new Array();\r\n        for (let index = 0; index < res.headers.length; index++) {\r\n          const element = res.headers[index];\r\n          f.fileHeader.push({name: element});\r\n        }\r\n        // f.fileHeader = res.headers;\r\n        f.nameOnServer = res.fileName;\r\n        f.orginalName = res.orginalName;\r\n        f.defaultTemplate = res.defaultTemplate;\r\n        if (fileClass === 1) {\r\n          this.accountsCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 2) {\r\n          this.postingCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 3) {\r\n          this.headCustomTemplate = res.defaultTemplate;\r\n        }\r\n        f.uploaded = true;\r\n        this.currentFileIndex = index;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File uploaded!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' uploaded successfuly! you can upload another file now'\r\n        });\r\n      }, err => {\r\n        // console.log('error: ' + err);\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: err.error.msg\r\n        });\r\n      });\r\n\r\n  }\r\n  // upload step 1 ends\r\n\r\n\r\n  UploadHandler(event, f: FileToImport, index: number) {\r\n    const selectedFiles: FileList = event.files;\r\n    f.file = selectedFiles[0];\r\n    f.index = index;\r\n  }\r\n\r\n\r\n  importThisFile() {\r\n    this.waiting = true;\r\n\r\n    const theFile = this.filesList[this.currentFileIndex];\r\n\r\n    const filePath = theFile.nameOnServer;\r\n    const fileType = theFile.fileType?.value;\r\n    const fileClass = theFile.fileClass?.value;\r\n    const local = theFile.local?.value;\r\n    const accountType = theFile.accountType?.value;\r\n    const template = theFile.defaultTemplate;\r\n    const OrganisationId = theFile.OrganisationId;\r\n    const procedureId = theFile.procedureId;\r\n\r\n    const data = {\r\n      data: {\r\n        template: template,\r\n        fileType: fileType,\r\n        fileClass: fileClass,\r\n        local: local,\r\n        filePath: filePath,\r\n        accountType: accountType,\r\n        OrganisationId: OrganisationId,\r\n        procedureId: procedureId\r\n      }\r\n    }\r\n\r\n    this._importService\r\n      .importFile(data)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.filesList[this.currentFileIndex].imported = true;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File imported!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' imported successfuly! you can import another file now'\r\n        });\r\n      }, err => {\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: err.error.msg\r\n        });\r\n      });\r\n\r\n  } // end of import this file function\r\n\r\n\r\n  filterMapping(event) {\r\n    \r\n    let filtered : any[] = [];\r\n    let query = event.query;\r\n\r\n    for(let i = 0; i < this.filesList[this.currentFileIndex].fileHeader.length; i++) {\r\n        let header = this.filesList[this.currentFileIndex].fileHeader[i];\r\n        if (header.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n            filtered.push(header);\r\n        }\r\n    }\r\n    \r\n    this.filesList[this.currentFileIndex].fileHeader = filtered;\r\n} // end of filter mapping function\r\n\r\n\r\nrestoreFileHeaders() {\r\n  this.filesList[this.currentFileIndex].fileHeader = this.tempheader;\r\n}\r\n\r\n\r\n}\r\n","<p-card>\r\n  <p-toast></p-toast>\r\n  <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\" [readonly]=\"true\"></p-steps>\r\n  <!-- {{filesList[currentFileIndex]?.orginalName}} -->\r\n</p-card>\r\n<br />\r\n\r\n<p-card>\r\n  <!-- ********************** Step 1 satrts ******************** -->\r\n  <!-- <div class=\"p-grid\"> -->\r\n  <!-- \r\n    <div class=\"p-col-1\">\r\n    </div> -->\r\n  <div [hidden]=\"activeIndex != 0\" class=\"p-sm-12\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h2 >{{'Admin_Import.firstStepHeader' | translate}}</h2>\r\n      </div>\r\n      <!-- <div class=\"p-col-4\" *ngIf=\"waiting\">\r\n        <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n      </div> -->\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h3>{{filesList[currentFileIndex]?.orginalName}}</h3>\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-10\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n              placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n              (onChange)=\"orgChangedHandler($event)\" [disabled]=\"selectedProcedureId > 0\" [style]=\"{width:'300px'}\">\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedOrgId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedProcedureId\"\r\n              placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required [disabled]=\"selectedTemplate\"\r\n              [style]=\"{width:'300px'}\"></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedProcedureId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectTemplate' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"templates\" [(ngModel)]=\"selectedTemplate\"\r\n              placeholder=\"{{'Admin_Import.selectTemplatePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"value\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\"\r\n              (onChange)=\"selectTemplatHandler($event)\" [style]=\"{width:'300px'}\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"p-grid\">\r\n        <p-messages></p-messages>\r\n      </div>\r\n      <div class=\"p-sm-12\" *ngFor=\"let f of filesList; let i = index;\" [hidden]=\"!selectedTemplate\">\r\n        <!-- {{f | json}} -->\r\n        <br><br>\r\n\r\n        <div class=\"p-grid\" *ngIf=\"f.imported!==true\">\r\n          <div class=\"p-sm-12\">\r\n            <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <!-- maxFileSize=\"100000000\" -->\r\n            <p-fileUpload name=\"excel\" mode=\"advanced\" [showUploadButton]=\"false\" customUpload=\"true\"\r\n              (uploadHandler)=\"UploadHandler($event, f, i)\" uploadLabel=\"Set File\" [auto]=\"true\"\r\n              chooseLabel=\"{{'Admin_Import.searchLabel' | translate}}\"\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, .csv, text/plain\">\r\n              <ng-template pTemplate=\"content\">\r\n\r\n              </ng-template>\r\n            </p-fileUpload>\r\n            <span *ngIf=\"f.file\">{{f?.file?.name}} - {{ (f?.file?.size / 1024) | number: '1.0-2' }} KB</span>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileTypes\" [(ngModel)]=\"f.fileType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileFormat' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileClass\" [(ngModel)]=\"f.fileClass\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==1\">\r\n            <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"f.accountType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectAccountType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==2 && f.fileType?.value==2\">\r\n            <p-dropdown [options]=\"locals\" [(ngModel)]=\"f.local\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectLocalization' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <span class=\"p-buttonset\">\r\n              <button pButton type=\"button\" icon=\"pi pi-upload\" iconPos=\"left\"\r\n                label=\"{{'Admin_Import.uploadLabel' | translate}}\" (click)=\"uploadFirstStep(f, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || f.uploaded || waiting\"\r\n                class=\"p-button-raised p-button-rounded\"><i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i></button>\r\n              <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n                class=\"p-button-raised p-button-rounded\" (click)=\"goToImport(0, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || !f.uploaded || f.imported\"></button>\r\n            </span>\r\n            &nbsp;\r\n            <button pButton pRipple [disabled]=\"!f.uploaded || waiting\" type=\"button\" icon=\"pi pi-times\"\r\n              class=\"p-button-rounded p-button-danger\" (click)=\"deleteFileFromServer(f, i)\"></button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div class=\"p-grid\" *ngIf=\"selectedTemplate\">\r\n      <div class=\"p-col-10\">\r\n        <br><br>\r\n        <button pButton type=\"button\" icon=\"pi pi-plus\" iconPos=\"left\"\r\n          label=\"{{'Admin_Import.anotherFile' | translate}}\" (click)=\"addFormData()\"></button>\r\n      </div>\r\n      <div class=\"p-col-2\"></div>\r\n    </div>\r\n\r\n\r\n    <br><br>\r\n    <!-- <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(0)\"></button> -->\r\n  </div>\r\n  <!-- </div> -->\r\n\r\n\r\n  <!-- ********************** Step 2 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 1\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n    {{'Admin_Import.secondStepHeader' | translate}}\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(1)\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goNext(1)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n  <!-- ********************** Step 3 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 2\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n    <br>\r\n    <p-accordion *ngIf=\"filesList[currentFileIndex]\">\r\n      <p-accordionTab header=\"{{'Admin_Import.thirdStepHeader' | translate}}\"\r\n        *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 1\" [selected]=\"true\">\r\n        <div class=\"p-grid\">\r\n          <!-- p-sm-12 p-lg-8 -->\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.databaseField' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.dataType' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> {{'Admin_Import.mappingField' | translate}} </b></h2>\r\n          </div>\r\n\r\n          <!-- <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.client' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div> -->\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b> {{'Admin_Import.companyCode' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountNumber' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountName' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountTypeIdInternal' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountTypeIdInternal']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.nameAffix1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['nameAffix1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.nameAffix2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['nameAffix2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.VATId' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['VATId']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.taxNumber' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.street' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['street']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.postCode' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.city' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['city']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.country' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['country']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.contactPerson' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contactPerson']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.phone' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['phone']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.email' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['email']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankSortCode1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankSortCode1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankSortCode2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankSortCode2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab header=\"Posting Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 2\"\r\n        [selected]=\"true\">\r\n\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.databaseField' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.dataType' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> {{'Admin_Import.mappingField' | translate}} </b></h2>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.client' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <!-- <p-autoComplete [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [suggestions]=\"filesList[currentFileIndex].fileHeader\" (completeMethod)=\"filterMapping($event)\"\r\n              [forceSelection]=\"true\" [dropdown]=\"true\" [virtualScroll]=\"true\"\r\n              (onBlur)=\"restoreFileHeaders()\" (onKeyUp)=\"restoreFileHeaders()\"\r\n              (onSelect)=\"restoreFileHeaders()\"></p-autoComplete> -->\r\n\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.executionDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['executionDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.assignment' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['assignment']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.recordNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['recordNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debtorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debtorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.transactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['transactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDocument' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDocument']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textPosting' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textPosting']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.companyCode' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.fiscalYear' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['fiscalYear']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingPeriod' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingPeriod']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.reference' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['reference']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.GLAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['GLAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountGLAccountNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountGLAccountNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountCreditorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountCreditorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountDebtorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountDebtorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dueDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['dueDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textHeader' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textHeader']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balance' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balance']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balanceTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balanceTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.exchangeRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['exchangeRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.cashDiscount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['cashDiscount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.salesTaxKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['salesTaxKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.euTaxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['euTaxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountDebit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountDebit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.stackNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['stackNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.costCenter1' | translate}}</div>\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.textDataType' | translate}}</div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['constCenter1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.costCenter2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['CostCenter2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.identifierBalanceCarryforward' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['identifierBalanceCarryforward']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.generalReversal' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['generalReversal']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.ledgerId' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['ledgerId']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentLink' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentLink']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </p-accordionTab>\r\n\r\n      <p-accordionTab header=\"Head Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 3\"\r\n        [selected]=\"true\">\r\n        Head Mapping is hear\r\n      </p-accordionTab>\r\n    </p-accordion>\r\n\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"Previous\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"goPrev(2)\"></button>\r\n      <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(2)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- ********************** Step 4 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 3\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n\r\n    <p-messages></p-messages>\r\n\r\n    <br><br>\r\n    <div class=\"p-col-8\">\r\n      <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n    </div>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(3)\"></button>\r\n      <button pButton type=\"button\" label=\"Import\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"importThisFile()\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.continueLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" [disabled]=\"!filesList[currentFileIndex]?.imported\"\r\n        (click)=\"goPrev(1)\"></button>\r\n    </span>\r\n  </div>\r\n</p-card>\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Procedure_Registration.editHeader' | translate}} </div>\r\n        <h3 class=\"p-text-center\">{{'sideBarMenu.' + procedureModel.status | translate}}</h3>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"procedureModel.name\" > \r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.data' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"data\" binary=\"true\"[(ngModel)]=\"procedureModel.data\" inputId=\"data\" [value]=\"procedureModel.data\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n            \r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\" [value]=\"procedureModel.analysis\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <h3>{{'precalc.precalc'| translate}}</h3>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"amount\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.amount' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.amount\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.amount\" name=\"amount\" binary=\"true\" [(ngModel)]=\"procedureModel.amount\" inputId=\"amount\" [value]=\"procedureModel.amount\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"text_account\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.text_account' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.text_account\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.text_account\" name=\"text_account\" binary=\"true\" [(ngModel)]=\"procedureModel.text_account\" inputId=\"text_account\" [value]=\"procedureModel.text_account\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"text_word\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.text_word' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.text_word\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.text_word\" name=\"text_word\" binary=\"true\" [(ngModel)]=\"procedureModel.text_word\" inputId=\"text_word\" [value]=\"procedureModel.text_word\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"credit\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.credit' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.credit\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.credit\" name=\"credit\" binary=\"true\" [(ngModel)]=\"procedureModel.credit\" inputId=\"credit\" [value]=\"procedureModel.credit\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"payment\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.payment' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.payment\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.payment\" name=\"payment\" binary=\"true\" [(ngModel)]=\"procedureModel.payment\" inputId=\"payment\" [value]=\"procedureModel.payment\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"due_date\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.due_date' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.due_date\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.due_date\" name=\"due_date\" binary=\"true\" [(ngModel)]=\"procedureModel.due_date\" inputId=\"due_date\" [value]=\"procedureModel.due_date\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"docType\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.docType' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.docType\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.docType\" name=\"docType\" binary=\"true\" [(ngModel)]=\"procedureModel.docType\" inputId=\"docType\" [value]=\"procedureModel.docType\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \" *ngIf=\"role ==='Admin'\">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ProcedureService } from '../service/procedure.service';\r\n\r\n@Component({\r\n  selector: 'app-procedure-edit',\r\n  templateUrl: './procedure-edit.component.html',\r\n  styleUrls: ['./procedure-edit.component.sass']\r\n})\r\nexport class ProcedureEditComponent implements OnInit {\r\n\r\n  procedureModel: Procedures;\r\n  role: string;\r\n\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService,\r\n    private _confirmationService: ConfirmationService, public _translateService: TranslateService,\r\n    private _procedureService: ProcedureService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.role = localStorage.getItem('role');\r\n    this.procedureModel = new Procedures();\r\n    this.procedureModel.id = +localStorage.getItem('currentProcedureId');\r\n    this._procedureService.getOne(this.procedureModel.id)\r\n      .subscribe(procedure => this.procedureModel = procedure);\r\n  }\r\n\r\n  async submitHandler() {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_update').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.update').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        if (this.procedureModel.amount && this.procedureModel.credit &&\r\n          this.procedureModel.text_account && this.procedureModel.text_word &&\r\n          this.procedureModel.payment && this.procedureModel.due_date)\r\n          this.procedureModel.status = \"CALCULATED\";\r\n        else if (this.procedureModel.amount || this.procedureModel.credit ||\r\n          this.procedureModel.text_account || this.procedureModel.text_word ||\r\n          this.procedureModel.payment || this.procedureModel.due_date)\r\n          this.procedureModel.status = \"PARTIAL_CALCULATED\";\r\n        else if (!this.procedureModel.amount && !this.procedureModel.credit &&\r\n          !this.procedureModel.text_account && !this.procedureModel.text_word &&\r\n          !this.procedureModel.payment && !this.procedureModel.due_date)\r\n          this.procedureModel.status = \"IMPORTED\";\r\n        localStorage.setItem('currentProcedureStatus', this.procedureModel.status);\r\n        localStorage.setItem('currentProcedureAmount', '' + this.procedureModel.amount);\r\n        localStorage.setItem('currentProcedureCredit', '' + this.procedureModel.credit);\r\n        localStorage.setItem('currentProcedurePayment', '' + this.procedureModel.payment);\r\n        localStorage.setItem('currentProcedureText_word', '' + this.procedureModel.text_word);\r\n        localStorage.setItem('currentProcedureText_account', '' + this.procedureModel.text_account);\r\n        localStorage.setItem('currentProcedureDueDate', '' + this.procedureModel.due_date);\r\n        localStorage.setItem('currentProcedureLiquidity', '' + this.procedureModel.liquidity);\r\n        localStorage.setItem('currentProcedureDocType', '' + this.procedureModel.docType);\r\n        localStorage.setItem('currentProcedureData', '' + this.procedureModel.data);\r\n        localStorage.setItem('currentProcedureAnalysis', '' + this.procedureModel.analysis);\r\n        this._procedureService.update(this.procedureModel)\r\n          .subscribe(async (res) => {\r\n            // console.dir('done: ' + res);\r\n            this._messageService.add({\r\n              severity: 'success',\r\n              summary: await this._translateService.get('general_messages.update_success').toPromise(),\r\n              detail: await this._translateService.get('general_messages.update_success').toPromise()\r\n            });\r\n          }, err => {\r\n          });\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({ severity: 'info', \r\n            summary: await this._translateService.get('general_messages.canceled').toPromise(), \r\n            // detail: 'Action cancelled'\r\n           });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({ severity: 'info', \r\n            summary: await this._translateService.get('general_messages.canceled').toPromise(), \r\n            // detail: 'Action cancelled' \r\n          });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n    // localStorage.removeItem(\"currentProcedureId\");\r\n    // localStorage.removeItem(\"currentProcedureName\");\r\n    // localStorage.removeItem(\"currentProcedureData\");\r\n    // localStorage.removeItem(\"currentProcedureAnalysis\");\r\n\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{accountName}}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n  <div class=\"p-col-12 \">\r\n    <p-card class=\"p-text-center\">\r\n      <p-chart type=\"pie\" [data]=\"chartData\" height= \"350px\"></p-chart>\r\n    </p-card>\r\n  </div>\r\n\r\n  <div class=\"p-col-4\">\r\n      <p-card class=\"p-text-center\">\r\n        <ng-template pTemplate=\"header\">\r\n            {{ 'CreditorsAnalysis.amountTotalBalance' | translate}}\r\n        </ng-template>\r\n          <h1>{{totalAmount | currency:'EUR':'symbol' }}</h1>\r\n          <h3>{{ 'CreditorsAnalysis.amountTotalCount' | translate}}</h3>\r\n          <h1>  {{totalAmountCount}} </h1>\r\n          <br>\r\n          <p class=\"amountColor\" (click)=\"setDetails(2)\"><i class=\"pi pi-arrow-down\"></i>{{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n      </p-card>\r\n  </div>\r\n  <div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.textTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalText | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.textTotalCount' | translate}}</h3>\r\n        <h1>  {{totalTextCount}}</h1>\r\n        <br>\r\n        <p class=\"textColor\" (click)=\"setDetails(1)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n    </p-card>\r\n</div>\r\n<div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.paymentTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalPayment | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.paymentTotalCount' | translate}}</h3>\r\n        <h1>  {{totalPaymentCount}}</h1>\r\n        <br>\r\n        <p class=\"paymentColor\" (click)=\"setDetails(3)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}}  </p>\r\n\r\n    </p-card>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <app-text-analysis-details details=\"true\" *ngIf=\"displayDetails==1\"></app-text-analysis-details>\r\n        <amount-analysis-details details=\"true\" *ngIf=\"displayDetails==2\"></amount-analysis-details>\r\n        <app-payment-analysis-details details=\"true\" *ngIf=\"displayDetails==3\"></app-payment-analysis-details>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis-details',\r\n  templateUrl: './creditor-analysis-details.component.html',\r\n  styleUrls: ['./creditor-analysis-details.component.sass'],\r\n})\r\nexport class CreditorAnalysisDetailsComponent implements OnInit {\r\n  accountNumber: string;\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountName: string;\r\n  totalAmount: number;\r\n  totalText: number;\r\n  totalPayment: number;\r\n  displayDetails: number;\r\n  chartData: any;\r\n  totalAmountCount: any;\r\n  totalPaymentCount: any;\r\n  totalTextCount: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  waiting: boolean = true;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        {\r\n          label: elem.label,\r\n          routerLink: '/dashboard/analysis/creditor',\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n      this.waiting = true;\r\n      this._analysisService\r\n        .getCreditorAnalysisDetails(\r\n          this.selectedOrganisation,\r\n          this.selectedProcedure,\r\n          this.accountNumber\r\n        )\r\n        .subscribe(\r\n          (res) => {\r\n            this.totalAmount =\r\n              res.amount.length > 0 ? res.amount[0].totalBalance : 0;\r\n            this.totalAmountCount =\r\n              res.amount.length > 0 ? res.amount[0].totlaCount : 0;\r\n            this.totalPayment =\r\n              res.payment.length > 0 ? res.payment[0].totalBalance : 0;\r\n            this.totalPaymentCount =\r\n              res.payment.length > 0 ? res.payment[0].totlaCount : 0;\r\n            this.totalText = res.text.length > 0 ? res.text[0].totalBalance : 0;\r\n            this.totalTextCount =\r\n              res.text.length > 0 ? res.text[0].totlaCount : 0;\r\n            this.accountName =\r\n              res.text.length > 0\r\n                ? res.text[0].accountName\r\n                : res.amount.length > 0\r\n                ? res.amount[0].accountName\r\n                : res.payment[0]?.accountName;\r\n            this.chartData = {\r\n              labels: [elem.amountLabel, elem.textLabel, elem.paymentLabel],\r\n              datasets: [\r\n                {\r\n                  data: [this.totalAmount, this.totalText, this.totalPayment],\r\n                  backgroundColor: ['#95ca14', '#587bc7', '#fc6521'],\r\n                  hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                },\r\n              ],\r\n            };\r\n            this.waiting = false;\r\n          },\r\n          (er) => {\r\n            this.waiting = false;\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  setDetails(option: number) {\r\n    this.displayDetails = option;\r\n  }\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n        <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n          placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n          optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n          (onChange)=\"orgChangedHandler($event)\" [style]=\"{width:'300px'}\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-6 fontStyle\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n        <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n          placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n          [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n          [style]=\"{width:'300px'}\"></p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingDocTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n          class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n          tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'Document_Type.Action' | translate}}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'documentTypeNewName'\"/>\r\n\r\n              <p-dropdown [options]=\"docTypesFilter\" [(ngModel)]=\"criteria[col.field]\" optionValue=\"documentTypeName\" appendTo=\"body\"\r\n                placeholder=\"Document Type new\" optionLabel=\"documentTypeName\" [showClear]=\"true\"\r\n                filterBy=\"documentTypeName\" (onChange)=\"filterChange($event.value, col.field)\" [style]=\"{width:'100%'}\"\r\n                *ngIf=\"col.field == 'documentTypeNewName'\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n            {{ col.field != 'documentTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <span\r\n                *ngIf=\"row.documentTypeNewName && (row.documentTypeNewName.toLowerCase() == 'zahlung' || row.documentTypeNewName.toLowerCase() == 'rechnung')\">\r\n                {{'Document_Type.'+row.documentTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <p-dropdown [options]=\"docTypes\" [(ngModel)]=\"row.documentTypeNewId\" optionValue=\"id\" appendTo=\"body\"\r\n                placeholder=\"Document Type new\" optionLabel=\"documentTypeName\" [showClear]=\"true\" [filter]=\"true\"\r\n                filterBy=\"documentTypeName\" (onChange)=\"docTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"reset(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.documentTypeNewId\"\r\n              pTooltip=\"{{'general_actions.delete' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-document-type',\r\n  templateUrl: './document-type.component.html',\r\n  styleUrls: ['./document-type.component.sass']\r\n})\r\nexport class DocumentTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingDocTypes: PostingDocTypes[];\r\n  docTypes: DocumentTypes[] = new Array();\r\n  docTypesFilter: DocumentTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field }[] = new Array();\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, private _docTypesService: PostingService,\r\n    private _confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.docTypes.push({\r\n      id: 0,\r\n      documentTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._docTypesService\r\n      .getDocTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.docTypes.push(...data);\r\n          this.docTypesFilter = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Document_Type.documentType',\r\n        field: 'documentType'\r\n      },\r\n      {\r\n        header: 'Document_Type.documentTypeNewName',\r\n        field: 'documentTypeNewName'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n  editRow(row) {\r\n    this.postingDocTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalVal = row.documentTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.documentTypeNewId = this.originalVal;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == this.originalVal)[0]?.documentTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row, update = true) {\r\n    this.searching = true;\r\n    this._docTypesService\r\n      .updateNewDocType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        if(res == 1) localStorage.setItem('currentProcedureDocType', 'true');\r\n        else if(res == 0) {\r\n          let currentPrcID = localStorage.getItem('currentProcedureId');\r\n          if(this.selectedPrcId == +currentPrcID) {\r\n            localStorage.setItem('currentProcedureDueDate', 'false');\r\n            localStorage.setItem('currentProcedurePayment', 'false');\r\n            localStorage.setItem('currentProcedureCredit', 'false');\r\n            localStorage.setItem('currentProcedureDocType', 'false');\r\n            let prcStatus = localStorage.getItem('currentProcedureStatus');\r\n            if(prcStatus === 'CALCULATED') localStorage.setItem('currentProcedureStatus', 'PARTIAL_CALCULATED');\r\n          }\r\n        }\r\n        row.isEditable = false;\r\n        localStorage.setItem('currentProcedureDocType', 'true');\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Document new type is ${update ? 'updated' : 'Deleted'} successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this.searching = true;\r\n      this._docTypesService\r\n        .getPostingDocTypes(this.selectedOrgId, e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.postingDocTypes = data;\r\n            this.tempData = data;\r\n            this.searching = false;\r\n          },\r\n          error => this.searching = false\r\n        );\r\n    }\r\n  }\r\n\r\n\r\n  async reset(row) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        row.documentTypeNewId = null;\r\n        row.documentTypeNewName = null;\r\n        this.save(row, false);\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled'\r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  docTypeChangedHandler(e, row) {\r\n    row.documentTypeNewId = e.value;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == e.value)[0].documentTypeName;\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.postingDocTypes = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n\r\n  async filterChange(query, colName) {\r\n    this.searching = true;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.postingDocTypes = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.postingDocTypes = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.postingDocTypes = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.postingDocTypes = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.postingDocTypes = this.postingDocTypes.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.postingDocTypes = this.postingDocTypes.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-4\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n      <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n        placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"orgChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\">\r\n      </p-dropdown>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-6\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n      <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n        placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingAccountTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'Account_Type.Action' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'accountTypeNewName'\" />\r\n\r\n            <p-dropdown [options]=\"accountTypesFilter\" [(ngModel)]=\"criteria[col.field]\" optionValue=\"AccountTypeName\"\r\n              appendTo=\"body\" placeholder=\"{{'Account_Type.accountTypeNewName' | translate}}\"\r\n              optionLabel=\"AccountTypeName\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"AccountTypeName\"\r\n              *ngIf=\"col.field == 'accountTypeNewName'\" (onChange)=\"filterChange($event.value, col.field)\"\r\n              [style]=\"{width:'300px'}\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Account_Type.'+item.AccountTypeName | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Account_Type.'+item.AccountTypeName | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            {{ col.field != 'accountTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <span *ngIf=\"row.accountTypeNewName\">\r\n                {{'Account_Type.'+row.accountTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"row.accountTypeNewId\" optionValue=\"id\" appendTo=\"body\"\r\n                placeholder=\"{{'Account_Type.accountTypeNewName' | translate}}\" optionLabel=\"AccountTypeName\"\r\n                [showClear]=\"true\" [filter]=\"true\" filterBy=\"AccountTypeName\"\r\n                (onChange)=\"accountTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"reset(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.accountTypeNewId\"\r\n              pTooltip=\"{{'general_actions.delete' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-account-type',\r\n  templateUrl: './account-type.component.html',\r\n  styleUrls: ['./account-type.component.sass']\r\n})\r\nexport class AccountTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingAccountTypes: PostingAccountTypes[];\r\n  accountTypes: AccountTypes[] = new Array();\r\n  accountTypesFilter: AccountTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field, align }[] = new Array();\r\n  procedureName: string;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _postingService: PostingService, private _orgService: OrganisationService,\r\n    private _confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.accountTypes.push({\r\n      id: 0,\r\n      AccountTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._postingService\r\n      .getAccountTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.accountTypes.push(...data);\r\n          this.accountTypesFilter = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Account_Type.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountType',\r\n        field: 'accountType',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this.searching = true;\r\n      this._postingService\r\n        .getPostingAccountTypes(this.selectedOrgId, this.selectedPrcId)\r\n        .subscribe(\r\n          data => {\r\n            data.forEach(account => {\r\n              let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n              account.accountNumber = isNaN(accountNumber) ? account.accountNumber : accountNumber;\r\n            });\r\n            this.postingAccountTypes = data;\r\n            this.tempData = data;\r\n            this.searching = false;\r\n          },\r\n          error => this.searching = false\r\n        );\r\n    }\r\n  }\r\n\r\n  editRow(row) {\r\n    this.postingAccountTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalVal = row.accountTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.accountTypeNewId = this.originalVal;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == this.originalVal)[0]?.AccountTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row, update = true) {\r\n    this.searching = true;\r\n    this._postingService\r\n      .updateNewAccountType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        row.isEditable = false;\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Account new type is ${update? 'updated' : 'Deleted'} successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  accountTypeChangedHandler(e, row) {\r\n    row.accountTypeNewId = e.value;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == e.value)[0].AccountTypeName;\r\n  }\r\n\r\n\r\n  async reset(row) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        row.accountTypeNewId = null;\r\n        row.accountTypeNewName = null;\r\n        this.save(row, false);\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled'\r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.postingAccountTypes = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.postingAccountTypes = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.postingAccountTypes = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.postingAccountTypes = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.postingAccountTypes = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.postingAccountTypes = this.postingAccountTypes.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.postingAccountTypes = this.postingAccountTypes.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n}\r\n","<p-table [value]=\"users\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n  responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Add User -->\r\n      <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addUser()\"\r\n        class=\"p-button-rounded p-button-primary\" pTooltip=\"{{'general_actions.add' | translate }}\"\r\n        tooltipPosition=\"bottom\"></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\">\r\n    <colgroup>\r\n      <col *ngFor=\"let col of cols\">\r\n      <col>\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n        {{col.header | translate}}</th>\r\n      <th *ngIf=\"role!=='User'\" style=\"width: 10em\"> </th>\r\n    </tr>\r\n  </ng-template>\r\n\r\n\r\n  <ng-template pTemplate=\"body\" let-user>\r\n    <tr>\r\n\r\n      <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n        <div *ngIf=\"col.subField;then nested_object_content else normal_content\"></div>\r\n        <ng-template #nested_object_content>\r\n          {{user[col.field][col.subField]}}\r\n        </ng-template>\r\n        <ng-template #normal_content>\r\n          {{user[col.field]}}\r\n        </ng-template>\r\n      <td *ngIf=\"role!=='User'\" style=\"width: 10em\">\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'general_actions.edit' | translate }}\" tooltipPosition=\"bottom\" (click)=\"edituser(user)\"></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"12\">{{'User_Registration.NoUsersFound' | translate}}</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from \"../service/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-organisation-users',\r\n  templateUrl: './organisation-users.component.html',\r\n  styleUrls: ['./organisation-users.component.sass']\r\n})\r\nexport class OrganisationUsersComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId')\r\n  role = localStorage.getItem('role')\r\n  users  : [] = [];\r\n  cols = [];\r\n  constructor(private _userService : UserService, private _router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._userService\r\n    .getUsers(this.organisationId)\r\n    .subscribe(\r\n      (data) => { \r\n        this.users = data;\r\n        // console.log(data)\r\n        },\r\n      (err) =>  { }\r\n    );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'User_Registration.role',\r\n        field: \"Role\",\r\n        subField: 'name'\r\n      },\r\n      {\r\n        header: 'User_Registration.username',\r\n        field: 'username'\r\n      },\r\n      {\r\n        header: 'User_Registration.email',\r\n        field: 'email'\r\n      },\r\n      {\r\n        header: 'User_Registration.title',\r\n        field: 'title'\r\n      },\r\n      {\r\n        header: 'User_Registration.firstname',\r\n        field: 'firstname'\r\n      },\r\n      {\r\n        header: 'User_Registration.lastname',\r\n        field: 'lastname'\r\n      },\r\n      {\r\n        header: 'User_Registration.mobileNr',\r\n        field: 'mobileNumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.street',\r\n        field: 'street'\r\n      },\r\n      {\r\n        header: 'User_Registration.houseNr',\r\n        field: 'housenumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.postcode',\r\n        field: 'postCode'\r\n      },\r\n      {\r\n        header: 'User_Registration.city',\r\n        field: 'city'\r\n      },\r\n      {\r\n        header: 'User_Registration.country',\r\n        field: 'country'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  edituser(user) {\r\n    localStorage.setItem('selectedUser_userId', user.id);\r\n    localStorage.setItem('selectedUser_roleId', user.RoleId);\r\n    localStorage.setItem('selectedUser_username', user.username);\r\n    localStorage.setItem('selectedUser_email', user.email);\r\n    localStorage.setItem('selectedUser_title', user.title);\r\n    localStorage.setItem('selectedUser_firstname', user.firstname);\r\n    localStorage.setItem('selectedUser_lastname', user.lastname);\r\n    localStorage.setItem('selectedUser_mobileNr', user.mobileNumber);\r\n    localStorage.setItem('selectedUser_street', user.street);\r\n    localStorage.setItem('selectedUser_houseNr', user.housenumber);\r\n    localStorage.setItem('selectedUser_postcode', user.postCode);\r\n    localStorage.setItem('selectedUser_city', user.city);\r\n    localStorage.setItem('selectedUser_country', user.country);\r\n\r\n    this._router.navigate(['/dashboard/shared/user/edit']); \r\n  }\r\n  addUser(){\r\n    this._router.navigate(['/dashboard/shared/user/add']); \r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  uploadFile(formdata) {\r\n    return this._http.post<any>(this._thisURL + '/header', formdata);\r\n  }\r\n\r\n  importFile(formData) {\r\n    return this._http.post<any>(this._thisURL + '/import', formData);\r\n  }\r\n\r\n  deleteFile(data) {\r\n    return this._http.post<any>(this._thisURL + '/delete-file', data);\r\n  }\r\n\r\n  addProcedure(procedure) {\r\n    console.log(procedure)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Procedures } from '../model/procedures';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcedureService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  _adminURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getById(prcId: number): Observable<Procedures[]> {\r\n    return this._http.get<Procedures[]>(this._thisURL + '/procedure/' + prcId);\r\n  }\r\n\r\n  reset(orgId, prcId) {\r\n    return this._http.delete<any>(this._adminURL + '/procedures/' + orgId + '/' + prcId);\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { ElementRef, Pipe, PipeTransform, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n\r\n  private readonly _nativeElement: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private sanitizer: DomSanitizer) {\r\n    this._nativeElement = el.nativeElement;\r\n  }\r\n\r\n  transform(value: string): SafeHtml | null {\r\n    if (!value)\r\n      return null;\r\n\r\n    let temp: string = '';\r\n    this.keywords.forEach(word => {\r\n      const regEx = new RegExp(word, 'ig');\r\n      let wordList = value.split(\" \").filter((elem, index) => {\r\n        return regEx.test(elem);\r\n      });\r\n      wordList.forEach(w => {\r\n        temp = value.replace(w, `<span class=\"highlight\"><b>${w}</b></span>`);\r\n      });\r\n    });\r\n    return this.sanitizer.sanitize(SecurityContext.HTML, temp) || ''\r\n    // return this.sanitizer.bypassSecurityTrustHtml(value);\r\n    // return null;\r\n  } // end of transform function\r\n\r\n\r\n  keywords = [\r\n    'Pfändung',\r\n    'Pfaendung',\r\n    'Vollstreckung',\r\n    'Rechtskräftig',\r\n    'Rechtskraeftig',\r\n    'vollzieher',\r\n    'Obergericht',\r\n    'gericht',\r\n    '(\\\\b|[^a-zA-Z]+)OGV([^a-zA-Z]+|\\\\s*)',\r\n    'Stundung',\r\n    'nsolvenz',\r\n    'Aufrechnung',\r\n    'Vollstreckung',\r\n    'Vollstreckungsbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)VB([^a-zA-Z]+|\\\\s*)',\r\n    'Zwangsvollstreckung',\r\n    '(\\\\b|[^a-zA-Z]+)ZV([^a-zA-Z]+|\\\\s*)',\r\n    'Teilzahlung',\r\n    'Ratenzahlung',\r\n    'Drittschuldner',\r\n    'Abtretung',\r\n    'berweisungsbeschluss',\r\n    'PFÜB',\r\n    'Verjährung',\r\n    '(\\\\b|[^a-zA-Z]+)ZPO([^a-zA-Z]+|\\\\s*)',\r\n    'Inkasso',\r\n    'Eidesstattliche',\r\n    'Urteil',\r\n    'Haftung',\r\n    'Kostenfestsetzungsbeschluss',\r\n    '(\\\\b|[^a-zA-Z]+)KFB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)MB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnverfahren',\r\n    'Rechtskr',\r\n    'Umschuldung',\r\n    'Eidesstattliche Erklärung',\r\n    'Eidesstattliche Erklaerung',\r\n    '(\\\\b|[^a-zA-Z]+)EE([^a-zA-Z]+|\\\\s*)',\r\n    'Rest',\r\n    'Restzahlung',\r\n    'Vereinbarung',\r\n    'Schulden',\r\n    'Urteil',\r\n    'Rate',\r\n    'Vergleich',\r\n\r\n    'Verjaehrung',\r\n    'Lieferstop',\r\n    'Leistungsstopp',\r\n    'Leistungsstop',\r\n    'Lieferstopp',\r\n    'Mahnung',\r\n    'Mahngebühr',\r\n    'Mahngeb',\r\n    'Limit',\r\n    'Überschreitung',\r\n    'Ueberschreitung',\r\n    'Androhung',\r\n    'Drohung',\r\n    'Vorfällig',\r\n    'Vorfaellig',\r\n    'Vorkasse',\r\n    'Proforma',\r\n    'Creditreform',\r\n    'Säumnis',\r\n    'Saeumnis',\r\n    'Anruf',\r\n    'Erinnerung',\r\n    '1.M.',\r\n    '2.M.',\r\n    '3.M.',\r\n    'Letzte',\r\n    'Verzug',\r\n    'Sicherheit',\r\n    'Klage',\r\n    'Aktenzeichen',\r\n    'Nachzahlung',\r\n    'Nachz',\r\n    'Zahlungsplan',\r\n    'Bescheid',\r\n    'Abschlag',\r\n    'Rechtsanwaltsgebühr',\r\n    'Rechtsanwaltsgebuehr',\r\n    'Ra -Gebühr',\r\n    'Ra -Gebuehr',\r\n    'Geschäftszeichen',\r\n    'Geschaeftszeichen',\r\n    'Beistand',\r\n    'Verrechnung',\r\n    'Außergerichtlich',\r\n    'außergerichtl',\r\n    'aussergerichtl',\r\n    'Abtretung',\r\n    'Ablöse',\r\n    'Abloese',\r\n    'Vorschuss',\r\n    'Vorschuß',\r\n\r\n  ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  exportXLSX(tableName, OrganisationId, ProcedureId, criteria: any) {\r\n    // return this._http.get<Observable<Blob>>(this._thisURL + '/export/' + tableName + '/' + OrganisationId + '/' + ProcedureId, { params: criteria, responseType: 'arraybuffer' });\r\n    return this._http.get<Blob>(this._thisURL + '/export/' + tableName + '/' + OrganisationId + '/' + ProcedureId, { params: criteria, responseType: 'blob' as 'json' })\r\n  }\r\n\r\n  exportPDF(data) {\r\n    return this._http.get(this._thisURL + '/exportPDF/' + data);\r\n\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<!-- <div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{ procedureName }}</h2>\r\n  </div>\r\n</div> -->\r\n<div class=\"card\">\r\n  <p-progressBar\r\n    mode=\"indeterminate\"\r\n    [style]=\"{ height: '5px' }\"\r\n    *ngIf=\"loading\"\r\n  ></p-progressBar>\r\n  <p-table\r\n    [value]=\"postings\"\r\n    [columns]=\"cols\"\r\n    [scrollable]=\"true\"\r\n    scrollHeight=\"350px\"\r\n    [style]=\"{ width: '100%' }\"\r\n    [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\"\r\n    [reorderableColumns]=\"true\"\r\n    [loading]=\"loading\"\r\n    [lazy]=\"true\"\r\n    [customSort]=\"true\"\r\n    (onLazyLoad)=\"sort($event)\"\r\n  >\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-mb-4\">\r\n        <!-- Export as excel -->\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-file-excel\"\r\n          (click)=\"exportXLSX()\"\r\n          class=\"p-mr-2 p-button-warning\"\r\n          pTooltip=\"Xlsx\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Limit options -->\r\n        <p-dropdown\r\n          [options]=\"pageLimitSizes\"\r\n          optionValue=\"value\"\r\n          optionLabel=\"value\"\r\n          [(ngModel)]=\"limit\"\r\n          (onChange)=\"limitChange($event)\"\r\n          class=\"p-mr-2\"\r\n        ></p-dropdown>\r\n        <!-- Go to First page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr === 1\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-double-left\"\r\n          (click)=\"firstPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Go previous -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr === 1\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-left\"\r\n          (click)=\"previousPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Page number -->\r\n        <input\r\n          pInputText\r\n          type=\"number\"\r\n          min=\"1\"\r\n          class=\"pageNrInput p-mr-2\"\r\n          (input)=\"pageNrChange($any($event.target).value)\"\r\n          [value]=\"pageNr\"\r\n          [placeholder]=\"pageNr\"\r\n        />\r\n        <!-- Go to next Page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr >= maxPageNr\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-right\"\r\n          (click)=\"nextPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Go to last page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr >= maxPageNr\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-double-right\"\r\n          (click)=\"lastPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n\r\n        <!-- dispalyed data of total count -->\r\n        {{ displayedDataCount }} of {{ totalCount }}\r\n        <!-- Clear filter -->\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-filter-slash\"\r\n          (click)=\"clearFilter()\"\r\n          class=\"p-ml-6 clearFilter\"\r\n          pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n          *ngIf=\"filtersNo > 0\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-info-circle\"\r\n          (click)=\"susa()\"\r\n          class=\"p-ml-6\"\r\n          pTooltip=\"Susa\"\r\n          tooltipPosition=\"bottom\"\r\n          label=\"Susa\"\r\n        ></button>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col\r\n          *ngFor=\"let col of cols\"\r\n          [style]=\"{ width: (col.width ? col.width : 150) + 'px' }\"\r\n        />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th\r\n          pSortableColumn=\"{{ col.field }}\"\r\n          pResizableColumn\r\n          pReorderableColumn\r\n          *ngFor=\"let col of cols\"\r\n          class=\"p-text-center\"\r\n          pTooltip=\"{{ col.header }}\"\r\n          tooltipPosition=\"bottom\"\r\n        >\r\n          {{ col.header }}\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n          <!-- <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            (change)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" /> -->\r\n\r\n          <p-autoComplete\r\n            [suggestions]=\"completeWords\"\r\n            (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\"\r\n            (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\"\r\n            [minLength]=\"1\"\r\n            [inputStyle]=\"{ width: '90%' }\"\r\n            [style]=\"{ width: '90%' }\"\r\n            appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"\r\n            *ngIf=\"\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'postingDate' &&\r\n              col.field != 'executionDate'\r\n            \"\r\n          >\r\n          </p-autoComplete>\r\n\r\n          <p-calendar\r\n            *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate' ||\r\n              col.field == 'postingDate' ||\r\n              col.field == 'executionDate'\r\n            \"\r\n            [(ngModel)]=\"criteria[col.field]\"\r\n            (onSelect)=\"filterChange($event, col.field)\"\r\n            [monthNavigator]=\"true\"\r\n            [yearNavigator]=\"true\"\r\n            yearRange=\"1900:2100\"\r\n            appendTo=\"body\"\r\n            dateFormat=\"dd.mm.yy\"\r\n          >\r\n          </p-calendar>\r\n\r\n          <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData>\r\n      <tr>\r\n        <td\r\n          pReorderableRowHandle\r\n          *ngFor=\"let col of cols\"\r\n          class=\"p-text-{{ col.align }}\"\r\n        >\r\n          <div\r\n            *ngIf=\"\r\n              col.field == 'balance' ||\r\n                col.field == 'debitAmount' ||\r\n                col.field == 'creditAmount' ||\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate' ||\r\n                col.field == 'postingDate' ||\r\n                col.field == 'applicationDate';\r\n              then withFilter;\r\n              else withoutFilter\r\n            \"\r\n          ></div>\r\n          <ng-template #withoutFilter>\r\n            <span pTooltip=\"{{ rowData[col.field] }}\">\r\n              {{ rowData[col.field] }}\r\n            </span>\r\n          </ng-template>\r\n          <ng-template #withFilter>\r\n            {{\r\n              col.field == \"balance\" ||\r\n              col.field == \"debitAmount\" ||\r\n              col.field == \"creditAmount\"\r\n                ? (rowData[col.field] | currency: \"EUR\":\"\")\r\n                : (rowData[col.field] | date: \"dd.MM.yyyy\")\r\n            }}\r\n          </ng-template>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No postings found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataFilterService } from '../service/data-filter.service';\r\nimport { ExportDataService } from '../service/export-data.service';\r\nimport { dataTableColumns } from '../model/dataTableColumns';\r\nimport { LazyLoadEvent, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\n// import { AutocompleteService } from '../service/autocomplete.service';\r\nimport { Word } from '../model/word';\r\nimport { DictionaryService } from '../service/dictionary.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-sap-data-table',\r\n  templateUrl: './sap-data-table.component.html',\r\n  styleUrls: ['./sap-data-table.component.sass'],\r\n  providers: [DatePipe]\r\n})\r\nexport class SAPDataTableComponent implements OnInit {\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _dataFilterService: DataFilterService,\r\n    private _exportDataService: ExportDataService,\r\n    private _router: Router,\r\n    private _translateService: TranslateService,\r\n    private _autocompleteService: DictionaryService,\r\n    private datepipe: DatePipe,\r\n  ) { }\r\n\r\n  organisationId = localStorage.getItem('organisationId');\r\n  procedureId = localStorage.getItem('currentProcedureId');\r\n  procedureName: string = '';\r\n  filtersNo: number = 0;\r\n  loading: boolean = false;\r\n  selectLastPage: boolean = false;\r\n  data: any;\r\n  postings: [] = [];\r\n  cols: dataTableColumns[];\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  displayedDataCount = 0;\r\n  criteria: any = {\r\n    OrganisationId: this.organisationId,\r\n    procedureId: this.procedureId,\r\n    limit: this.limit,\r\n    offset: 0,\r\n    orderBy: 'id',\r\n    sortOrder: 1,\r\n  };\r\n  totalCount: number = 0;\r\n  completeWords: Word[] = new Array();\r\n\r\n  ngOnInit(): void {\r\n    dataTableColumns\r\n      .getDataTableColumns(this._translateService)\r\n      .then((cols) => {\r\n        this.cols = cols;\r\n      });\r\n\r\n    this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      dataTableColumns\r\n        .getDataTableColumns(this._translateService)\r\n        .then((cols) => {\r\n          this.cols = cols;\r\n        });\r\n    });\r\n\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n  }\r\n\r\n  async getData() {\r\n\r\n    this.loading = true;\r\n    let tempCriteria = { ...this.criteria };\r\n    for (const key in tempCriteria) {\r\n      if (!tempCriteria[key] && key != 'offset') {\r\n        delete tempCriteria[key];\r\n      }\r\n      if (key.includes('Date'))\r\n        tempCriteria[key] = this.datepipe.transform(tempCriteria[key], 'yyyy.MM.dd');\r\n    }\r\n    this.filtersNo = Object.keys(tempCriteria).length - 6;\r\n    this._dataFilterService.get(tempCriteria).subscribe(\r\n      (data) => {\r\n        this.data = data;\r\n        this.postings = this.data.rows;\r\n        this.totalCount = this.data.count;\r\n        this.displayedDataCount =\r\n          this.totalCount > this.limit ? this.limit : this.totalCount;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        this.loading = false;\r\n      },\r\n      (err) => {\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  sort(event: LazyLoadEvent) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField ? event.sortField : 'id';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.loading) this.getData();\r\n  }\r\n\r\n  filterChange(value, field) {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.autoComplete(value);\r\n    this.getData();\r\n  }\r\n\r\n  autoComplete(word: string) {\r\n    // if (word && word.length > 2) {\r\n    //   this._autocompleteService\r\n    //     .complete(word)\r\n    //     .subscribe(res => {\r\n    //       console.log(res);\r\n    //       this.completeWords = res;\r\n    //     });\r\n    // } else {\r\n    this.completeWords = new Array();\r\n    // }\r\n  }\r\n\r\n  submitFilter() {\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      OrganisationId: this.organisationId,\r\n      procedureId: this.procedureId,\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.filtersNo = 0;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.loading = true;\r\n    if (!this.criteria.offset) {\r\n      this.criteria.offset = 0;\r\n    }\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.loading = true;\r\n    this.criteria.offset -= +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.criteria.offset = 0;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.loading = true;\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  exportXLSX() {\r\n    this.loading = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.criteria };\r\n    // criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['lang'] = lang ?? 'de';\r\n    this._exportDataService\r\n      .exportXLSX(\r\n        'posting',\r\n        this.organisationId,\r\n        this.procedureId,\r\n        criteriaWithLang\r\n      )\r\n      .subscribe((res) => {\r\n        this.loading = false;\r\n        this.saveAsExcelFile(res, 'data_table');\r\n        // window.open(url.toString(), '_blank');\r\n      },\r\n        (err) => { this.loading = false; }\r\n      );\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  exportPDF() {\r\n    this._exportDataService.exportPDF(this.postings).subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n      },\r\n      (err) => { },\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  susa() {\r\n    this._router.navigate(['/dashboard/shared/data/susa']);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  constructor(private primengConfig: PrimeNGConfig, private bnIdle: BnNgIdleService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n\r\n    this.bnIdle.startWatching(900).subscribe((isTimedOut: boolean) => {\r\n        console.log('session expired');\r\n        localStorage.clear();\r\n        this._router.navigate(['/']);\r\n    });\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","<!-- <app-layout></app-layout> -->\r\n<router-outlet></router-outlet>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminRegistrationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  addUser(user) {\r\n    console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user', user);\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Users {\r\n    id: number;\r\n    title: string =  '';\r\n    OrganisationId: number;\r\n    email: string ='';\r\n    // role:  string ='';\r\n    RoleId: number = 3;\r\n    role: string = '';\r\n    firstname: string ='';\r\n    lastname: string ='';\r\n    username: string ='';\r\n    mobileNumber: string ='';\r\n    // contactPerson: string ='';\r\n    street: string ='';\r\n    housenumber: number = null;\r\n    city: string ='';\r\n    postCode: string ='';\r\n    country: string ='';\r\n\r\n}","<p-toast></p-toast>\r\n<h1  class=\"p-text-center\">{{'precalc.precalc'| translate}}</h1>\r\n<!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n\r\n<p-progressBar *ngIf=\"waiting\" mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar>\r\n\r\n<h3>{{'precalc.text_word'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"textByWordStart()\" [disabled]=\"disabletextWord\"></button>\r\n<br><br>\r\n\r\n<h3>{{'precalc.text_account'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"textByAccountStart()\" [disabled]=\"disableText_account\"></button>\r\n\r\n<h3>{{'precalc.amount'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"amountStart()\" [disabled]=\"disableAmount\"></button>\r\n\r\n<h3>{{'precalc.credit'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"creditorStart()\" [disabled]=\"disableCredit\"></button>\r\n\r\n<h3>{{'precalc.payment'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"paymentStart()\" [disabled]=\"disablePayment\"></button>\r\n\r\n<h3>{{'precalc.due_date'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"dueDateStart()\" [disabled]=\"disableDueDate\"></button>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../service/procedure.service';\r\nimport { PreCalculateService } from '../service/pre-calculate.service';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-pre-calculate',\r\n  templateUrl: './pre-calculate.component.html',\r\n  styleUrls: ['./pre-calculate.component.sass']\r\n})\r\nexport class PreCalculateComponent implements OnInit {\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  waiting: boolean;\r\n  disableAmount: boolean;\r\n  disableCredit: boolean;\r\n  disabletextWord: boolean;\r\n  disableText_account: boolean;\r\n  disablePayment: boolean;\r\n  disableDueDate: boolean;\r\n  disableDocType: boolean;\r\n\r\n  constructor(private _preCalcService: PreCalculateService, private _messageService: MessageService,\r\n    private _procedureService: ProcedureService, private _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.disableDocType = (localStorage.getItem('currentProcedureDocType') !== 'true');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.disableAmount = (localStorage.getItem('currentProcedureAmount') === 'true');\r\n    this.disableCredit = (localStorage.getItem('currentProcedureCredit') === 'true');\r\n    this.disabletextWord = (localStorage.getItem('currentProcedureText_word') === 'true');\r\n    this.disableText_account = (localStorage.getItem('currentProcedureText_account') === 'true');\r\n    this.disablePayment = (localStorage.getItem('currentProcedurePayment') === 'true');\r\n    this.disableDueDate = (localStorage.getItem('currentProcedureDueDate') === 'true');\r\n  }\r\n\r\n  updateProcedureStatus() {\r\n    if (this.disableAmount && this.disableCredit && this.disableDueDate &&\r\n      this.disablePayment && this.disableText_account && this.disabletextWord) {\r\n      this._procedureService.patch({ id: this.prcId, status: 'CALCULATED' })\r\n        .subscribe(res => localStorage.setItem('currentProcedureStatus', 'CALCULATED'));\r\n    }\r\n  }\r\n\r\n  textByWordStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.textAnalysisByWord(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureText_word', 'true');\r\n        this.disabletextWord = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  textByAccountStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.textAnalysisByAccount(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureText_account', 'true');\r\n        this.disableText_account = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n\r\n  amountStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.amountAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureAmount', 'true');\r\n        this.disableAmount = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  creditorStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.creditorAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureCredit', 'true');\r\n        this.disableCredit = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  paymentStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.paymentAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedurePayment', 'true');\r\n        this.disablePayment = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  dueDateStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.dueDateAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureDueDate', 'true');\r\n        this.disableDueDate = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <!-- <button type=\"button\" pButton pRipple label=\"{{ 'DueDateAnalysis.backToPayment' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\"\r\n      pTooltip=\"{{ 'PaymentAnalysis.backToPayment' | translate }}\" tooltipPosition=\"bottom\"></button> -->\r\n  </div>\r\n  <!-- <div class=\"p-col-12\">\r\n    <p class=\"p-text-left\" style=\"margin-left: -25px;\">{{minDate | date}} - {{toDate | date}}</p>\r\n  </div> -->\r\n  <!-- <div class=\"p-col-1\">\r\n    <p class=\"p-text-right\">{{minDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-2\"></div>\r\n  <div class=\"p-col-1\">\r\n    <p class=\"p-text-left\">{{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-8\"></div> -->\r\n  <!-- <div class=\"p-col-3\"></div> -->\r\n  <div class=\"p-col-1 p-text-right\" style=\"margin-top: 5px;\">{{minDate | date}}</div>\r\n  <!-- [style]=\"{width:'300px'}\" -->\r\n  <div class=\"p-col-4\" style=\"text-align: center;margin-top: 5px;\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\" [min]=\"0\"\r\n      [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\" style=\"margin-top: 5px;\">{{toDate | date}}</div>\r\n\r\n  <!-- [(ngModel)]=\"selectedAccount\"  (onChange)=\"accountChangedHandler($event)\" \r\n      [style]=\"{width:'300px'}\"-->\r\n  <div class=\"p-col-3 p-text-center\">\r\n    <p-dropdown [options]=\"delayData\" placeholder=\" {{'DueDateAnalysis.selectAccount' | translate}}\"\r\n      optionLabel=\"accountName\" [showClear]=\"true\" [filter]=\"true\" [(ngModel)]=\"selectedAccount\" filterBy=\"accountName\"\r\n      [style]=\"{width:'100%'}\">\r\n      <ng-template pTemplate=\"selectedItem\">\r\n        <div class=\"account-item account-item-value\" *ngIf=\"selectedAccount\">\r\n          <div>{{selectedAccount.accountNumber + ' - ' + selectedAccount.accountName}}</div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template let-account pTemplate=\"item\">\r\n        <div>{{account.accountNumber + ' - ' + account.accountName}}</div>\r\n      </ng-template>\r\n    </p-dropdown>\r\n  </div>\r\n  <div class=\"p-col-2\">\r\n    <p-inputNumber [(ngModel)]=\"maxDelay\" mode=\"decimal\" [min]=\"0\" [useGrouping]=\"false\" [showButtons]=\"true\"\r\n      buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"10\"\r\n      decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n      incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" size=\"6\" [style]=\"{width:'100%'}\">\r\n    </p-inputNumber>\r\n  </div>\r\n  <!-- <div class=\"p-col-6\"></div> -->\r\n  <div class=\"p-col-1 p-text-left\">\r\n    <button pButton pRipple type=\"button\" label=\"{{'DueDateAnalysis.search' | translate}}\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\"></button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart type=\"line\" height=\"350\" [data]=\"basicData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"scatter\" height=\"350\" [data]=\"secondChartData\" [options]=\"secondChartOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"delayData\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n            <col />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>Details</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"notPaidChartData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"notPaidDataTable\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"notPaidCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of columns\">\r\n              {{col.header | translate}}\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-right\">\r\n              <span *ngIf=\"col.field=='date'\">\r\n                {{ row.monthName + '-' + row.yearName }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='notPaid'\">\r\n                {{ +row.notPaid | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field!='date' && col.field!='notPaid'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div> -->\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"selectedAccount && selectedAccount.accountNumber\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"detailsData\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\"\r\n        [columns]=\"detailsCols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-4 p-text-left\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                col.field == 'dueDate' ||\r\n                col.field == 'applicationDate' ||\r\n                col.field == 'documentDate'\r\n              \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'applicationDate'\r\n              \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-due-date',\r\n  templateUrl: './due-date.component.html',\r\n  styleUrls: ['./due-date.component.sass'],\r\n})\r\nexport class DueDateComponent implements OnInit {\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateOptions: any;\r\n  // docDateData: any;\r\n  // docDateLabels: any[] = new Array();\r\n  // docPositiveData: any[] = new Array();\r\n  // docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  // notPaidLabels: any[] = new Array();\r\n  // notPaidData: any[] = new Array();\r\n  // notPaidDataTable: any[] = new Array();\r\n  // notPaidChartData: any;\r\n  secondChartData: any;\r\n  secondChartLabels: any[] = new Array();\r\n  secondChartOptions: any;\r\n\r\n  data: any[] = new Array();\r\n  @ViewChild('chart') chart: any;\r\n  // docCols: { header: string; field: string; }[];\r\n  // notPaidCols: TableColumn[];\r\n  delayCols: TableColumn[];\r\n  detailsCols: TableColumn[];\r\n  delayData: any;\r\n  detailsData: any[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  //for second chart\r\n  maxDate: Date;\r\n  // for second chart and slider\r\n  minDate: Date;\r\n  // for slider\r\n  toDate: Date;\r\n  // for second chart\r\n  rangeDays: number;\r\n  // for slider\r\n  maxRange: number;\r\n  // for slider\r\n  rangeValues: number[];\r\n  // for slider\r\n  baseFromDate: Date;\r\n  // for slider\r\n  baseToDate: Date;\r\n  secondChartDataRecords: any;\r\n\r\n  selectedAccount: { accountNumber: string; accountName: string };\r\n  maxDelay: number;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    let prcId = +localStorage.getItem('dueDatePrcId');\r\n    if (prcId == this.selectedProcedure) {\r\n      this.baseFromDate = new Date(localStorage.getItem('dueDateBaseMin'));\r\n      this.baseToDate = new Date(localStorage.getItem('dueDateBaseMax'));\r\n      this.minDate = new Date(localStorage.getItem('dueDateMinDate'));\r\n      this.toDate = new Date(localStorage.getItem('dueDateToDate'));\r\n    }\r\n\r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // { label: elem.paymentLabel, routerLink: '/dashboard/analysis/payment' },\r\n        { label: elem.label, routerLink: '/dashboard/analysis/due-date' },\r\n      ];\r\n\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.getData();\r\n\r\n    this.basicOptions = {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              stepSize: 50,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    this.detailsCols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNewName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.delay',\r\n        field: 'delay',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n    // this.delayCols = [\r\n    //   {\r\n    //     header: 'DueDateAnalysis.accountNumber',\r\n    //     field: 'accountNumber',\r\n    //     align: 'left',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.accountName',\r\n    //     field: 'accountName',\r\n    //     align: 'left',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.positiveDelay',\r\n    //     field: 'delayPos',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.negativeDelay',\r\n    //     field: 'delayNeg',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.count',\r\n    //     field: 'count',\r\n    //     align: 'center',\r\n    //   },\r\n    // ];\r\n\r\n    // this.notPaidCols = [\r\n    //   {\r\n    //     header: 'DueDateAnalysis.date',\r\n    //     field: 'date',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.notPaid',\r\n    //     field: 'notPaid',\r\n    //     align: 'center',\r\n    //   },\r\n    // ];\r\n  } // end of ng on init\r\n\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    let start = this.minDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    let parmas = { maxDelay: this.maxDelay, accountNumber: this.selectedAccount?.accountNumber ?? null };\r\n    this._analysisService\r\n      .getDueDateAnalysis(this.selectedOrganisation, this.selectedProcedure, start, end, parmas)\r\n      .subscribe(\r\n        async (res) => {\r\n          // debugger;\r\n          if (!this.maxDelay) this.maxDelay = res.data.maxDelay;\r\n          this.data = res.data.dueDateReference.data;\r\n          this.labels = res.data.dueDateReference.labels;\r\n          this.secondChartDataRecords = res.data.dueDateReference.recordsDelay;\r\n          this.secondChartLabels = res.data.dueDateReference.secondChartLabels;\r\n          if (!this.baseFromDate) this.baseFromDate = new Date(res.dateRange[0].mindate);\r\n          if (!this.baseToDate) this.baseToDate = new Date(res.dateRange[0].maxappdate);\r\n          if (!this.minDate) this.minDate = new Date(res.dateRange[0].mindate);\r\n          if (!this.toDate) this.toDate = new Date(res.dateRange[0].maxappdate);\r\n          if (!this.rangeValues) this.rangeValues = [0, this.dayDiff(this.minDate, this.toDate)];\r\n          if (!this.maxRange) this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n          localStorage.setItem('dueDateBaseMin', this.baseFromDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateBaseMax', this.baseToDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateMinDate', this.minDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateToDate', this.toDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDatePrcId', '' + this.selectedProcedure);\r\n          this.maxDate = this.toDate;\r\n          // let lastChartDateTemp = this.secondChartLabels[this.secondChartLabels.length - 1].split('.');\r\n          // this.maxDate = new Date(lastChartDateTemp[2], lastChartDateTemp[1], lastChartDateTemp[0]);\r\n          // this.maxDate.setMonth(this.maxDate.getMonth() +1);\r\n          // let firstChartDateTemp = this.secondChartLabels[0].split('.');\r\n          // this.minDate = new Date(firstChartDateTemp[2], firstChartDateTemp[1], firstChartDateTemp[0]);\r\n          // this.minDate.setMonth(this.minDate.getMonth() +1);\r\n          this.rangeDays = Math.ceil((this.maxDate.getTime() - this.minDate.getTime()) / (1000 * 60 * 60 * 24));\r\n          this.rangeValues = [\r\n            this.dayDiff(this.baseFromDate, this.minDate),\r\n            this.dayDiff(this.baseFromDate, this.maxDate)\r\n          ];\r\n          this.waiting = false;\r\n          this.basicData = {\r\n            labels: this.labels,\r\n            datasets: new Array(),\r\n          };\r\n          this.basicData.datasets.push({\r\n            label: await this._translateService.get('DueDateAnalysis.firstChartLabel').toPromise(),\r\n            borderColor: `rgb(100,100,255)`,\r\n            data: this.data,\r\n            fill: false,\r\n          });\r\n          this.secondChartOptions = {\r\n            tooltips: {\r\n              callbacks: {\r\n                label: (tooltipItem, data) => {\r\n                  debugger;\r\n                  let value = tooltipItem.value;\r\n                  let point = this.secondChartDataRecords[tooltipItem.index];\r\n                  let label = point.label;\r\n                  let accountNumber = point?.accountNumber;\r\n                  let accountName = point?.accountName;\r\n                  return label + ' :' + value +  '  - ' + accountNumber + '/' + accountName;\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,99,132,0.2)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,99,132,0.2)\"\r\n                },\r\n                ticks: {\r\n                  minRotation: 40,\r\n                  maxRotation: 90,\r\n                  callback: (label, index, values) => {\r\n                    // debugger;\r\n                    // let temp = label * this.rangeDays / values.length;\r\n                    let tempDate = new Date(this.minDate);\r\n                    tempDate.setDate(tempDate.getDate() + label);\r\n                    label = tempDate.toLocaleString(\"de-DE\", {\r\n                      year: \"numeric\",\r\n                      month: \"2-digit\",\r\n                      day: \"2-digit\",\r\n                    });\r\n                    return label;\r\n                  },\r\n                },\r\n              }]\r\n            },\r\n          };\r\n          this.secondChartData = {\r\n            labels: this.labels,\r\n            datasets: [{\r\n              label: await this._translateService.get('DueDateAnalysis.secondChartLabel').toPromise(),\r\n              borderColor: `rgb(100,100,255)`,\r\n              data: this.secondChartDataRecords,\r\n              fill: false,\r\n            }]\r\n          };\r\n\r\n\r\n          // this.chart.refresh();\r\n          // this.chart.reinit();\r\n          this.docDataTable = res.data.docDateReference;\r\n          // this.notPaidDataTable = res.data.docDateReference;\r\n          if (!this.delayData) {\r\n            this.delayData = res.data.dueDateRefAccounts;\r\n\r\n            this.delayData.forEach((account) => {\r\n              // let accountNumber = parseInt(account.accountNumber, 10);\r\n              // account.accountNumber = isNaN(accountNumber)\r\n              //   ? account.accountNumber\r\n              //   : accountNumber;\r\n              account.accountName = account.accountName ?? 'No Name';\r\n            });\r\n          }\r\n\r\n          if (this.selectedAccount && this.selectedAccount.accountNumber) {\r\n            this._analysisService\r\n              .getDueDateAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.selectedAccount.accountNumber, start, end, this.maxDelay)\r\n              .subscribe(res => {\r\n                this.waiting = false;\r\n                this.detailsData = res.data.records;\r\n              });\r\n          }\r\n\r\n          // this.docDataTable.forEach((element) => {\r\n          //   this.docDateLabels.push(\r\n          //     element.monthName + '-' + element.yearName\r\n          //   );\r\n          //   this.notPaidLabels.push(\r\n          //     element.monthName + '-' + element.yearName\r\n          //   );\r\n          //   this.docPositiveData.push(element.positive);\r\n          //   this.docNegativeData.push(element.negative);\r\n          //   this.docData.push(+element.positive + +element.negative);\r\n          //   this.notPaidData.push(+element.notPaid);\r\n          // });\r\n\r\n          // this.docDateData = {\r\n          //   labels: this.docDateLabels,\r\n          //   datasets: [\r\n          //     {\r\n          //       type: 'line',\r\n          //       label: elem.average,\r\n          //       borderColor: '#42A5F5',\r\n          //       borderWidth: 2,\r\n          //       fill: false,\r\n          //       data: this.docData,\r\n          //     },\r\n          //     {\r\n          //       type: 'bar',\r\n          //       label: elem.positive,\r\n          //       backgroundColor: '#F5B59B',\r\n          //       data: this.docPositiveData,\r\n          //       borderColor: '#E5A58B',\r\n          //       borderWidth: 2,\r\n          //     },\r\n          //     {\r\n          //       type: 'bar',\r\n          //       label: elem.negative,\r\n          //       backgroundColor: '#FFD795',\r\n          //       borderColor: '#EFC785',\r\n          //       data: this.docNegativeData,\r\n          //     },\r\n          //   ],\r\n          // };\r\n\r\n          // this.notPaidChartData = {\r\n          //   labels: this.notPaidLabels,\r\n          //   datasets: [\r\n          //     {\r\n          //       label: elem.notPaid,\r\n          //       backgroundColor: '#42A5F5',\r\n          //       data: this.notPaidData,\r\n          //     },\r\n          //   ],\r\n          // };\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.minDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['/dashboard/analysis/payment/']);\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/due-date/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.detailsData.length; index++) {\r\n      let element = this.detailsData[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { due_date_analysis: worksheet },\r\n        SheetNames: ['due_date_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'due_date_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Word } from '../model/word';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DictionaryService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  complete(word: string): Observable<Word[]> {\r\n    return this._http.get<Word[]>(this._thisURL + 'complete/' + word);\r\n  }\r\n\r\n \r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavBarComponent } from './shared/nav-bar/nav-bar.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { ImportComponent } from './admin/import/import.component';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { UnauthComponent } from './shared/unauth/unauth.component';\r\nimport { NotfoundComponent } from './shared/notfound/notfound.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { LayoutComponent } from './shared/layout/layout.component'\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { AmountAnalysisComponent } from './shared/analysis/amount-analysis/amount-analysis.component';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { UserRegistrationComponent } from './shared/user-registration/user-registration.component';\r\nimport { UserEditComponent } from './shared/user-edit/user-edit.component';\r\nimport { UserDashboardComponent } from './shared/user-dashboard/user-dashboard.component';\r\nimport { OrganisationUsersComponent } from './shared/organisation-users/organisation-users.component';\r\nimport { ProcedureEditComponent } from './admin/procedure-edit/procedure-edit.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { DocumentTypeComponent } from './admin/document-type/document-type.component';\r\nimport { AmountAnalysisDetailsComponent } from './shared/analysis/amount-analysis/details/amount-analysis-details.component';\r\nimport { TextAnalysisComponent } from './shared/analysis/text-analysis/text-analysis.component';\r\nimport { TextAnalysisDetailsComponent } from './shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component';\r\nregisterLocaleData(localeDe, 'de');\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { SusaComponent } from './shared/sap-data-table/susa/susa.component';\r\nimport { PaymentAnalysisComponent } from './shared/analysis/payment-analysis/payment-analysis.component';\r\nimport { HighlightPipe } from './shared/pipes/highlight.pipe';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport { PaymentAnalysisDetailsComponent } from './shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component';\r\nimport { DueDateComponent } from './shared/analysis/payment-analysis/due-date/due-date.component';\r\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {SliderModule} from 'primeng/slider';\r\n\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { DueDateDetailsComponent } from './shared/analysis/payment-analysis/due-date-details/due-date-details.component';\r\nimport { CreditorAnalysisComponent } from './shared/analysis/creditor-analysis/creditor-analysis.component';\r\nimport { CreditorAnalysisDetailsComponent } from './shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component';\r\nimport { AccountTypeComponent } from './admin/account-type/account-type.component';\r\nimport { OpeningBalanceComponent } from './shared/liquidity/opening-balance/opening-balance.component';\r\nimport { CreditLineComponent } from './shared/liquidity/credit-line/credit-line.component';\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from './shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component';\r\nimport { TextAnalysisWordDetailsComponent } from './shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component';\r\nimport { TextAnalysisIndexedComponent } from './shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component';\r\nimport { TextAnalysisPreComponent } from './shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component';\r\nimport { PreCalculateComponent } from './admin/pre-calculate/pre-calculate.component';\r\nimport { AmountAnalysisPreComponent } from './shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component';\r\nimport { CreditorAnalysisCalcComponent } from './shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component';\r\nimport { PaymentDetailsMonthComponent } from './shared/analysis/payment-analysis/payment-details-month/payment-details-month.component';\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    FooterComponent,\r\n    ImportComponent,\r\n    UnauthComponent,\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    AdminRegistrationComponent,\r\n    ResetPasswordComponent,\r\n    LayoutComponent,\r\n    SAPDataTableComponent,\r\n    ResetPasswordNewUserComponent,\r\n    ProcedureRegistrationComponent,\r\n    AmountAnalysisComponent,\r\n    OrganisationRegistrationComponent,\r\n    UserRegistrationComponent,\r\n    UserEditComponent,\r\n    UserDashboardComponent,\r\n    OrganisationUsersComponent,\r\n    ProcedureEditComponent,\r\n    AdminDashboardComponent,\r\n    DocumentTypeComponent,\r\n    AmountAnalysisDetailsComponent,\r\n    TextAnalysisComponent,\r\n    TextAnalysisDetailsComponent,\r\n    SusaComponent,\r\n    PaymentAnalysisComponent,\r\n    HighlightPipe,\r\n    PaymentAnalysisDetailsComponent,\r\n    DueDateComponent,\r\n    DueDateDetailsComponent,\r\n    CreditorAnalysisComponent,\r\n    CreditorAnalysisDetailsComponent,\r\n    AccountTypeComponent,\r\n    OpeningBalanceComponent,\r\n    CreditLineComponent,\r\n    FreeLiquidityComponent,\r\n    FreeLiquidityDetailsComponent,\r\n    TextAnalysisWordDetailsComponent,\r\n    TextAnalysisIndexedComponent,\r\n    TextAnalysisPreComponent,\r\n    PreCalculateComponent,\r\n    AmountAnalysisPreComponent,\r\n    CreditorAnalysisCalcComponent,\r\n    PaymentDetailsMonthComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MenubarModule,\r\n    DividerModule,\r\n    StepsModule,\r\n    ChartModule,\r\n    CheckboxModule,\r\n    ToastModule,\r\n    MenubarModule,\r\n    TableModule,\r\n    FileUploadModule,\r\n    CalendarModule,\r\n    MultiSelectModule,\r\n    TooltipModule,\r\n    TreeModule,\r\n    SelectButtonModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    DropdownModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    SidebarModule,\r\n    ListboxModule,\r\n    PanelMenuModule,\r\n    MenuModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    ProgressSpinnerModule,\r\n    DialogModule,\r\n    DynamicDialogModule,\r\n    ContextMenuModule,\r\n    AccordionModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    PasswordModule,\r\n    MegaMenuModule,\r\n    AutoCompleteModule,\r\n    InputNumberModule,\r\n    BreadcrumbModule,\r\n    ConfirmDialogModule,\r\n    SliderModule\r\n  ],\r\n  providers: [MessageService, ConfirmationService, AuthGuard, {\r\n    provide: LOCALE_ID,\r\n    useValue: 'de'\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptor,\r\n    multi: true\r\n  },\r\n  BnNgIdleService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleServiceService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getRoles() {\r\n     return this._http.get<any>(this._thisURL + '/roles');\r\n  }\r\n  getmanagerRoleId() {\r\n    return this._http.get<any>(this._thisURL + '/roles/getManagerId');\r\n }\r\n\r\n addProcedure(procedure) {\r\n   return this._http.post<any>(this._thisURL + '/procedures', procedure);\r\n}\r\n\r\neditProcedure(procedure) {\r\n   return this._http.put<any>(this._thisURL + '/procedures/edit', procedure);\r\n}\r\n}\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\nexport class dataTableColumns {\r\n\r\n  field?: string;\r\n  header?: string;\r\n  align?: string;\r\n  width?: number;\r\n\r\n  constructor(field: string, header: string, align: string = 'center', width: number = 150) {\r\n    this.field = field;\r\n    this.header = header;\r\n    this.align = align;\r\n    this.width = width;\r\n  }\r\n\r\n  static async getDataTableColumns(translateService: TranslateService): Promise<dataTableColumns[]> {\r\n    let result: dataTableColumns[] = [];\r\n    result.push(new dataTableColumns(\"client\", await translateService.get(\"DataTableColumns.client\").toPromise()));\r\n    result.push(new dataTableColumns(\"companyCode\", await translateService.get(\"DataTableColumns.companyCode\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber\", await translateService.get(\"DataTableColumns.documentNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentDate\", await translateService.get(\"DataTableColumns.documentDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountType\", await translateService.get(\"DataTableColumns.accountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountType\", await translateService.get(\"DataTableColumns.contraAccountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountNumber\", await translateService.get(\"DataTableColumns.accountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountName\", await translateService.get(\"DataTableColumns.accountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountNumber\", await translateService.get(\"DataTableColumns.contraAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountName\", await translateService.get(\"DataTableColumns.contraAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"balance\", await translateService.get(\"DataTableColumns.balance\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"debitAmount\", await translateService.get(\"DataTableColumns.debitAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"creditAmount\", await translateService.get(\"DataTableColumns.creditAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"stackNumber\", await translateService.get(\"DataTableColumns.stackNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"recordNumber\", await translateService.get(\"DataTableColumns.recordNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"fiscalYear\", await translateService.get(\"DataTableColumns.fiscalYear\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmount\", await translateService.get(\"DataTableColumns.taxAmount\").toPromise(), 'right'));\r\n    //result.push(new dataTableColumns(\"identificationNumber\", await translateService.get(\"DataTableColumns.identificationNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"executionDate\", await translateService.get(\"DataTableColumns.executionDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"dueDate\", await translateService.get(\"DataTableColumns.dueDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"ledgerId\", await translateService.get(\"DataTableColumns.ledgerId\").toPromise()));\r\n    result.push(new dataTableColumns(\"assignment\", await translateService.get(\"DataTableColumns.assignment\").toPromise()));\r\n    result.push(new dataTableColumns(\"reference\", await translateService.get(\"DataTableColumns.reference\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentType\", await translateService.get(\"DataTableColumns.documentType\").toPromise()));\r\n   // result.push(new dataTableColumns(\"documentTypeNew\", await translateService.get(\"DataTableColumns.documentTypeNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingDate\", await translateService.get(\"DataTableColumns.postingDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountNumber\", await translateService.get(\"DataTableColumns.GLAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountName\", await translateService.get(\"DataTableColumns.GLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debtorNumber\", await translateService.get(\"DataTableColumns.debtorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"debtorName\", await translateService.get(\"DataTableColumns.debtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"creditorNumber\", await translateService.get(\"DataTableColumns.creditorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"creditorName\", await translateService.get(\"DataTableColumns.creditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountNo\", await translateService.get(\"DataTableColumns.contraAccountGLAccountNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountName\", await translateService.get(\"DataTableColumns.contraAccountGLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorNo\", await translateService.get(\"DataTableColumns.contraAccountDebtorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorName\", await translateService.get(\"DataTableColumns.contraAccountDebtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorNo\", await translateService.get(\"DataTableColumns.contraAccountCreditorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorName\", await translateService.get(\"DataTableColumns.contraAccountCreditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debitCredit\", await translateService.get(\"DataTableColumns.debitCredit\").toPromise()));\r\n    result.push(new dataTableColumns(\"balanceTransactionCurrency\", await translateService.get(\"DataTableColumns.balanceTransactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber2\", await translateService.get(\"DataTableColumns.documentNumber2\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"bookingAmount\", await translateService.get(\"DataTableColumns.bookingAmount\").toPromise()));\r\n    result.push(new dataTableColumns(\"exchangeRate\", await translateService.get(\"DataTableColumns.exchangeRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"transactionCurrency\", await translateService.get(\"DataTableColumns.transactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter1\", await translateService.get(\"DataTableColumns.costCenter1\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter2\", await translateService.get(\"DataTableColumns.costCenter2\").toPromise()));\r\n    result.push(new dataTableColumns(\"salesTaxKey\", await translateService.get(\"DataTableColumns.salesTaxKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"textPosting\", await translateService.get(\"DataTableColumns.textPosting\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxRate\", await translateService.get(\"DataTableColumns.taxRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"euTaxRate\", await translateService.get(\"DataTableColumns.euTaxRate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"costQuantityField\", await translateService.get(\"DataTableColumns.costQuantityField\").toPromise()));\r\n    result.push(new dataTableColumns(\"identifierBalanceCarryforward\", await translateService.get(\"DataTableColumns.identifierBalanceCarryforward\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingPeriod\", await translateService.get(\"DataTableColumns.postingPeriod\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"differentTaxationType\", await translateService.get(\"DataTableColumns.differentTaxationType\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentLink\", await translateService.get(\"DataTableColumns.documentLink\").toPromise()));\r\n    result.push(new dataTableColumns(\"cashDiscount\", await translateService.get(\"DataTableColumns.cashDiscount\").toPromise()));\r\n    result.push(new dataTableColumns(\"textHeader\", await translateService.get(\"DataTableColumns.textHeader\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingKey\", await translateService.get(\"DataTableColumns.postingKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmountDebit\", await translateService.get(\"DataTableColumns.taxAmountDebit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"taxAmountCredit\", await translateService.get(\"DataTableColumns.taxAmountCredit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"applicationDocument\", await translateService.get(\"DataTableColumns.applicationDocument\").toPromise()));\r\n    result.push(new dataTableColumns(\"applicationDate\", await translateService.get(\"DataTableColumns.applicationDate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"applicationDateNew\", await translateService.get(\"DataTableColumns.applicationDateNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"generalReversal\", await translateService.get(\"DataTableColumns.generalReversal\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation1\", await translateService.get(\"DataTableColumns.typeDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation1\", await translateService.get(\"DataTableColumns.contentDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation2\", await translateService.get(\"DataTableColumns.typeDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation2\", await translateService.get(\"DataTableColumns.contentDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation3\", await translateService.get(\"DataTableColumns.typeDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation3\", await translateService.get(\"DataTableColumns.contentDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation4\", await translateService.get(\"DataTableColumns.typeDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation4\", await translateService.get(\"DataTableColumns.contentDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation5\", await translateService.get(\"DataTableColumns.typeDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation5\", await translateService.get(\"DataTableColumns.contentDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation6\", await translateService.get(\"DataTableColumns.typeDocumentInformation6\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation6\", await translateService.get(\"DataTableColumns.contentDocumentInformation6\").toPromise()));\r\n    return result;\r\n    \r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../service/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private _messageService: MessageService, private _authService: AuthService, private _router: Router, public _translateService: TranslateService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n    localStorage.setItem('lang', browserLang);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   this._translateService.get('LOGIN.welcomeMsg').subscribe(elem => {\r\n      // console.log(elem)\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const data = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    this._authService\r\n      .login(data)\r\n      .subscribe(res => {\r\n\r\n        if (res && res.user.userinfo) {\r\n          const userInfo = res.user.userinfo;\r\n          const fullName = userInfo.firstname + ' ' + userInfo.lastname;\r\n          const role = userInfo.Role;\r\n          const username = userInfo.username;\r\n          const OrganisationId = userInfo.OrganisationId\r\n        \r\n          localStorage.setItem('username', username);\r\n          localStorage.setItem('role', role);\r\n          localStorage.setItem('full_name', fullName);\r\n          localStorage.setItem('organisationId', OrganisationId);\r\n          localStorage.setItem('token', res.token);\r\n        }\r\n\r\n        if(localStorage.getItem('role') === \"Admin\") {\r\n          this._router.navigate(['/dashboard/admin/dashboard']);\r\n        } else {\r\n          this._router.navigate(['/dashboard/shared/user/procedures']);\r\n        }\r\n\r\n      }, err => {\r\n        // this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n        //   let errorMsg = \"\" ; \r\n\r\n        //   if(err.status=== 400){\r\n        //     errorMsg = elem.badRequest_400\r\n        //   }\r\n        //   else if (err.status=== 401) {\r\n        //     errorMsg = elem.unauthorized_401\r\n        //   }\r\n        //   else if (err.status=== 403) {\r\n        //     errorMsg = elem.forbidden_403\r\n        //   }\r\n        //   else if (err.status=== 404) {\r\n        //     errorMsg = elem.NotFound_404\r\n        //   }\r\n        //   else if (err.status=== 500) {\r\n        //     errorMsg = elem.internalServerError_500\r\n        //   }\r\n        //   this._messageService.add({\r\n        //     severity: 'error',\r\n        //     summary: 'ERROR',\r\n        //     life: 10000,\r\n        //     detail: errorMsg\r\n        //   });\r\n        // })\r\n\r\n      });\r\n\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","<div class=\"cardBody\">\r\n  <p-toast></p-toast>\r\n\r\n  <div class=\"p-grid p-mt-6 \">\r\n\r\n    <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\">\r\n      <div class=\"pages-body login-page p-d-flex p-flex-column\">\r\n        <div class=\"p-as-center p-mt-auto p-mb-auto\">\r\n          <div class=\"pages-panel card p-d-flex p-flex-column\">\r\n            <div class=\"pages-header p-px-3 p-py-1 loginLogoCss\">\r\n              <img src=\"assets/logo.jpg\" height=\"100\" width=\"100\">\r\n            </div>\r\n            <h3 class=\"fontStyle\"> {{'LOGIN.welcomeWord' | translate}} </h3>\r\n            <div class=\"pages-detail p-mb-6 p-px-6 fontStyle\"> {{'LOGIN.welcomeMsg' | translate}}</div>\r\n            <div class=\"input-panel p-d-flex p-flex-column p-px-3\">\r\n              <form (ngSubmit)=\"login()\">\r\n                <div class=\"p-inputgroup \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-envelope\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"username\" id=\"email\" type=\"text\" pinputText [(ngModel)]=\"username\"\r\n                      class=\"p-inputtext p-component p-filled\" placeholder=\"Email\" autofocus>\r\n                  </span>\r\n                </div>\r\n                <div class=\"p-inputgroup p-mt-5 p-mb-6 \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-lock\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"password\" id=\"password\" type=\"password\" pinputText [(ngModel)]=\"password\"\r\n                      class=\"p-inputtext p-component p-filled\"\r\n                      placeholder=\"{{'LOGIN.passwordPlaceholder' | translate}}\">\r\n\r\n                  </span>\r\n                </div>\r\n                <button pButton type=\"submit\" label=\"{{'LOGIN.loginButton' | translate}}\"\r\n                  class=\" fontStyle p-button-raised p-button-rounded buttonCss p-mb-4 p-px-3 p-button p-component p-ripple login-button\"\r\n                  ></button>\r\n              </form>\r\n            </div>\r\n            <a class=\"linkCss p-mb-4 fontStyle\"> {{'LOGIN.passowrdForgetLink' | translate}}</a>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcedureService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/procedures';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get() {\r\n    return this._http.get<any>(this._thisURL);\r\n  }\r\n\r\n  insert(p: Procedures) {\r\n    return this._http.post<any>(this._thisURL, p);\r\n  }\r\n\r\n  getOne(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  update(p: Procedures) {\r\n    return this._http.put<any>(this._thisURL + '/' + p.id, p);\r\n  }\r\n\r\n  patch(p) {\r\n    return this._http.put<any>(this._thisURL + '/' + p.id, p);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this._http.delete<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Organisation } from \"../../shared/model/organisation\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-organisation-registration',\r\n  templateUrl: './organisation-registration.component.html',\r\n  styleUrls: ['./organisation-registration.component.sass']\r\n})\r\nexport class OrganisationRegistrationComponent implements OnInit {\r\n\r\n  organisation: Organisation = new Organisation();\r\n  id: number;\r\n  imageSrc: string | ArrayBuffer;\r\n  fromFront: boolean = false;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, public _translateService: TranslateService,\r\n    private _route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = +this._route.snapshot.paramMap.get('id');\r\n    if (this.id > 0) {\r\n      this._orgService\r\n        .getOne(this.id)\r\n        .subscribe(res => {\r\n          if (res.length > 0) {\r\n            this.organisation = res[0];\r\n            this.fromFront = this.organisation.logo? false : true;\r\n          }\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          });\r\n        });\r\n    }\r\n\r\n  } // end of ngInit\r\n\r\n  UploadHandler(event) {\r\n    const selectedFiles: FileList = event.files;\r\n    this.organisation.logo = selectedFiles[0];\r\n    this.fromFront = true;\r\n    if (selectedFiles && selectedFiles[0]) {\r\n      const file = selectedFiles[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n\r\n      reader.readAsDataURL(file);\r\n  }\r\n  }\r\n\r\n  submitHandler() {\r\n\r\n    const formData: FormData = new FormData();\r\n    formData.append('logo', this.organisation.logo);\r\n    formData.append('data', JSON.stringify(this.organisation));\r\n\r\n    // if organisation has an id value, then the action is update\r\n    if (this.organisation && this.organisation.id > 0) {\r\n      this._orgService\r\n        .update(formData, this.organisation.id)\r\n        .subscribe(res => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation updated successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n    } else {\r\n      this._orgService\r\n        .insert(formData)\r\n        .subscribe(res => {\r\n          this.organisation = res;\r\n          this.fromFront = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation inserted successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n\r\n    } // end of if-else has an id\r\n  } // end of submit handler function\r\n\r\n\r\n\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/admin/dashboard']);\r\n  }\r\n\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <h5 class=\"p-text-center\"> {{'Organisation_Registration.header' | translate}} </h5>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"name\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.name' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #name=\"ngModel\" name=\"name\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.name\">\r\n            <small *ngIf=\"name.invalid && name.touched \"\r\n              class=\"spanCss \">{{'Organisation_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.email' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #email=\"ngModel\" name=\"email\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.email\"\r\n              pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\">\r\n            <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \">\r\n              {{'Organisation_Registration.emailErrorMsg' | translate}}</small>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"street\"\r\n            class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{'Organisation_Registration.street' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #street=\"ngModel\" name=\"street\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.street\">\r\n            <small *ngIf=\"street.invalid && street.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.streetErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"houseNr\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.houseNr' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #houseNr=\"ngModel\" name=\"houseNr\" type=\"number\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.houseNr\">\r\n            <small *ngIf=\"houseNr.invalid && houseNr.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.houseNrErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.city' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #city=\"ngModel\" name=\"city\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.city\">\r\n            <small *ngIf=\"city.invalid && city.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.cityErrorMsg' | translate}}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.postcode' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #postCode=\"ngModel\" name=\"postCode\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.postCode\">\r\n            <small *ngIf=\"postCode.invalid && postCode.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.postcodeErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.country' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #country=\"ngModel\" name=\"country\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.country\">\r\n            <small *ngIf=\"country.invalid && country.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.countryErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"logo\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.logo' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-fileUpload name=\"logo\" mode=\"advanced\" [showUploadButton]=\"false\" customUpload=\"true\"\r\n              (uploadHandler)=\"UploadHandler($event)\" uploadLabel=\"Set Logo\" [auto]=\"true\"\r\n              accept=\"image/*\">\r\n              <ng-template pTemplate=\"content\">\r\n\r\n              </ng-template>\r\n            </p-fileUpload>\r\n            <div *ngIf=\"!fromFront\" class=\"p-mt-2\">\r\n              <img src=\"{{organisation.logo}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n            <div *ngIf=\"fromFront\" class=\"p-mt-2\">\r\n              <img src=\"{{imageSrc}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OpeningBalance } from '../../model/openingBalance';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-opening-balance',\r\n  templateUrl: './opening-balance.component.html',\r\n  styleUrls: ['./opening-balance.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class OpeningBalanceComponent implements OnInit {\r\n  data: OpeningBalance[] = new Array();\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  cols: TableColumn[];\r\n  originalOpeningBalance: number;\r\n  originalOpeningBalanceDate: Date;\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(\r\n    private _liquidityService: LiquidityService,\r\n    private datepipe: DatePipe,\r\n    private _messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalance',\r\n        field: 'StartingBalance',\r\n        width: '250',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalanceDate',\r\n        field: 'StartingBalanceDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n    this.searching = true;\r\n    this._liquidityService.getOpeningBalance(this.orgId, this.prcId).subscribe(\r\n      (res) => {\r\n        res.forEach((val) => {\r\n          val.StartingBalanceDate = val.StartingBalanceDate\r\n            ? new Date(val.StartingBalanceDate)\r\n            : null;\r\n          let accountNumber = parseInt(val.accountNumber?.toString(), 10);\r\n          val.accountNumber = isNaN(accountNumber)\r\n            ? val.accountNumber\r\n            : accountNumber;\r\n          let StartingBalance = parseFloat(val?.StartingBalance?.toString());\r\n          val.StartingBalance = isNaN(StartingBalance)\r\n            ? val.StartingBalance\r\n            : StartingBalance;\r\n        });\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.searching = false;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  } // end of ng on init\r\n\r\n  editRow(row: OpeningBalance) {\r\n    this.data\r\n      .filter((row) => row.isEditable)\r\n      .map((r) => {\r\n        r.isEditable = false;\r\n        return r;\r\n      });\r\n    row.isEditable = true;\r\n    this.originalOpeningBalance = row.StartingBalance;\r\n    this.originalOpeningBalanceDate = row.StartingBalanceDate;\r\n  }\r\n\r\n  resetStartingBalance(row: OpeningBalance) {\r\n    row.StartingBalance = null;\r\n    row.StartingBalanceDate = null;\r\n    this.save(row);\r\n  }\r\n\r\n  save(row: OpeningBalance) {\r\n    this.searching = true;\r\n    let tempRow: any = {...row};\r\n    tempRow.StartingBalanceDate = this.datepipe.transform(row.StartingBalanceDate, 'yyyy-MM-dd');\r\n    this._liquidityService\r\n      .updateOpeningBalance(this.orgId, this.prcId, tempRow)\r\n      .subscribe(\r\n        (res) => {\r\n          row.isEditable = false;\r\n          let numOfRecords = res.length > 0 ? res[0] : 0;\r\n          localStorage.setItem('currentProcedureLiquidity', 'true');\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `opening balance is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`,\r\n          });\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(row: OpeningBalance) {\r\n    row.StartingBalance = this.originalOpeningBalance;\r\n    row.StartingBalanceDate = this.originalOpeningBalanceDate;\r\n    row.isEditable = false;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      this.filtersNo--;\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (key == 'StartingBalanceDate') {\r\n              this.data = this.tempData.filter(\r\n                (value) =>\r\n                  value['StartingBalanceDate']?.getDate() ==\r\n                    element.getDate() &&\r\n                  value['StartingBalanceDate']?.getMonth() ==\r\n                    element.getMonth() &&\r\n                  value['StartingBalanceDate']?.getFullYear() ==\r\n                    element.getFullYear()\r\n              );\r\n            } else {\r\n              if (element.length < 3) {\r\n                this.data = this.tempData.filter(\r\n                  (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n                );\r\n              } else {\r\n                this.data = this.tempData.filter((value) =>\r\n                  value[key]?.toLowerCase().includes(element.toLowerCase())\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (key == 'StartingBalanceDate') {\r\n            this.data = this.tempData.filter(\r\n              (value) =>\r\n                value['StartingBalanceDate']?.getDate() == element.getDate() &&\r\n                value['StartingBalanceDate']?.getMonth() ==\r\n                  element.getMonth() &&\r\n                value['StartingBalanceDate']?.getFullYear() ==\r\n                  element.getFullYear()\r\n            );\r\n          } else {\r\n            if (element.length < 3) {\r\n              this.data = this.data.filter(\r\n                (value) =>\r\n                  value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.data.filter((value) =>\r\n                value[key]\r\n                  ?.toString()\r\n                  .toLowerCase()\r\n                  .includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">\r\n      {{ procedureName }}\r\n    </h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n  </div>\r\n\r\n\r\n  <div class=\"p-col-12\">\r\n    <p-table\r\n      #dt\r\n      dataKey=\"accountNumber\"\r\n      [value]=\"data\"\r\n      [columns]=\"cols\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"400px\"\r\n      [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\"\r\n    >\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button\r\n            type=\"button\"\r\n            pButton\r\n            pRipple\r\n            icon=\"pi pi-filter-slash\"\r\n            (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\"\r\n            pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n            *ngIf=\"filtersNo > 0\"\r\n            tooltipPosition=\"bottom\"\r\n          ></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of cols\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{ \"Account_Type.Action\" | translate }}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'StartingBalanceDate'\"\r\n            />\r\n            <p-calendar\r\n              *ngIf=\"col.field == 'StartingBalanceDate'\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              (onSelect)=\"filterChange($event, col.field)\"\r\n              [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\"\r\n              yearRange=\"1900:2100\"\r\n              appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"\r\n            >\r\n            </p-calendar>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of cols\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                col.field != 'StartingBalance' &&\r\n                col.field != 'StartingBalanceDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalanceDate'\">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n\r\n            <p-inputNumber\r\n              *ngIf=\"row.isEditable && col.field == 'StartingBalance'\"\r\n              [(ngModel)]=\"row.StartingBalance\"\r\n              mode=\"decimal\"\r\n              locale=\"de-DE\"\r\n              [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\"\r\n              inputId=\"horizontal\"\r\n              spinnerMode=\"horizontal\"\r\n              [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\"\r\n              decrementButtonIcon=\"pi pi-minus\"\r\n              [style]=\"{ 'margin-right': '10px' }\"\r\n              size=\"8\"\r\n            >\r\n            </p-inputNumber>\r\n\r\n            <p-calendar\r\n              *ngIf=\"row.isEditable && col.field == 'StartingBalanceDate'\"\r\n              [(ngModel)]=\"row.StartingBalanceDate\"\r\n              [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\"\r\n              yearRange=\"1900:2100\"\r\n              appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"\r\n              clientTimeZone=\"local\"\r\n            ></p-calendar>\r\n          </td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-pencil\"\r\n              (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Edit' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-save\"\r\n              (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-times\"\r\n              (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Cancel' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-trash\"\r\n              (click)=\"resetStartingBalance(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.delete' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.sass']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{name:'Manager', value: 2}, {name:'User', value: 3}];\r\n  \r\n\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.id = +localStorage.getItem('selectedUser_userId');\r\n    this.userModel.RoleId = +localStorage.getItem('selectedUser_roleId');\r\n    this.userModel.username = localStorage.getItem('selectedUser_username');\r\n    this.userModel.email = localStorage.getItem('selectedUser_email');\r\n    this.userModel.title = localStorage.getItem('selectedUser_title');\r\n    this.userModel.firstname = localStorage.getItem('selectedUser_firstname');\r\n    this.userModel.lastname = localStorage.getItem('selectedUser_lastname');\r\n    this.userModel.mobileNumber = localStorage.getItem('selectedUser_mobileNr');\r\n    this.userModel.street = localStorage.getItem('selectedUser_street');\r\n    this.userModel.housenumber = parseFloat(localStorage.getItem('selectedUser_houseNr'));\r\n    this.userModel.postCode = localStorage.getItem('selectedUser_postcode');\r\n    this.userModel.city = localStorage.getItem('selectedUser_city');\r\n    this.userModel.country = localStorage.getItem('selectedUser_country');\r\n  }\r\n\r\n  submitHandler() {\r\n    this._userService.editUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Updated successfully!',\r\n          detail: 'Updated successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/dashboard/shared/user/users']); \r\n    localStorage.removeItem(\"selectedUser_userId\");\r\n    localStorage.removeItem(\"selectedUser_roleId\");\r\n    localStorage.removeItem(\"selectedUser_username\");\r\n    localStorage.removeItem(\"selectedUser_email\");\r\n    localStorage.removeItem(\"selectedUser_title\");\r\n    localStorage.removeItem(\"selectedUser_firstname\");\r\n    localStorage.removeItem(\"selectedUser_lastname\");\r\n    localStorage.removeItem(\"selectedUser_mobileNr\");\r\n    localStorage.removeItem(\"selectedUser_street\");\r\n    localStorage.removeItem(\"selectedUser_houseNr\");\r\n    localStorage.removeItem(\"selectedUser_postcode\");\r\n    localStorage.removeItem(\"selectedUser_city\");\r\n    localStorage.removeItem(\"selectedUser_country\");\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.editHeader' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown  name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","export const environment = {\r\n  production: false,\r\n  // baseUrl: 'http://localhost:8000/api/',\r\n   baseUrl: 'http://venalytics.de:8000/api/',\r\n  // 'https://www.openthesaurus.de/synonyme/search?format=application/json&q='\r\n  // autocomplete: 'https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=deen&query='\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreCalculateService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/precalculate/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  textAnalysisByWord(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'text-by-word/' + orgId +'/' + prcId);\r\n  }\r\n\r\n\r\n  textAnalysisByAccount(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'text-by-account/' + orgId +'/' + prcId);\r\n  }\r\n\r\n\r\n  amountAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'amount/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  creditorAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'creditor/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  paymentAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'payment/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  dueDateAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'due-date/' + orgId +'/' + prcId);\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<p-table\r\n  #dtmaxb\r\n  dataKey=\"accountNumber\"\r\n  [value]=\"data\"\r\n  [resizableColumns]=\"true\"\r\n  styleClass=\"p-datatable-gridlines\"\r\n  [columns]=\"cols\"\r\n  responsive=\"true\"\r\n  [scrollable]=\"true\"\r\n  scrollHeight=\"350px\"\r\n  [reorderableColumns]=\"true\"\r\n  [loading]=\"waiting\"\r\n  [lazy]=\"true\"\r\n  [customSort]=\"true\"\r\n  (onLazyLoad)=\"sort($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Limit options -->\r\n      <p-dropdown\r\n        [options]=\"pageLimitSizes\"\r\n        optionValue=\"value\"\r\n        optionLabel=\"label\"\r\n        [(ngModel)]=\"limit\"\r\n        (onChange)=\"limitChange($event)\"\r\n        class=\"p-mr-2\"\r\n      ></p-dropdown>\r\n      <!-- Go to First page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-left\"\r\n        (click)=\"firstPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go previous -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-left\"\r\n        (click)=\"previousPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Page number -->\r\n      <input\r\n        pInputText\r\n        type=\"number\"\r\n        min=\"1\"\r\n        class=\"pageNrInput p-mr-2\"\r\n        (input)=\"pageNrChange($any($event.target).value)\"\r\n        [value]=\"pageNr\"\r\n        [placeholder]=\"pageNr\"\r\n      />\r\n      <!-- Go to next Page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-right\"\r\n        (click)=\"nextPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go to last page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-right\"\r\n        (click)=\"lastPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n\r\n      <!-- dispalyed data of total count -->\r\n      {{ displayedDataCount }} of {{ totalCount }}\r\n      <!-- Clear filter -->\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-filter-slash\"\r\n        (click)=\"clearFilter()\"\r\n        class=\"p-ml-6 clearFilter\"\r\n        pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n        *ngIf=\"filtersNo > 0\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\" let-columns>\r\n    <colgroup>\r\n      <col *ngFor=\"let col of columns\" />\r\n      <col />\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\" let-columns>\r\n    <tr>\r\n      <th\r\n        pSortableColumn=\"{{ col.field }}\"\r\n        pResizableColumn\r\n        pReorderableColumn\r\n        class=\"p-text-{{ col.align }}\"\r\n        *ngFor=\"let col of columns\"\r\n      >\r\n        <span pTooltip=\"{{ col.header | translate }}\">\r\n          {{ col.header | translate }}\r\n        </span>\r\n        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n      </th>\r\n      <th>Details</th>\r\n    </tr>\r\n    <tr>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountNumber']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountNumber')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountName']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountName')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n    <tr [pSelectableRow]=\"row\">\r\n      <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n        <span *ngIf=\"col.field == 'totalBalance'\">\r\n          {{ row.totalBalance | currency: \"EUR\":\"\" }}\r\n        </span>\r\n        <span\r\n          *ngIf=\"col.field != 'totalBalance'\"\r\n          pTooltip=\"{{ row[col.field] }}\"\r\n        >\r\n          {{ row[col.field] }}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-list\"\r\n          class=\"p-button-rounded p-button-warning\"\r\n          (click)=\"goToDetails(row)\"\r\n          pTooltip=\"Details\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis-calc',\r\n  templateUrl: './creditor-analysis-calc.component.html',\r\n  styleUrls: ['./creditor-analysis-calc.component.sass']\r\n})\r\nexport class CreditorAnalysisCalcComponent implements OnInit {\r\n\r\n  cols: TableColumn[];\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: any;\r\n  data: any;\r\n  accountNumber: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  criteria: any = {\r\n    limit: 25,\r\n    offset: 0,\r\n    orderBy: 'accountNumber',\r\n    sortOrder: 1,\r\n  };\r\n  pageLimitSizes = [{ value: 25, label: '25' }, { value: 50, label: '50' }, { value: 100, label: '100' }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/creditor' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.cols = [\r\n        {\r\n          header: elem.accountNumber,\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.accountName,\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.count,\r\n          field: 'totlaCount',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.sum,\r\n          field: 'totalBalance',\r\n          align: 'right',\r\n        },\r\n      ];\r\n    });\r\n\r\n    // this.getData();\r\n  } // end of ng o0n init\r\n\r\n  filterChange(query, colName): void {\r\n    this.getData();\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/creditor/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key] && key != 'offset') {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length - 4;\r\n    this._analysisService\r\n      .getCreditorAnalysisCalc(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.data = res.data;\r\n          this.totalCount = res.count[0]['FOUND_ROWS()'];\r\n          this.displayedDataCount =\r\n            this.totalCount > this.limit ? this.limit : this.totalCount;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField? event.sortField : 'accountNumber';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.criteria.offset -= +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h3 class=\"p-text-center\">{{ accountName }}</h3>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <!-- <div class=\"card\"> -->\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton\r\n        [options]=\"detailsOptions\"\r\n        (onChange)=\"changeData($event.value)\"\r\n        optionLabel=\"name\"\r\n        optionValue=\"value\"\r\n        [(ngModel)]=\"detailsOption\"\r\n      >\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <!-- <th> -->\r\n          <!-- <p-tableHeaderCheckbox></p-tableHeaderCheckbox> -->\r\n          <!-- </th> -->\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-center\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <!-- <th></th> -->\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"\r\n                col.field != 'textRelevant' &&\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName'\r\n              \"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevantComment' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table\r\n      #dtall\r\n      dataKey=\"id\"\r\n      [value]=\"allRecordData\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n      [lazy]=\"true\"\r\n      [customSort]=\"true\"\r\n      (onLazyLoad)=\"sort($event)\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <!--             <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"></button>\r\n -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-7\">\r\n            <!-- Limit options -->\r\n            <p-dropdown\r\n              [options]=\"pageLimitSizes\"\r\n              optionValue=\"value\"\r\n              optionLabel=\"value\"\r\n              [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\"\r\n              class=\"p-mr-2\"\r\n            ></p-dropdown>\r\n            <!-- Go to First page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go previous -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Page number -->\r\n            <input\r\n              pInputText\r\n              type=\"number\"\r\n              min=\"1\"\r\n              class=\"pageNrInput p-mr-2\"\r\n              (input)=\"pageNrChange($any($event.target).value)\"\r\n              [value]=\"pageNr\"\r\n              [placeholder]=\"pageNr\"\r\n            />\r\n            <!-- Go to next Page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go to last page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- dispalyed data of total count -->\r\n            {{ displayedDataCount }} of {{ totalCount }}\r\n            <!-- Clear filter -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-filter-slash\"\r\n              (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\"\r\n              pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n              *ngIf=\"filtersNo > 0\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"\r\n                col.field != 'textRelevant' &&\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName'\r\n              \"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"backCriteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChangeBack($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevantComment' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TextAnalysisDetails } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-details',\r\n  templateUrl: './text-analysis-details.component.html',\r\n  styleUrls: ['./text-analysis-details.component.sass'],\r\n})\r\nexport class TextAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: TextAnalysisDetails[] = new Array();\r\n  allRecordData: TextAnalysisDetails[] = new Array();\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: TextAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  accountName: string;\r\n  // for pagination ends\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _messageService: MessageService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _translateService: TranslateService,\r\n    private _exportDataService: ExportDataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      {\r\n        label: 'Text Analysis',\r\n        routerLink: '/dashboard/analysis/text',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n      {\r\n        label: 'Details',\r\n        routerLink: this._router.url,\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: 'Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'Marked', value: 2 },\r\n      { name: 'All', value: 3 },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.reference',\r\n        field: 'reference',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textPosting',\r\n        field: 'textPosting',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textHeader',\r\n        field: 'textHeader',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'textRelevant',\r\n        width: '6',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'textRelevantComment',\r\n        width: '35',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          if (this.data.length > 0) {\r\n            this.accountName = this.data[0].accountName;\r\n          }\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/text/']);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { text_analysis: worksheet },\r\n        SheetNames: ['text_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'text_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  selectRow(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.textRelevant) {\r\n      row.textRelevant = false;\r\n      row.textRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['textRelevant'] = false;\r\n        this.selected[index]['textRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.textRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['textRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.textRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['textRelevant'] = true;\r\n      this.selected[index]['textRelevantComment'] = row.textRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantTextAnalysis(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records set as relevant successfully!',\r\n          });\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetailsRelevant(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getTextAnalysisDetailsByAccount(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.prcId;\r\n    // debugger;\r\n    this._exportDataService\r\n      .exportXLSX('text_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Text_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (err) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentAnalysis, PaymentData } from '../../model/paymentAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n@Component({\r\n  selector: 'app-payment-analysis',\r\n  templateUrl: './payment-analysis.component.html',\r\n  styleUrls: ['./payment-analysis.component.sass'],\r\n})\r\nexport class PaymentAnalysisComponent implements OnInit {\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  specificAccountData: any;\r\n  data: PaymentData[];\r\n  blueData: any[] = new Array();\r\n  RedData: any[] = new Array();\r\n  GreenData: any[] = new Array();\r\n  specificAccountBlueData: any[] = new Array();\r\n  specificAccountRedData: any[] = new Array();\r\n  specificAccountGreenData: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  ready: boolean = false;\r\n  accounts: any[] = new Array();\r\n  blueAccounts: any[] = new Array();\r\n  top10Blue: any[] = new Array();\r\n  greenAccounts: any[] = new Array();\r\n  redAccounts: any[] = new Array();\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  procedureName: string;\r\n  top10Red: any[];\r\n  top10Green: any[];\r\n  top10: number;\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  top10Cols: TableColumn[];\r\n  accountsCols: TableColumn[];\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  selectedMaxAccountNumber: string;\r\n  selectedMaxAccount: any;\r\n  @ViewChild('chart') chart: any;\r\n  selectedMaxAccountName: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  blue: string;\r\n  red: string;\r\n  green: string;\r\n  waiting: boolean = true;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.waiting = true;\r\n    this._translateService.get('PaymentAnalysis').subscribe((elem) => {\r\n      this.blue = elem.blue;\r\n      this.red = elem.red;\r\n      this.green = elem.green;\r\n\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/payment' },\r\n      ];\r\n\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 40,\r\n                maxRotation: 90,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 0,\r\n                maxRotation: 0,\r\n                callback: function (label, index, values) {\r\n                  // debugger;\r\n                  let currencyPipe = new CurrencyPipe('de');\r\n                  label = currencyPipe.transform(label, 'EURO', '');\r\n                  return label;\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n      this.top10 = 1;\r\n\r\n      this.paymentOptions = [\r\n        { name: this.blue, value: 1, color: 'rgb(100,100,255)' },\r\n        { name: this.red, value: 2, color: 'rgb(255,100,100)' },\r\n        { name: this.green, value: 3, color: 'rgb(100,255,100)' },\r\n      ];\r\n\r\n      this.top10Cols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.sum',\r\n          field: 'value',\r\n          align: 'right',\r\n        },\r\n      ];\r\n\r\n      this.accountsCols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.blue',\r\n          field: 'blue',\r\n          align: 'right',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.red',\r\n          field: 'red',\r\n          align: 'right',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.green',\r\n          field: 'green',\r\n          align: 'right',\r\n        },\r\n      ];\r\n\r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.basicData.datasets.push(\r\n        {\r\n          label: this.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.blueData,\r\n        },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.RedData,\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.GreenData,\r\n        }\r\n      );\r\n\r\n      this.specificAccountData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.specificAccountData.datasets.push(\r\n        {\r\n          label: this.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.specificAccountBlueData,\r\n        },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.specificAccountRedData,\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.specificAccountGreenData,\r\n        }\r\n      );\r\n    });\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._analysisService\r\n      .getPaymentAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res.data.res;\r\n          this.accounts = res.data.accounts;\r\n          this.startDate = res.dateRange[0].mindate;\r\n          this.endDate = res.dateRange[0].maxdate;\r\n\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n\r\n            this.labels.push(element.monthName + '-' + element.yearName);\r\n            this.blueData.push(Math.abs(element.blue.value));\r\n            this.GreenData.push(Math.abs(element.green.value));\r\n            this.RedData.push(Math.abs(element.red.value));\r\n          }\r\n\r\n          // get top 10\r\n          this.accounts.sort((a, b) => Math.abs(b.blue) - Math.abs(a.blue));\r\n          this.top10Blue = this.accounts.slice(0, 10);\r\n          this.accounts.sort((a, b) => Math.abs(b.red) - Math.abs(a.red));\r\n          this.top10Red = this.accounts.slice(0, 10);\r\n          this.accounts.sort((a, b) => Math.abs(b.green) - Math.abs(a.green));\r\n          this.top10Green = this.accounts.slice(0, 10);\r\n          // debugger;\r\n          this.accounts.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber, 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.ready = true;\r\n          this.waiting = false;\r\n          this.tempData = [...this.accounts];\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of init function\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/payment/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDueDate() {\r\n    this._router.navigate(['/dashboard/analysis/due-date']);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.accounts = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.accounts = this.accounts.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  onRowSelect(event): void {\r\n    // debugger;\r\n    // this.waiting = true;\r\n    this.selectedMaxAccountNumber = event.data.accountNumber;\r\n    this.selectedMaxAccountName = event.data.accountName;\r\n\r\n    // for each month\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const element = this.data[i];\r\n      // for each account\r\n      if (element.blue.accounts) {\r\n        let total = 0;\r\n        element.blue.accounts.forEach((b) => {\r\n          // if the account is selected account add the value to the total\r\n          if (b.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += b.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountBlueData[i] = Math.abs(total);\r\n      }\r\n      if (element.red.accounts) {\r\n        let total = 0;\r\n        element.red.accounts.forEach((r) => {\r\n          // if the account is selected account add the value to the total\r\n          if (r.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += r.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountRedData[i] = Math.abs(total);\r\n      }\r\n      if (element.green.accounts) {\r\n        let total = 0;\r\n        element.green.accounts.forEach((g) => {\r\n          // if the account is selected account add the value to the total\r\n          if (g.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += g.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountGreenData[i] = Math.abs(total);\r\n      }\r\n    }\r\n    this.chart.refresh();\r\n    // this.waiting = false;\r\n    // this.chart.reinit();\r\n  }\r\n\r\n  onRowUnselect(event) {\r\n    this.selectedMaxAccountNumber = null;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\" {{ 'DueDateAnalysis.label' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"goToDueDate()\"\r\n      pTooltip=\"{{ 'DueDateAnalysis.label' | translate }}\" tooltipPosition=\"bottom\"></button> -->\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"basicData && ready\">\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <span *ngIf=\"!selectedMaxAccountNumber\">\r\n        {{ \"PaymentAnalysis.allAccounts\" | translate }}\r\n      </span>\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!selectedMaxAccountNumber\">\r\n      </p-chart>\r\n      <span *ngIf=\"selectedMaxAccountNumber\">\r\n        {{ selectedMaxAccountName }}\r\n      </span>\r\n      <p-chart #chart type=\"bar\" height=\"450\" [data]=\"specificAccountData\" [options]=\"basicOptions\"\r\n        *ngIf=\"selectedMaxAccountNumber\"></p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-6\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"top10\" optionLabel=\"name\" optionValue=\"value\">\r\n        <!-- <ng-template let-item>\r\n          <i [style]=\"'background: {{item.color}}'\"></i>\r\n        </ng-template> -->\r\n      </p-selectButton>\r\n    </span>\r\n    <p-table #dtmaxb dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Blue\" *ngIf=\"top10 == 1\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.blue | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxr dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Red\" *ngIf=\"top10 == 2\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.red | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxg dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Green\" *ngIf=\"top10 == 3\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.green | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\" [hidden]=\"!selectedProcedure\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"accountsCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" sorter=\"number\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th>Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field != 'accountNumber' && col.field != 'accountName'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AmountAnalysis } from 'src/app/shared/model/amountAnalysis';\r\nimport { Bar } from 'src/app/shared/model/bar';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\n\r\n@Component({\r\n  selector: 'app-amount-analysis-pre',\r\n  templateUrl: './amount-analysis-pre.component.html',\r\n  styleUrls: ['./amount-analysis-pre.component.sass']\r\n})\r\nexport class AmountAnalysisPreComponent implements OnInit {\r\n\r\n  data: AmountAnalysis[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  baseBalance = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.baseBalance = +this._route.snapshot.paramMap.get('baseBalance') ?? 500;\r\n    if(!this.baseBalance || isNaN(this.baseBalance)) this.baseBalance = 500;\r\n\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.totalBalance',\r\n        field: 'totalBalance',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: AmountAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/amount/' +\r\n      this.selectedOrganisation +\r\n      '/' +\r\n      this.selectedProcedure +\r\n      '/' +\r\n      row.accountNumber +\r\n      '/' +\r\n      this.baseBalance,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.tempData = [...this.data];\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${(Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">Amount Analysis pre-calculated</h2> -->\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid p-mt-2\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-text-right\">\r\n      <label for=\"baseBalance\">{{'AmountAnalysis.baseBalance' | translate}}: </label>\r\n      <!-- <input pInputNumber type=\"number\" name=\"baseBalance\" [(ngModel)]=\"baseBalance\"/> -->\r\n      <p-inputNumber [(ngModel)]=\"baseBalance\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n      </p-inputNumber>\r\n      <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\" class=\"p-ml-2\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12 \" *ngIf=\"selectedProcedure>0\">\r\n    <!-- <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar> -->\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span><p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">{{ row[col.field] | currency:'EUR':''}}</span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Bar } from '../../model/bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TextAnalysis } from '../../model/textAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis',\r\n  templateUrl: './text-analysis.component.html',\r\n  styleUrls: ['./text-analysis.component.sass'],\r\n})\r\nexport class TextAnalysisComponent implements OnInit {\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    this.waiting = true;\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWord(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => {}\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n        row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n    <h4 class=\"p-text-left\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount?  'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.sass']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n    links\r\n</footer>\r\n","export class Bar {\r\n    label: string;\r\n    backgroundColor: string;\r\n    data: number[];\r\n\r\n    constructor(label: string, backgroundColor: string, data: number) {\r\n        this.label = label;\r\n        this.backgroundColor = backgroundColor;\r\n        this.data = new Array();\r\n        this.data.push(data);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-unauth',\r\n  templateUrl: './unauth.component.html',\r\n  styleUrls: ['./unauth.component.sass']\r\n})\r\nexport class UnauthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>  {{'Unauth.errorMsg' | translate}} </p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity',\r\n  templateUrl: './free-liquidity.component.html',\r\n  styleUrls: ['./free-liquidity.component.sass'],\r\n})\r\nexport class FreeLiquidityComponent implements OnInit {\r\n  basicOptions: any;\r\n  basicData: any;\r\n  accounts: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  allAccountsDataBankBalances: any[] = new Array();\r\n  allAccountsDataCreditLines: any[] = new Array();\r\n  selectedDateData: any[] = new Array();\r\n  selectedDate: string;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  orgId: number;\r\n  prcId: number;\r\n  cols: TableColumn[] = new Array();\r\n  selectedDateCols: TableColumn[] = new Array();\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  searching: boolean;\r\n  bankBalancesTotal: number = 0;\r\n  creditLinesTotal: number = 0;\r\n  freeLiquidityTotal: number = 0;\r\n  baseFromDate: Date;\r\n  baseToDate: Date;\r\n  maxRange: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  rangeValues: number[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    let baseFromDateTemp = this._route.snapshot.paramMap.get('baseFromDate');\r\n    if (baseFromDateTemp?.trim()) this.baseFromDate = new Date(baseFromDateTemp);\r\n    let baseToDateTemp = this._route.snapshot.paramMap.get('baseToDate');\r\n    if (baseToDateTemp?.trim()) this.baseToDate = new Date(baseToDateTemp);\r\n    let fromDateTemp = this._route.snapshot.paramMap.get('fromDate');\r\n    if (fromDateTemp?.trim()) this.fromDate = new Date(fromDateTemp);\r\n    let toDateTemp = this._route.snapshot.paramMap.get('toDate');\r\n    if (toDateTemp?.trim()) this.toDate = new Date(toDateTemp);\r\n    if (this.baseFromDate && this.baseToDate && this.fromDate && this.toDate) {\r\n      this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n      this.rangeValues = [\r\n        this.dayDiff(this.baseFromDate, this.fromDate),\r\n        this.dayDiff(this.baseFromDate, this.toDate)\r\n      ];\r\n    }\r\n\r\n    this._translateService.get('Liquidity').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.freeLiquidity, routerLink: '/dashboard/liquidity/freeLiquidity' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    })\r\n\r\n\r\n\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                // debugger;\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n\r\n    ];\r\n\r\n    this.selectedDateCols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.bankBalance',\r\n        field: 'bankBalance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLine',\r\n        field: 'creditLine',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.freeLiquidity',\r\n        field: 'freeLiaquidity',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.getData();\r\n    // this.dateRangeChanges();\r\n  } // end of ng on init\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.fromDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  getData() {\r\n    this.searching = true;\r\n    debugger;\r\n    let start = this.fromDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    this._liquidityService.getFreeLiquidity(this.orgId, this.prcId, start, end).subscribe(\r\n      (res) => {\r\n        if (!this.baseFromDate) this.baseFromDate = new Date(res.fromDate);\r\n        if (!this.baseToDate) this.baseToDate = new Date(res.toDate);\r\n        if (!this.fromDate) this.fromDate = new Date(res.fromDate);\r\n        if (!this.toDate) this.toDate = new Date(res.toDate);\r\n        if (!this.rangeValues) this.rangeValues = [0, this.dayDiff(this.fromDate, this.toDate)];\r\n        if (!this.maxRange) this.maxRange = this.dayDiff(this.fromDate, this.toDate);\r\n        this.accounts = res.bankBalances.accounts;\r\n        this.tempData = res.bankBalances.accounts;\r\n        this.labels = res.bankBalances.labels;\r\n        this.basicData = {\r\n          labels: res.bankBalances.labels,\r\n          datasets: [\r\n            {\r\n              type: 'line',\r\n              label: 'Credit Line',\r\n              borderColor: '#42A5F5',\r\n              borderWidth: 2,\r\n              fill: false,\r\n              data: res.creditLines.creditLines,\r\n            },\r\n            {\r\n              type: 'line',\r\n              label: 'Free Liquidity',\r\n              fill: false,\r\n              data: res.freeLiquidity,\r\n              borderColor: '#E5A58B',\r\n              borderWidth: 2,\r\n            },\r\n            {\r\n              type: 'bar',\r\n              label: 'Bank Balance',\r\n              backgroundColor: '#88FF88',\r\n              borderColor: '#58dF58',\r\n              data: res.bankBalances.bankBalances,\r\n            },\r\n          ],\r\n        };\r\n        this.searching = false;\r\n        this.allAccountsDataBankBalances = res.bankBalances.data;\r\n        this.allAccountsDataCreditLines = res.creditLines.accounts;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  // on clock on a bar in the chart\r\n  selectBarData(e) {\r\n    this.searching = true;\r\n    this.selectedDateData = new Array();\r\n    // console.log(e.element._index);\r\n    // console.log(e.element._model.label);\r\n    // this.selectedDate = e?.element?._model?.label;\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    // debugger;\r\n    for (const key in this.allAccountsDataBankBalances) {\r\n      if (\r\n        Object.prototype.hasOwnProperty.call(\r\n          this.allAccountsDataBankBalances,\r\n          key\r\n        )\r\n      ) {\r\n        const element = this.allAccountsDataBankBalances[key];\r\n        const creditLine =\r\n          this.allAccountsDataCreditLines[key] &&\r\n            this.allAccountsDataCreditLines[key][index]\r\n            ? this.allAccountsDataCreditLines[key][index]\r\n            : 0;\r\n        let accountNumber = parseInt(key);\r\n        this.selectedDateData.push({\r\n          accountNumber: isNaN(accountNumber) ? key : accountNumber,\r\n          bankBalance: element[index] ? element[index] : 0,\r\n          creditLine: creditLine,\r\n          accountName: this.accounts.filter(\r\n            (account) => account.accountNumber == key\r\n          )[0]?.accountName,\r\n        });\r\n      }\r\n    }\r\n    // this.selectedDateData = [...this.selectedDateData];\r\n    this.calculateTotals();\r\n    this.searching = false;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.accounts = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.accounts = this.accounts.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate([\r\n      '/dashboard/liquidity/freeLiquidity/details/' + row.accountNumber + '/' +\r\n      this.baseFromDate.toISOString().split('T')[0] + '/' +\r\n      this.baseToDate.toISOString().split('T')[0] + '/' +\r\n      this.fromDate.toISOString().split('T')[0] + '/' +\r\n      this.toDate.toISOString().split('T')[0],\r\n    ]);\r\n  }\r\n\r\n  calculateTotals() {\r\n    this.creditLinesTotal = 0;\r\n    this.bankBalancesTotal = 0;\r\n    this.freeLiquidityTotal = 0;\r\n    for (let data of this.selectedDateData) {\r\n      this.bankBalancesTotal += data.bankBalance;\r\n      this.creditLinesTotal += data.creditLine;\r\n      this.freeLiquidityTotal += data.bankBalance + data.creditLine;\r\n    }\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n  <!-- <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{baseFromDate | date}}     -     {{baseToDate | date}}</p>\r\n  </div> -->\r\n  <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{fromDate | date}} - {{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-3\"></div>\r\n  <div class=\"p-col-1 p-text-right\">{{baseFromDate | date}}</div>\r\n  <div class=\"p-col-4\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\"\r\n    [min]=\"0\" [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\">{{baseToDate | date}}</div>\r\n  <div class=\"p-col-1\">\r\n    <button pButton pRipple type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\" style=\"margin-top: -18px;\"></button>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"400px\"\r\n        (onDataSelect)=\"selectBarData($event)\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"selectedDate\">\r\n  <div class=\"p-col-7\">\r\n    <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-5 p-text-right\">\r\n    <button type=\"button\" pButton pRipple label=\"All Accounts\" icon=\"pi pi-times\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\"\r\n      style=\"margin-top: 20px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"selectedDateData\" styleClass=\"p-datatable-gridlines\"\r\n      [columns]=\"selectedDateCols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\" [resizableColumns]=\"true\" [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th class=\"p-text-center\">Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName' &&\r\n                col.field != 'freeLiaquidity'\r\n              \">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field == 'freeLiaquidity'\">\r\n              {{\r\n              +row[\"bankBalance\"] + +row[\"creditLine\"] | currency: \"EUR\":\"\"\r\n              }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"p-text-right\">Totals</td>\r\n          <td class=\"p-text-right\">\r\n            {{ bankBalancesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ creditLinesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ freeLiquidityTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<br /><br />\r\n\r\n<div class=\"p-grid\" *ngIf=\"!selectedDate\">\r\n  <div class=\"p-col-12\" [hidden]=\"!prcId\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th class=\"p-text-center\">Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field != 'accountNumber' && col.field != 'accountName'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataFilterService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get(params: any) {\r\n    return this._http.get<any>(this._thisURL + '/posting', { params: params });\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getManagers() {\r\n    return this._http.get<any>(this._thisURL + '/getManagers');\r\n }\r\n\r\n getProcedures(userId) {\r\n   return this._http.get<any>(this._thisURL + '/users/' + userId + '/procedures');\r\n }\r\n\r\n getUsers(userId) {\r\n  return this._http.get<any>(this._thisURL + '/users/' + userId + '/users');\r\n}\r\n\r\n}\r\n","\r\n\r\nexport class Procedures {\r\n    id: number;\r\n    OrganisationId: number;\r\n    name: string ='';\r\n    data:  boolean = false;\r\n    analysis: boolean = false;\r\n    dataSource: string ='';\r\n    amount: boolean = false;\r\n    credit: boolean = false;\r\n    text_word: boolean = false;\r\n    text_account: boolean = false;\r\n    payment: boolean = false;\r\n    due_date: boolean = false;\r\n    liquidity: boolean = false;\r\n    status: string;\r\n    docType: boolean = false;\r\n\r\n\r\n    // constructor(organisationId: number, name: string, data: boolean,analysis: boolean,dataSource: string) {\r\n    //     this.organisationId = organisationId;\r\n    //     this.name = name;\r\n    //     this.data = data;\r\n    //     this.analysis = analysis;\r\n    //     this.dataSource = dataSource;\r\n\r\n    // }\r\n\r\n    static setProcedure(procedureModel) {\r\n\r\n        let result: Procedures = procedureModel\r\n        return result\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  authorized = false;\r\n  roles: any;\r\n\r\n  constructor(private _authSrvc: AuthService, private _router: Router) { }\r\n\r\n  // canActivate(\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  //   return true;\r\n  // }\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    this.authorized = false;\r\n    if (this._authSrvc.isLoggedIn()) {\r\n      const currentUserRole = this._authSrvc.getRole();\r\n      \r\n      if (route.data.roles) {\r\n        for (let i = 0; i < route.data.roles.length; i++) {\r\n          if (route.data.roles[i] === currentUserRole) {\r\n            this.authorized = true;\r\n            break;\r\n          }\r\n        }\r\n        // console.log(this.authorized);\r\n        if (this.authorized === false) {\r\n          // console.log('unauthorized from authGuard!');\r\n          this._router.navigate(['/unauthorized']);\r\n        }\r\n        return this.authorized;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      this._router.navigate(['/unauthorized']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AmountAnalysis, AmountAnalysisDetails } from '../model/amountAnalysis';\r\nimport { TextAnalysis, TextAnalysisDetails } from '../model/textAnalysis';\r\nimport { PaymentAnalysis, PaymentAnalysisDetails, PaymentAnalysisDetailsData } from '../model/paymentAnalysis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalysisService {\r\n\r\n  _thisURL = environment.baseUrl + 'analysis/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAmountAnalysis(orgId: number, prcId: number, baseBalance: number): Observable<AmountAnalysis[]> {\r\n    return this._http.get<AmountAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/amount-calc/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetails(orgId: number, prcId: number, accountNumber: string, baseBalance: number): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysis(orgId: number, prcId: number): Observable<TextAnalysis[]> {\r\n    return this._http.get<TextAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/text');\r\n  }\r\n\r\n  getTextAnalysisIndex(orgId: number, prcId: number): Observable<TextAnalysis[]> {\r\n    return this._http.get<TextAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/text-index');\r\n  }\r\n\r\n  getTextAnalysisWord(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word');\r\n  }\r\n\r\n  getTextAnalysisWordIndex(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-indexed');\r\n  }\r\n\r\n  getTextAnalysisWordCalcDateRange(orgId: number, prcId: number, step: string = 'MONTHLY'): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc/date-range/' + step);\r\n  }\r\n\r\n  getTextAnalysisWordCalcData(orgId: number, prcId: number, fromDate: string, toDate: string): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc/' + fromDate + '/' + toDate);\r\n  }\r\n\r\n  getTextAnalysisAccountCalcAll(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-account-calc');\r\n  }\r\n\r\n  getTextAnalysisWordCalcAll(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc');\r\n  }\r\n\r\n  getTextAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysisWordDetails(orgId: number, prcId: number, keyword: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text-word/details/' + keyword);\r\n  }\r\n\r\n  getTextAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber + '/relevant');\r\n  }\r\n\r\n  getTextAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: TextAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: TextAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getAmountAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: AmountAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: AmountAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  setRelevantTextAnalysis(orgId: number, prcId: number, accountNumber: string, records: TextAnalysisDetails[]): Observable<TextAnalysisDetails[]> {\r\n    return this._http.put<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber, records);\r\n  }\r\n\r\n  setRelevantAmountAnalysis(orgId: number, prcId: number, accountNumber: string, baseBalance: number, records: AmountAnalysisDetails[]): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.put<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance, records);\r\n  }\r\n\r\n  setRelevantPaymentAnalysis(orgId: number, prcId: number, accountNumber: string, records: PaymentAnalysisDetailsData[]): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.put<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber, records);\r\n  }\r\n\r\n  getPaymentAnalysis(orgId: number, prcId: number): Observable<PaymentAnalysis> {\r\n    return this._http.get<PaymentAnalysis>(this._thisURL + orgId + '/' + prcId + '/payment');\r\n  }\r\n\r\n  getPaymentAnalysisDetails(orgId: number, prcId: number, accountNumber: String): Observable<PaymentAnalysisDetails> {\r\n    return this._http.get<PaymentAnalysisDetails>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * get the relevant user for this account based on paymentRelevant field ignore other conditions\r\n   * because the user can set any record as relevant even if the record is not blue neither red...\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.get<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * Get All records for this account; you can use getAmountAnalysisDetailsByAccount\r\n   * return the same data but the difference in the comment and relative field\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: PaymentAnalysisDetailsData[] }> {\r\n    return this._http.get<{ count: number, rows: PaymentAnalysisDetailsData[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getDueDateAnalysis(orgId: number, prcId: number, start: string, end: string, params: any): Observable<any> {\r\n    return start?.trim() && end.trim() ? this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate/' + start + '/' + end, { params }) :\r\n      this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate', { params });\r\n  }\r\n\r\n  getDueDateAnalysisDetails(orgId: number, prcId: number, accountNumber: string, start: string, end: string, maxDelay): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate/details/' + accountNumber + '/' + start + '/' + end + '/' + maxDelay);\r\n  }\r\n\r\n\r\n  getCreditorAnalysis(orgId: number, prcId: number, criteria: any): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor', { params: criteria });\r\n  }\r\n\r\n  getCreditorAnalysisCalc(orgId: number, prcId: number, criteria: any): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor-calc', { params: criteria });\r\n  }\r\n\r\n  getCreditorAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor/details/' + accountNumber);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ImportComponent } from './admin/import/import.component';\r\nimport { UnauthComponent } from './shared/unauth/unauth.component';\r\nimport { NotfoundComponent } from './shared/notfound/notfound.component';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { LayoutComponent } from './shared/layout/layout.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { SusaComponent } from './shared/sap-data-table/susa/susa.component';\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { AmountAnalysisComponent } from './shared/analysis/amount-analysis/amount-analysis.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { UserRegistrationComponent } from './shared/user-registration/user-registration.component';\r\nimport { UserEditComponent } from './shared/user-edit/user-edit.component';\r\nimport { ProcedureEditComponent } from './admin/procedure-edit/procedure-edit.component';\r\nimport { UserDashboardComponent } from './shared/user-dashboard/user-dashboard.component';\r\nimport { OrganisationUsersComponent } from './shared/organisation-users/organisation-users.component';\r\nimport { DocumentTypeComponent } from './admin/document-type/document-type.component';\r\nimport { AmountAnalysisDetailsComponent } from './shared/analysis/amount-analysis/details/amount-analysis-details.component';\r\nimport { TextAnalysisComponent } from './shared/analysis/text-analysis/text-analysis.component';\r\nimport { TextAnalysisDetailsComponent } from './shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component';\r\nimport { TextAnalysisWordDetailsComponent } from './shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component';\r\nimport { TextAnalysisIndexedComponent } from \"./shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component\";\r\nimport { PaymentAnalysisComponent } from './shared/analysis/payment-analysis/payment-analysis.component';\r\nimport { PaymentAnalysisDetailsComponent } from './shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component';\r\nimport { DueDateComponent } from './shared/analysis/payment-analysis/due-date/due-date.component';\r\nimport { DueDateDetailsComponent } from './shared/analysis/payment-analysis/due-date-details/due-date-details.component';\r\nimport { CreditorAnalysisComponent } from './shared/analysis/creditor-analysis/creditor-analysis.component';\r\nimport { CreditorAnalysisDetailsComponent } from './shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component';\r\nimport { AccountTypeComponent } from './admin/account-type/account-type.component';\r\nimport { OpeningBalanceComponent } from './shared/liquidity/opening-balance/opening-balance.component';\r\nimport { CreditLineComponent } from './shared/liquidity/credit-line/credit-line.component';\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from './shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component';\r\nimport { TextAnalysisPreComponent } from './shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component';\r\nimport { PreCalculateComponent } from './admin/pre-calculate/pre-calculate.component';\r\nimport { AmountAnalysisPreComponent } from './shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component';\r\nimport { CreditorAnalysisCalcComponent } from './shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'dashboard',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      // { path: 'import', component: ImportComponent, canActivate: [AuthGuard], data: { roles: ['ADMIN'] } },\r\n\r\n      {\r\n        path: 'admin/admin/add',\r\n        component: AdminRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/organisation/add',\r\n        component: OrganisationRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/organisation/edit/:id',\r\n        component: OrganisationRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/procedure/add',\r\n        component: ProcedureRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/procedure/edit',\r\n        component: ProcedureEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/dashboard',\r\n        component: AdminDashboardComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/import',\r\n        component: ImportComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/document-type',\r\n        component: DocumentTypeComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/pre-calc',\r\n        component: PreCalculateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n\r\n      {\r\n        path: 'shared/user/add',\r\n        component: UserRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/user/edit',\r\n        component: UserEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/user/procedures',\r\n        component: UserDashboardComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'shared/user/users',\r\n        component: OrganisationUsersComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/data',\r\n        component: SAPDataTableComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'shared/data/susa',\r\n        component: SusaComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      {\r\n        path: 'analysis/amount',\r\n        component: AmountAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/amount/:baseBalance',\r\n        component: AmountAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/amount/:orgId/:prcId/:accountNumber/:baseBalance',\r\n        component: AmountAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text',\r\n        component: TextAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      // {\r\n      //   path: 'analysis/text/:by-word',\r\n      //   component: TextAnalysisComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      // {\r\n      //   path: 'analysis/text-indexed',\r\n      //   component: TextAnalysisIndexedComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      {\r\n        path: 'analysis/text/:by-word',\r\n        component: TextAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text/:orgId/:prcId/:accountNumber',\r\n        component: TextAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text/word/:key',\r\n        component: TextAnalysisWordDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/payment',\r\n        component: PaymentAnalysisComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/payment/:orgId/:prcId/:accountNumber',\r\n        component: PaymentAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/due-date',\r\n        component: DueDateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/due-date/deails/:accountNumber',\r\n        component: DueDateDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      // {\r\n      //   path: 'analysis/creditor',\r\n      //   component: CreditorAnalysisComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      {\r\n        path: 'analysis/creditor',\r\n        component: CreditorAnalysisCalcComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/creditor/deails/:accountNumber',\r\n        component: CreditorAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      {\r\n        path: 'admin/accountType',\r\n        component: AccountTypeComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'liquidity/openingBalance',\r\n        component: OpeningBalanceComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/creditLine',\r\n        component: CreditLineComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity',\r\n        component: FreeLiquidityComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity/:baseFromDate/:baseToDate/:fromDate/:toDate',\r\n        component: FreeLiquidityComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity/details/:accountNumber/:baseFromDate/:baseToDate/:fromDate/:toDate',\r\n        component: FreeLiquidityDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      { path: 'resetPassword', component: ResetPasswordComponent },\r\n    ], // end of dashboard childs\r\n  },\r\n\r\n  { path: 'unauthorized', component: UnauthComponent },\r\n  { path: 'reset/:token', component: ResetPasswordNewUserComponent },\r\n  { path: '**', component: NotfoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OpeningBalance } from '../model/openingBalance';\r\nimport { CreditLine } from '../model/creditLine';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LiquidityService {\r\n\r\n  _thisURL = environment.baseUrl + 'liquidity/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getOpeningBalance(orgId: number, prcId: number): Observable<OpeningBalance[]> {\r\n    return this._http.get<OpeningBalance[]>(this._thisURL + orgId + '/' + prcId + '/openingBalance');\r\n  }\r\n\r\n  updateOpeningBalance(orgId: number, prcId: number, row: OpeningBalance): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/openingBalance', row);\r\n  }\r\n\r\n\r\n  getCreditLine(orgId: number, prcId: number): Observable<CreditLine[]> {\r\n    return this._http.get<CreditLine[]>(this._thisURL + orgId + '/' + prcId + '/creditLine');\r\n  }\r\n\r\n  updateCreditLine(orgId: number, prcId: number, row: CreditLine): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/creditLine', row);\r\n  }\r\n\r\n  deleteCreditLine(orgId: number, prcId: number, row: CreditLine): Observable<any> {\r\n    return this._http.delete<any>(this._thisURL + orgId + '/' + prcId + '/creditLine/' + row.id);\r\n  }\r\n\r\n  getFreeLiquidity(orgId: number, prcId: number, fromDate, toDate) {\r\n    if (!fromDate || !toDate)\r\n      return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity');\r\n    else\r\n      return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/' + fromDate + '/' + toDate);\r\n  }\r\n\r\n  getFreeLiquidityDetails(orgId: number, prcId: number, accountNumber: string, from: string, to: string) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/details/' + accountNumber + '/' + from + '/' + to);\r\n  }\r\n\r\n  getFreeLiquidityDetailsRecords(orgId: number, prcId: number, accountNumber: string, selectedDate: string) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/details/' + accountNumber + '/specific/' + selectedDate);\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"cardBody\">\r\n    <p-toast></p-toast>\r\n    \r\n    <div class=\"p-grid p-mt-6 \">\r\n\r\n        <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\" >\r\n            <div class=\"pages-body login-page p-d-flex p-flex-column\">\r\n                <div class=\"p-as-center p-mt-auto p-mb-auto\">\r\n                    <div class=\"pages-panel card p-d-flex p-flex-column\">\r\n                        <div class=\"p-field p-grid\">\r\n                            <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password</label>\r\n                            <div class=\"p-col-12 p-md-10\">\r\n                                <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                                <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">password is required</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-field p-grid\">\r\n                            <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password confirmation</label>\r\n                            <div class=\"p-col-12 p-md-10\">\r\n                                <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                                <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">password is required</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-field p-grid\">\r\n                            <div class=\"p-xs-8 p-xs-offset-2 p-md-6 p-md-offset-3 \">\r\n                                <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component submitButtonCss p-filled\"   >\r\n                                    <span class=\"p-button-label\"> Submit </span>\r\n                                </button>\r\n                            </div>\r\n            \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n -->\r\n \r\n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2 \">\r\n    <div class=\"card cardBody\">\r\n        <p-toast></p-toast>\r\n        <div class=\"content \">\r\n            <div class=\"p-text-center p-mt-6 p-mb-4 titleFontStyle \">  {{'Password_Reset.header' | translate}} </div>\r\n            <form class=\"p-fluid \"  (ngSubmit)=\"submitHandle()\">\r\n    \r\n    \r\n                <div class=\"p-fluid\">\r\n    \r\n      \r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.password' | translate}}</label>\r\n                    <div class=\"p-col-12 p-md-8\">\r\n                        <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                        <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.passwordConfirm' | translate}}</label>\r\n                    <div class=\"p-col-12 p-md-8\">\r\n                        <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                        <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <!-- <div class=\"p-xs-col-5  p-mr-4\">\r\n          \r\n                      <button pbutton pripple type=\"button\" label=\"cancel\"\r\n                        class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n                      </button>\r\n                    </div> -->\r\n                    <div class=\"p-xs-col-5 \">\r\n                      <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n                      </button>\r\n                    </div>\r\n          \r\n                  </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-new-user',\r\n  templateUrl: './reset-password-new-user.component.html',\r\n  styleUrls: ['./reset-password-new-user.component.sass'],\r\n})\r\nexport class ResetPasswordNewUserComponent implements OnInit {\r\n  passwordObj = {\r\n    selectedPassword: '',\r\n    confirmedPassword: '',\r\n  };\r\n  pass: string;\r\n  token: any;\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    public _translateService: TranslateService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this._translateService.setDefaultLang('de');\r\n    this.token = this._route.snapshot.paramMap.get('token');\r\n    // console.log(this.token)\r\n  }\r\n\r\n  submitHandle() {\r\n    console.log(this.passwordObj);\r\n    if (\r\n      this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword\r\n    ) {\r\n      let password = this.passwordObj.selectedPassword;\r\n      this._authService\r\n        .resetPassword({ password: password, token: this.token })\r\n        .subscribe(\r\n          (res) => {\r\n            this._router.navigate(['/']);\r\n          },\r\n          (err) => {}\r\n        );\r\n    } else {\r\n      this._translateService.get('ErrorHandler').subscribe((elem) => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  // cancelHandle() {\r\n  //   this._router.navigate(['/dashboard/shared/user/procedures']);\r\n  // }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Bar } from 'src/app/shared/model/bar';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { TextAnalysis } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-pre',\r\n  templateUrl: './text-analysis-pre.component.html',\r\n  styleUrls: ['./text-analysis-pre.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class TextAnalysisPreComponent implements OnInit {\r\n\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n  // dateRanges: { label, value }[] = new Array();\r\n  // steps: { label, value }[] = new Array();\r\n  // selectedStep: string = 'MONTHLY';\r\n\r\n  constructor(private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute,\r\n    private datepipe: DatePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    // this.steps = [\r\n    //   {\r\n    //     label: 'MONTHLY',\r\n    //     value: 'MONTHLY'\r\n    //   },\r\n    //   {\r\n    //     label: 'TOW_MONTHS',\r\n    //     value: 'TOW_MONTHS'\r\n    //   },\r\n    //   {\r\n    //     label: 'QUARTER',\r\n    //     value: 'QUARTER'\r\n    //   },\r\n    //   {\r\n    //     label: 'HALF_ANNUAL',\r\n    //     value: 'HALF_ANNUAL'\r\n    //   },\r\n    //   {\r\n    //     label: 'ANNUAL',\r\n    //     value: 'ANNUAL'\r\n    //   }\r\n    // ];\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    // this.getDateRanges(this.selectedStep);\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  // stepChangedHandler(e) {\r\n  //   this.getDateRanges(e.value);\r\n  // }\r\n\r\n  // getDateRanges(step) {\r\n  //   this._analysisService\r\n  //   .getTextAnalysisWordCalcDateRange(this.selectedOrganisation, this.selectedProcedure, step)\r\n  //   .subscribe(res => {\r\n  //     this.dateRanges = [];\r\n  //     res.forEach(range => {\r\n  //       this.dateRanges.push({\r\n  //         label: this.datepipe.transform(range.fromDate, 'yyyy.MM.dd') + ' - ' + this.datepipe.transform(range.toDate, 'yyyy.MM.dd'),\r\n  //         value: {\r\n  //           fromDate: this.datepipe.transform(range.fromDate, 'yyyy.MM.dd'),\r\n  //           toDate: this.datepipe.transform(range.toDate, 'yyyy.MM.dd')\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   }, er => this.waiting = false\r\n  //   );\r\n  // }\r\n\r\n  // dateChangedHandler(e) {\r\n  //   this.getData(e.value.fromDate, e.value.toDate);\r\n  // }\r\n\r\n  getData() {\r\n    this._analysisService\r\n      .getTextAnalysisAccountCalcAll(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWordCalcAll(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => {}\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  // getDataWord(fromDate, toDate) {\r\n  //   this.waiting = true;\r\n  //   this._analysisService\r\n  //     .getTextAnalysisWordCalcData(\r\n  //       this.selectedOrganisation,\r\n  //       this.selectedProcedure,\r\n  //       fromDate,\r\n  //       toDate\r\n  //     )\r\n  //     .subscribe(\r\n  //       (res) => {\r\n  //         this.waiting = false;\r\n  //         this.dataWord = res;\r\n  //         this.tempDataWord = res;\r\n  //         this.labelsWord = new Array();\r\n  //         this.wordAccountsData = new Array();\r\n  //         this.wordRecordsData = new Array();\r\n  //         this.dataWord.forEach((word) => {\r\n  //           let accountsCount = parseInt(\r\n  //             word.accountsCount.toString(),\r\n  //             10\r\n  //           );\r\n  //           word.accountsCount = isNaN(accountsCount)\r\n  //             ? word.accountsCount\r\n  //             : accountsCount;\r\n  //           this.labelsWord.push(word.word);\r\n  //           this.wordAccountsData.push(word.accountsCount);\r\n  //           this.wordRecordsData.push(word.recordsCount);\r\n  //         });\r\n\r\n  //         this.basicDataWord = {\r\n  //           labels: this.labelsWord,\r\n  //           datasets: [\r\n  //             {\r\n  //               type: 'bar',\r\n  //               label: 'Count of Accounts',\r\n  //               backgroundColor: '#88FF88',\r\n  //               borderColor: '#58dF58',\r\n  //               borderWidth: 2,\r\n  //               fill: true,\r\n  //               data: this.wordAccountsData,\r\n  //             },\r\n  //             {\r\n  //               type: 'bar',\r\n  //               label: 'Count of records',\r\n  //               backgroundColor: '#E5A58B',\r\n  //               borderColor: '#E5A58B',\r\n  //               borderWidth: 2,\r\n  //               fill: true,\r\n  //               data: this.wordRecordsData,\r\n  //             },\r\n  //           ],\r\n  //         };\r\n  //       },\r\n  //       (er) => { this.waiting = false }\r\n  //     );\r\n  // }\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n      row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n    <h4 class=\"p-text-left\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount?  'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n\r\n<!-- <div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <h1 class=\"p-text-center\">Text Analysis By Word pre calculated</h1>\r\n        <h2 class=\"p-text-center\">{{ procedureName }}</h2>\r\n        <h4 class=\"p-text-center\">All Accounts</h4>\r\n        <h4 class=\"p-text-center\">\r\n            <p-dropdown [options]=\"steps\" placeholder=\"Step\"\r\n                optionLabel=\"label\" optionValue=\"value\" [filter]=\"true\" filterBy=\"label\" required\r\n                (onChange)=\"stepChangedHandler($event)\" [style]=\"{width:'500px'}\">\r\n            </p-dropdown>\r\n            </h4>\r\n            <h4 class=\"p-text-center\">\r\n            <p-dropdown [options]=\"dateRanges\"  placeholder=\"Date Range\"\r\n                optionLabel=\"label\" optionValue=\"value\" [filter]=\"true\" filterBy=\"label\" required\r\n                (onChange)=\"dateChangedHandler($event)\" [style]=\"{width:'500px'}\">\r\n            </p-dropdown>\r\n        </h4>\r\n        <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n        <h4 class=\"p-text-right\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount? 'By Word' : 'By Account' }}\"\r\n      ></button> \r\n         <button (click)=\"byAccount = !byAccount\">ByWord</button> \r\n        </h4>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\" *ngIf=\"basicDataWord\">\r\n    <div class=\"p-col-12\">\r\n        <div class=\"card\">\r\n            <p-chart type=\"bar\" [data]=\"basicDataWord\" [options]=\"basicOptionsWords\" height=\"350px\"></p-chart>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n        <p-table #dtword [value]=\"dataWord\" [resizableColumns]=\"true\" dataKey=\"word\" styleClass=\"p-datatable-gridlines\"\r\n            [loading]=\"waiting\" [columns]=\"colsWord\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n            [reorderableColumns]=\"true\">\r\n            <ng-template pTemplate=\"colgroup\">\r\n                <colgroup>\r\n                    <col *ngFor=\"let col of colsWord\" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn\r\n                        class=\"p-text-{{col.align}}\" *ngFor=\"let col of colsWord\">\r\n                        <span pTooltip=\"{{ col.header | translate }}\">\r\n                            {{ col.header | translate }}\r\n                        </span>\r\n                        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n                    </th>\r\n                    <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th pResizableColumn *ngFor=\"let col of colsWord\" class=\"autocomplete\">\r\n                        <input pInputText type=\"text\" [(ngModel)]=\"criteriaWord[col.field]\" [style]=\"{ width: '90%' }\"\r\n                            (input)=\"filterChangeWord($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n                            *ngIf=\"col.field == 'word'\" />\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-row>\r\n                <tr>\r\n                    <td pReorderableRowHandle *ngFor=\"let col of colsWord\" class=\"p-text-{{ col.align }}\">\r\n                        <span pTooltip=\"{{ row[col.field] }}\">\r\n                            {{ row[col.field] }}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" pButton pRipple icon=\"pi pi-list\"\r\n                            class=\"p-button-rounded p-button-warning\" (click)=\"goToDetailsWord(row)\" pTooltip=\"Details\"\r\n                            tooltipPosition=\"bottom\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div> -->","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}