{"version":3,"sources":["webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/shared/layout/layout.component.html","webpack:///src/app/shared/layout/layout.component.ts","webpack:///src/app/admin/service/posting.service.ts","webpack:///src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.html","webpack:///src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.ts","webpack:///src/app/shared/model/organisation.ts","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis.component.ts","webpack:///src/app/shared/analysis/amount-analysis/amount-analysis.component.html","webpack:///src/app/shared/model/file-import.ts","webpack:///src/app/shared/liquidity/credit-line/credit-line.component.ts","webpack:///src/app/shared/liquidity/credit-line/credit-line.component.html","webpack:///src/app/shared/user-registration/user-registration.component.ts","webpack:///src/app/shared/user-registration/user-registration.component.html","webpack:///src/app/shared/reset-password/reset-password.component.html","webpack:///src/app/shared/reset-password/reset-password.component.ts","webpack:///src/app/shared/model/creditLine.ts","webpack:///src/app/shared/nav-bar/nav-bar.component.html","webpack:///src/app/shared/nav-bar/nav-bar.component.ts","webpack:///src/app/shared/service/posting-data.service.ts","webpack:///src/app/shared/analysis/amount-analysis/details/amount-analysis-details.html","webpack:///src/app/shared/analysis/amount-analysis/details/amount-analysis-details.component.ts","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/app/shared/model/choices.ts","webpack:///src/app/admin/service/organisation.service.ts","webpack:///src/app/shared/service/auth.service.ts","webpack:///src/app/admin/admin-registration/admin-registration.component.ts","webpack:///src/app/admin/admin-registration/admin-registration.component.html","webpack:///src/app/shared/service/user.service.ts","webpack:///src/app/shared/model/titles.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.html","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.ts","webpack:///src/app/shared/notfound/notfound.component.ts","webpack:///src/app/shared/notfound/notfound.component.html","webpack:///src/app/shared/user-dashboard/user-dashboard.component.html","webpack:///src/app/shared/user-dashboard/user-dashboard.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.html","webpack:///src/app/shared/sap-data-table/susa/susa.component.ts","webpack:///src/app/shared/sap-data-table/susa/susa.component.html","webpack:///src/app/admin/procedure-registration/procedure-registration.component.ts","webpack:///src/app/admin/procedure-registration/procedure-registration.component.html","webpack:///src/app/admin/import/import.component.ts","webpack:///src/app/admin/import/import.component.html","webpack:///src/app/admin/procedure-edit/procedure-edit.component.ts","webpack:///src/app/admin/procedure-edit/procedure-edit.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.html","webpack:///src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.ts","webpack:///src/app/admin/document-type/document-type.component.html","webpack:///src/app/admin/document-type/document-type.component.ts","webpack:///src/app/admin/account-type/account-type.component.html","webpack:///src/app/admin/account-type/account-type.component.ts","webpack:///src/app/shared/organisation-users/organisation-users.component.html","webpack:///src/app/shared/organisation-users/organisation-users.component.ts","webpack:///src/app/admin/service/import.service.ts","webpack:///src/app/shared/service/procedure.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/shared/pipes/highlight.pipe.ts","webpack:///src/app/shared/service/export-data.service.ts","webpack:///src/app/shared/sap-data-table/sap-data-table.component.html","webpack:///src/app/shared/sap-data-table/sap-data-table.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/admin/service/admin-registration.service.ts","webpack:///src/app/shared/model/users.ts","webpack:///src/app/shared/analysis/payment-analysis/due-date/due-date.component.html","webpack:///src/app/shared/analysis/payment-analysis/due-date/due-date.component.ts","webpack:///src/app/shared/service/dictionary.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/admin/service/role-service.service.ts","webpack:///src/app/shared/model/dataTableColumns.ts","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/admin/organisation-registration/organisation-registration.component.ts","webpack:///src/app/admin/organisation-registration/organisation-registration.component.html","webpack:///src/app/shared/liquidity/opening-balance/opening-balance.component.html","webpack:///src/app/shared/liquidity/opening-balance/opening-balance.component.ts","webpack:///src/app/shared/user-edit/user-edit.component.ts","webpack:///src/app/shared/user-edit/user-edit.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.html","webpack:///src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis.component.ts","webpack:///src/app/shared/analysis/payment-analysis/payment-analysis.component.html","webpack:///src/app/shared/analysis/text-analysis/text-analysis.component.ts","webpack:///src/app/shared/analysis/text-analysis/text-analysis.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/model/bar.ts","webpack:///src/app/shared/unauth/unauth.component.ts","webpack:///src/app/shared/unauth/unauth.component.html","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity.component.ts","webpack:///src/app/shared/liquidity/free-liquidity/free-liquidity.component.html","webpack:///src/app/shared/service/data-filter.service.ts","webpack:///src/app/admin/service/users.service.ts","webpack:///src/app/shared/model/procedures.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/shared/service/analysis.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/service/liquidity.service.ts","webpack:///src/app/shared/reset-password-new-user/reset-password-new-user.component.html","webpack:///src/app/shared/reset-password-new-user/reset-password-new-user.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AdminDashboardComponent","_organisationService","_router","organisations","users","cols","Array","get","subscribe","data","error","console","log","header","field","align","id","localStorage","setItem","navigate","LayoutComponent","_route","_translateService","username","getItem","role","setDefaultLang","fragment","currentRoute","PostingService","_http","_thisURL","baseUrl","_docTypeURL","orgId","prcdrId","put","prcId","DueDateDetailsComponent","_messageService","_analysisService","labels","docDateLabels","docDataTable","docPositiveData","docNegativeData","docData","docDateData","selectedOrganisation","selectedProcedure","procedureName","accountNumber","snapshot","paramMap","waiting","elem","items","label","paymentLabel","routerLink","routerLinkActiveOptions","exact","url","home","icon","getDueDateAnalysisDetails","res","docDateReference","records","forEach","element","push","monthName","yearName","positive","negative","datasets","type","average","borderColor","borderWidth","fill","backgroundColor","er","add","severity","summary","life","detail","basicData","basicOptions","scales","xAxes","ticks","minRotation","maxRotation","yAxes","stepSize","delayCols","backToPayment","Organisation","name","email","street","houseNr","city","postCode","country","organisation","result","AmountAnalysisComponent","prcService","baseBalance","criteria","responsive","legend","display","position","min","getData","row","getAmountAnalysis","tempData","i","length","accountName","Math","random","totlaCount","query","colName","searching","Object","keys","key","prototype","hasOwnProperty","call","filter","value","toLowerCase","includes","toString","FileToImport","template","defaultTemplate","fileHeader","CreditLineComponent","_liquidityService","width","getCreditLine","isEditable","map","r","originalCreditLine","creditLine","originalCreditLineFromDate","creditLineFromDate","originalCreditLineToDate","creditLineToDate","updateCreditLine","numOfRecords","newRecord","newDialog","UserRegistrationComponent","_userService","titles","getTitles","roles","userModel","OrganisationId","addUser","err","errorMsg","status","badRequest_400","unauthorized_401","forbidden_403","NotFound_404","internalServerError_500","submitHandler","cancelHandle","ResetPasswordComponent","_authService","passwordObj","selectedPassword","confirmedPassword","password","changePassword","passwordsMatch","submitHandle","CreditLine","NavBarComponent","sideBarShow","menuItems","userPages","sidebarItems","browserLang","_listener","visible","menu","refresh","addLangs","getBrowserLang","use","match","window","addEventListener","onLangChange","event","lang","getSideBarItems","escape","command","addOrganisation","addDocumentType","resetPassword","analysis","amountAnalyisis","textAnalysis","paymentAnalyse","creditorsAnalyse","setting","logout","procedures","table","clear","PostingDataService","companyCode","offset","limit","fromDate","toDate","params","AmountAnalysisDetailsComponent","_exportDataService","details","allRecordData","selected","detailsOption","pageLimitSizes","pageNr","maxPageNr","filtersNo","backCriteria","detailsOptions","frozenCols","getAmountAnalysisDetails","translatedData","index","translatedRecord","toPromise","translatedKey","temp","Number","parseFloat","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","e","Date","parse","toLocaleDateString","year","month","day","then","xlsx","worksheet","utils","json_to_sheet","workbook","Sheets","SheetNames","excelBuffer","write","bookType","saveAsExcelFile","buffer","fileName","EXCEL_TYPE","EXCEL_EXTENSION","d","Blob","getTime","item","indexOf","amountRelevant","amountRelevantComment","setRelevantAmountAnalysis","option","getSysRelevant","getUserRelevant","getAllByAccount","getAmountAnalysisDetailsRelevant","getAmountAnalysisDetailsByAccount","rows","totalCount","count","displayedDataCount","ceil","criteriaWithLang","exportXLSX","open","orderBy","sortField","sortOrder","changeData","CreditorAnalysisComponent","sum","getCreditorAnalysis","sort","environment","production","TokenInterceptor","_authSrvc","request","next","token","getToken","tokenizedReq","clone","setHeaders","Authorization","handle","Choices","OrganisationService","p","post","AuthService","AdminRegistrationComponent","_adminRegistrationService","_orgService","orgs","RoleId","UserService","user","organisationId","Titles","PaymentAnalysisDetailsComponent","startDate","endDate","blueData","redData","greenData","relevantData","blue","red","green","displayData","tooltips","callbacks","tooltipItem","currencyPipe","transform","datasetIndex","callback","values","paymentOptions","color","sysRelevant","userRelevant","allRelevant","comment","getPaymentAnalysisDetails","dateRange","mindate","maxdate","abs","paymentRelevant","paymentRelevantComment","setRelevantPaymentAnalysis","getPaymentAnalysisDetailsRelevant","getPaymentAnalysisDetailsByAccount","NotfoundComponent","UserDashboardComponent","check","getProcedures","prc","FreeLiquidityDetailsComponent","getFreeLiquidityDetails","bankBalances","creditLines","freeLiquidity","SusaComponent","_postingDataService","datepipe","procedureId","completeWords","getDefaultSusaDateRange","minYear","getFullYear","fdate","tdate","getSusa","ProcedureRegistrationComponent","_roleServiceService","_usersService","dataSources","getDataSources","procedureModel","addProcedure","ImportComponent","_importService","activeIndex","uploadedFiles","templates","getTemplates","fileTypes","getFileType","fileClass","getFileClass","locals","getLocalization","accountTypes","getAccountTypes","filesList","currentFileIndex","accountsCustomTemplate","postingCustomTemplate","headCustomTemplate","selectedOrgId","selectedProcedureId","tempheader","firstStepLabel","secondStepLabel","thirdStepLabel","firthStepLabel","addFormData","splice","f","selectedTemplate","wizardIndex","fileIndex","nameOnServer","deleteFile","orginalName","removeFormData","file","fileType","local","temmplate","formData","FormData","append","JSON","stringify","uploadFile","headers","uploaded","selectedFiles","files","theFile","filePath","accountType","importFile","imported","filtered","orgChangedHandler","goPrev","goNext","importThisFile","ProcedureEditComponent","editProcedure","removeItem","CreditorAnalysisDetailsComponent","getCreditorAnalysisDetails","totalAmount","amount","totalBalance","totalAmountCount","totalPayment","payment","totalPaymentCount","totalText","text","totalTextCount","chartData","amountLabel","textLabel","hoverBackgroundColor","displayDetails","setDetails","DocumentTypeComponent","_docTypesService","selectedPrcId","docTypes","originalVal","documentTypeName","getDocTypesEnum","postingDocTypes","documentTypeNewId","documentTypeNewName","updateNewDocType","getPostingDocTypes","AccountTypeComponent","_postingService","AccountTypeName","getAccountTypesEnum","getPostingAccountTypes","postingAccountTypes","accountTypeNewId","accountTypeNewName","updateNewAccountType","OrganisationUsersComponent","getUsers","subField","title","firstname","lastname","mobileNumber","housenumber","ImportService","formdata","procedure","ProcedureService","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","webpackContextKeys","resolve","module","exports","HighlightPipe","el","sanitizer","keywords","_nativeElement","nativeElement","word","regEx","RegExp","wordList","split","test","w","replace","sanitize","HTML","ExportDataService","tableName","ProcedureId","SAPDataTableComponent","_dataFilterService","scrollViewport","_autocompleteService","loading","selectLastPage","postings","getDataTableColumns","autoComplete","exportPDF","AppComponent","primengConfig","bnIdle","ripple","startWatching","isTimedOut","AdminRegistrationService","Users","DueDateComponent","notPaidLabels","notPaidData","getDueDateAnalysis","dueDateReference","firstChartLabel","delayData","dueDateRefAccounts","notPaid","notPaidChartData","notPaidCols","DictionaryService","HttpLoaderFactory","http","AppModule","provide","useValue","useClass","multi","forRoot","loader","useFactory","deps","RoleServiceService","dataTableColumns","translateService","LoginComponent","login","userinfo","userInfo","fullName","Role","OrganisationRegistrationComponent","getOne","logo","reader","FileReader","onload","imageSrc","readAsDataURL","update","insert","UploadHandler","OpeningBalanceComponent","getOpeningBalance","val","StartingBalanceDate","originalOpeningBalance","StartingBalance","originalOpeningBalanceDate","updateOpeningBalance","UserEditComponent","editUser","TextAnalysisDetailsComponent","getTextAnalysisDetails","textRelevant","textRelevantComment","setRelevantTextAnalysis","getTextAnalysisDetailsRelevant","getTextAnalysisDetailsByAccount","PaymentAnalysisComponent","RedData","GreenData","specificAccountBlueData","specificAccountRedData","specificAccountGreenData","ready","accounts","blueAccounts","top10Blue","greenAccounts","redAccounts","top10","top10Cols","accountsCols","specificAccountData","getPaymentAnalysis","a","b","slice","top10Red","top10Green","selectedMaxAccountNumber","selectedMaxAccountName","total","g","chart","goToDueDate","TextAnalysisComponent","getTextAnalysis","FooterComponent","Bar","UnauthComponent","FreeLiquidityComponent","getFreeLiquidity","DataFilterService","UsersService","userId","Procedures","dataSource","AuthGuard","authorized","route","isLoggedIn","currentUserRole","getRole","AnalysisService","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","LiquidityService","ResetPasswordNewUserComponent","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div class=\"p-mt-2\">\r\n  <p-table [value]=\"organisations\" [columns]=\"cols\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n    [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n      </colgroup>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\" >\r\n      <tr>\r\n        <th pResizableColumn pReorderableColumn  *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n          {{col.header | translate}}\r\n        </th>\r\n        <th>{{'Data_Table.actions' | translate}}</th>\r\n      </tr>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"body\" let-organisation>\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of cols\"  class=\"p-text-{{col.align}}\">{{organisation[col.field]}}</td>\r\n        <td pReorderableRowHandle>\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showProcedures(organisation.id)\"></button> &nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showUsers(organisation.id)\"></button>&nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"Edit organisation\" tooltipPosition=\"bottom\" (click)=\"editOrg(organisation.id)\"></button>\r\n        </td>\r\n\r\n      </tr>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No organisations found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Header } from 'primeng/api';\r\nimport { OrganisationService } from \"../service/organisation.service\";\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.sass']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  organisations: [] = []\r\n  users: [] = []\r\n  organisationRoleId: number;\r\n  cols: { header, field , align}[] = new Array();\r\n\r\n  constructor(private _organisationService: OrganisationService, private _router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this._organisationService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.organisations = data\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Admin_Dashboard.organisationName',\r\n        field: 'name',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationEmail',\r\n        field: 'email',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCountry',\r\n        field: 'country',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCity',\r\n        field: 'city',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationPostCode',\r\n        field: 'postCode',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationStreet',\r\n        field: 'street',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationHouseNr',\r\n        field: 'houseNr',\r\n        align: 'center'\r\n      }\r\n\r\n    ];\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  showProcedures(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/shared/user/procedures']);\r\n\r\n\r\n  }\r\n  showUsers(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/shared/user/users']);\r\n\r\n  }\r\n\r\n  editOrg(id) {\r\n    this._router.navigate(['/admin/organisation/edit/' + id]);\r\n  }\r\n\r\n\r\n}\r\n"," <div class=\"p-grid\">\n    <div class=\"p-mb-6 p-col-12\">\n        <app-nav-bar *ngIf=\"username\"></app-nav-bar>\n    \n    </div>\n    <div class=\"p-mt-6 p-col-12\">\n        <router-outlet></router-outlet>\n    </div> \n    \n </div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router ,ActivatedRoute} from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.sass']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  username: string = localStorage.getItem('username'); \r\n  role: string = localStorage.getItem('role');\r\n\r\n  constructor(private _route: ActivatedRoute, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.setDefaultLang('de');\r\n    this._route.fragment.subscribe(currentRoute => {\r\n      this.role = localStorage.getItem('role');\r\n      this.username = localStorage.getItem('username'); \r\n    });\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { Observable } from 'rxjs';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingService {\r\n  _thisURL = environment.baseUrl + 'admin/';\r\n  _docTypeURL = environment.baseUrl + 'admin/document-type/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDocTypesEnum(): Observable<DocumentTypes[]> {\r\n    return this._http.get<DocumentTypes[]>(this._docTypeURL);\r\n  }\r\n\r\n  getPostingDocTypes(orgId: number, prcdrId: number): Observable<PostingDocTypes[]>{\r\n    return this._http.get<PostingDocTypes[]>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId);\r\n  }\r\n\r\n  updateNewDocType(orgId: number, prcdrId: number, data: {documentType, documentTypeNewId, documentTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId, data);\r\n  }\r\n\r\n\r\n\r\n  getAccountTypesEnum():Observable<AccountTypes[]> {\r\n    return this._http.get<AccountTypes[]>(this._thisURL + 'account-type');\r\n  }\r\n\r\n  getPostingAccountTypes(orgId: number, prcId: number): Observable<PostingAccountTypes[]>{\r\n    return this._http.get<PostingAccountTypes[]>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId);\r\n  }\r\n\r\n  updateNewAccountType(orgId: number, prcId: number, data: {accountNumber, accountTypeNewId, accountTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId, data);\r\n  }\r\n  \r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\"{{'DueDateAnalysis.backtoDueDate' | translate}}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\" pTooltip=\"{{'DueDateAnalysis.backtoDueDate' | translate}}\"\r\n      tooltipPosition=\"bottom\"></button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-col-12\">\r\n  <h4 class=\"p-text-center\">{{accountName}}</h4>\r\n  <div class=\"card p-text-center\">\r\n    <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\">\r\n    </p-chart>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"p-col-12\">\r\n  <div class=\"card p-text-center\">\r\n    <p-table [value]=\"data\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='dueDate' || col.field=='applicationDate' || col.field=='documentDate'\">\r\n              {{ row[col.field]  | date:'dd.MM.yyyy' }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-due-date-details',\r\n  templateUrl: './due-date-details.component.html',\r\n  styleUrls: ['./due-date-details.component.sass'],\r\n})\r\nexport class DueDateDetailsComponent implements OnInit {\r\n\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountNumber: string;\r\n  accountName: string;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateLabels: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  data: any[] = new Array();\r\n  docPositiveData: any[] = new Array();\r\n  docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDateData: any = {};\r\n  delayCols: TableColumn[];\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService,\r\n    private _router: Router, private _route: ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.waiting = true;\r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe(elem => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        { label: elem.paymentLabel, routerLink: '/analysis/payment', routerLinkActiveOptions: { exact: true } },\r\n        { label: elem.label, routerLink: '/analysis/due-date', routerLinkActiveOptions: { exact: true } },\r\n        { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n      ];\r\n      \r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/shared/data' };\r\n      this._analysisService\r\n      .getDueDateAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.accountNumber)\r\n      .subscribe(res => {\r\n\r\n        this.waiting = false;\r\n        this.docDataTable = res.data.docDateReference;\r\n        this.data = res.data.records;\r\n\r\n        this.docDataTable.forEach(element => {\r\n          this.docDateLabels.push(element.monthName + '-' + element.yearName);\r\n          this.docPositiveData.push(element.positive);\r\n          this.docNegativeData.push(element.negative);\r\n          this.docData.push(+element.positive + +element.negative);\r\n        });\r\n\r\n        this.docDateData = {\r\n          labels: this.docDateLabels,\r\n          datasets: [{\r\n            type: 'line',\r\n            label: elem.average,\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: this.docData\r\n          }, {\r\n            type: 'bar',\r\n            label: elem.positive,\r\n            backgroundColor: '#F5B59B',\r\n            data: this.docPositiveData,\r\n            borderColor: '#E5A58B',\r\n            borderWidth: 2\r\n          }, {\r\n            type: 'bar',\r\n            label: elem.negative,\r\n            backgroundColor: '#FFD795',\r\n            borderColor: '#EFC785',\r\n            data: this.docNegativeData\r\n          }]\r\n        };\r\n\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"there is no Account selected!\"\r\n        });\r\n      });\r\n    })\r\n\r\n\r\n    this.basicData = {\r\n      labels: this.labels,\r\n      datasets: new Array()\r\n    };\r\n\r\n    this.basicOptions = {\r\n\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            minRotation: 40,\r\n            maxRotation: 90,\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 0,\r\n            stepSize: 50\r\n          }\r\n        }],\r\n      }\r\n    };\r\n\r\n    this.delayCols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n   \r\n\r\n  }\r\n\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['analysis/due-date']);\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Organisation {\r\n    id: number;\r\n    name: string ='';\r\n    logo:  File ;\r\n    email: string = '';\r\n    street: string ='';\r\n    houseNr: number = null;\r\n    city: string ='';\r\n    postCode: number = null;\r\n    country: string ='';\r\n\r\n\r\n    // constructor(name: string, logo: File ,email: string, street: string , houseNr: number , city: string , country: string ) {\r\n    //     this.name = name;\r\n    //     this.logo = logo;\r\n    //     this.email = email;\r\n    //     this.street = street;\r\n    //     this.houseNr = houseNr;\r\n    //     this.city = city;\r\n    //     this.country = country;\r\n\r\n    // }\r\n\r\n    static setOrganisation(organisation) {\r\n\r\n        let result: Organisation = organisation\r\n        return result\r\n    }\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AmountAnalysis } from '../../model/amountAnalysis';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Bar } from '../../model/bar';\r\nimport { Router } from '@angular/router';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-amount-analysis',\r\n  templateUrl: './amount-analysis.component.html',\r\n  styleUrls: ['./amount-analysis.component.sass']\r\n})\r\nexport class AmountAnalysisComponent implements OnInit {\r\n\r\n  data: AmountAnalysis[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  baseBalance = 500;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string = \"\";\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(private _messageService: MessageService, private _analysisService: AnalysisService,\r\n    private _router: Router, private prcService: ProcedureService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.items = [\r\n      // {label: 'Analysis'},\r\n      {label: 'Amount Analysis', routerLink: '/analysis/amount'}\r\n  ];\r\n  \r\n  this.home = {icon: 'pi pi-home', label: ' Data', routerLink: '/shared/data'};\r\n\r\n    this.waiting = true;\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        yAxes: [{\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'Count',\r\n          ticks: {\r\n            min: 0,\r\n          }\r\n        },\r\n        ]\r\n      }\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.totalBalance',\r\n        field: 'totalBalance',\r\n        align: 'right'\r\n      }\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.getData();\r\n\r\n    // if (this.selectedProcedure && +this.selectedProcedure > 0) {\r\n    //   this.prcService\r\n    //     .getById(+this.selectedProcedure)\r\n    //     .subscribe(prc => {\r\n    //       this.procedureName = prc && prc.length > 0 ? prc[0].name : \"\";\r\n    //     }, er => { });\r\n    // }\r\n\r\n  }// end of ng on init\r\n\r\n  goToDetails(row: AmountAnalysis) {\r\n    this._router.navigate(['/analysis/amount/' + this.selectedOrganisation + '/' + this.selectedProcedure + '/' + row.accountNumber + '/' + this.baseBalance]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = false;\r\n    this._analysisService\r\n      .getAmountAnalysis(this.selectedOrganisation, this.selectedProcedure, this.baseBalance)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = [...this.data];\r\n        this.basicData = {\r\n          labels: ['Total Count'],\r\n          datasets: new Array()\r\n        };\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          const element = this.data[i];\r\n          this.basicData.datasets.push(new Bar(element.accountName, `rgb(${Math.random() * 25500 % 255}, ${Math.random() * 25500 % 255},${Math.random() * 25500 % 255})`, element.totlaCount));\r\n        }\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid p-mt-2\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-text-right\">\r\n      <label for=\"baseBalance\">{{'AmountAnalysis.baseBalance' | translate}}: </label>\r\n      <!-- <input pInputNumber type=\"number\" name=\"baseBalance\" [(ngModel)]=\"baseBalance\"/> -->\r\n      <p-inputNumber [(ngModel)]=\"baseBalance\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n      </p-inputNumber>\r\n      <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\" class=\"p-ml-2\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12 \" *ngIf=\"selectedProcedure>0\">\r\n    <!-- <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar> -->\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span><p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">{{ row[col.field] | currency:'EUR':''}}</span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Choices } from \"./choices\";\r\n\r\nexport class FileToImport {\r\n\r\n    OrganisationId: number;\r\n    procedureId: number;\r\n    template: any = {};\r\n    defaultTemplate: any = {};\r\n    fileType: Choices;\r\n    fileClass: Choices;\r\n    local: Choices;\r\n    accountType: Choices;\r\n    size: Number;\r\n    orginalName: string;\r\n    nameOnServer: string;\r\n    file: File;\r\n    index: number;\r\n    uploaded: boolean;\r\n    imported: boolean;\r\n    fileHeader: any = {};\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CreditLine } from '../../model/creditLine';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-credit-line',\r\n  templateUrl: './credit-line.component.html',\r\n  styleUrls: ['./credit-line.component.sass']\r\n})\r\nexport class CreditLineComponent implements OnInit {\r\n  procedureName: string;\r\n  prcId: number;\r\n  orgId: number;\r\n  data: CreditLine[];\r\n  cols: TableColumn[];\r\n  originalCreditLine: number;\r\n  originalCreditLineFromDate: Date;\r\n  originalCreditLineToDate: Date;\r\n  newDialog: boolean;\r\n  newRecord: CreditLine;\r\n\r\n  constructor(private _liquidityService: LiquidityService, private _messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber'\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLine',\r\n        field: 'creditLine',\r\n        width: '250',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineFromDate',\r\n        field: 'creditLineFromDate'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineToDate',\r\n        field: 'creditLineToDate'\r\n      }\r\n    ];\r\n\r\n    this._liquidityService\r\n      .getCreditLine(this.orgId, this.prcId)\r\n      .subscribe(res => {\r\n\r\n        this.data = res;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  editRow(row: CreditLine) {\r\n    this.data.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalCreditLine = row.creditLine;\r\n    this.originalCreditLineFromDate = row.creditLineFromDate;\r\n    this.originalCreditLineToDate = row.creditLineToDate;\r\n  }\r\n\r\n  save(row: CreditLine) {\r\n    this._liquidityService\r\n      .updateCreditLine(this.orgId, this.prcId, row)\r\n      .subscribe(res => {\r\n        row.isEditable = false;\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Credit line is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n  cancel(row: CreditLine) {\r\n    row.creditLineFromDate = this.originalCreditLineFromDate;\r\n    row.creditLineToDate = this.originalCreditLineToDate;\r\n    row.creditLine = this.originalCreditLine;\r\n    row.isEditable = false;\r\n  }\r\n\r\n  addRow(row: CreditLine) {\r\n    this.newRecord = new CreditLine();\r\n    this.newRecord.accountName = row.accountName;\r\n    this.newRecord.accountNumber = row.accountNumber;\r\n    this.newDialog = true;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.newDialog = false;\r\n    this.newRecord = new CreditLine();\r\n  }\r\n\r\n  saveCreditLie() {\r\n    this._liquidityService\r\n    .updateCreditLine(this.orgId, this.prcId, this.newRecord)\r\n    .subscribe(res => {\r\n\r\n      this.data.push(this.newRecord);\r\n      this.data = [...this.data];\r\n      this.newDialog = false;\r\n\r\n      this._messageService.add({\r\n        severity: 'success',\r\n        summary: 'DONE!',\r\n        detail: `Credit line is inserted successfully in the targeted posting data`\r\n      });\r\n    }, er => {\r\n      this._messageService.add({\r\n        severity: 'error',\r\n        summary: 'ERROR!',\r\n        detail: er.error.error\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">\r\n      {{procedureName}}\r\n    </h2>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\">\r\n\r\n\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"data\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}\r\n          </th>\r\n          <th>\r\n            {{'Account_Type.Action' | translate}}\r\n          </th>\r\n        </tr>\r\n\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span\r\n              *ngIf=\"col.field != 'creditLine' && col.field != 'creditLineToDate' && col.field != 'creditLineFromDate'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'creditLine'\">\r\n              {{ row[col.field] | currency:'EUR':''}}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && (col.field == 'creditLineToDate' || col.field == 'creditLineFromDate')\">\r\n              {{ row[col.field] | date:'yyyy.MM.dd'}}\r\n            </span>\r\n\r\n            <p-inputNumber *ngIf=\"row.isEditable && col.field == 'creditLine'\" [(ngModel)]=\"row.creditLine\"\r\n              mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\" [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{'margin-left': '5%'}\" size='10'>\r\n            </p-inputNumber>\r\n\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineFromDate'\" [(ngModel)]=\"row.creditLineFromDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineToDate'\" [(ngModel)]=\"row.creditLineToDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.creditLine\"\r\n              pTooltip=\"{{'Account_Type.Add' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<p-dialog [(visible)]=\"newDialog\" [style]=\"{width: '450px'}\" header=\"Add new Credit Line\" [modal]=\"true\"\r\n  styleClass=\"p-fluid\">\r\n  <ng-template pTemplate=\"content\">\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"number\">Account Number: {{newRecord.accountNumber}}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"name\">Account Name: {{newRecord.accountName}}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"CreditLine\">Credit Line</label>\r\n      <p-inputNumber [(ngModel)]=\"newRecord.creditLine\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{'width': '50%'}\" size='10'>\r\n      </p-inputNumber>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineFromDate\">From Date</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineFromDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineToDate\">To Date</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineToDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n\r\n\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\">\r\n    <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n    <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"saveCreditLie()\"></button>\r\n  </ng-template>\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.sass']\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{ name: 'Manager', value: 2 }, { name: 'User', value: 3 }];\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.OrganisationId = +localStorage.getItem('organisationId');\r\n  }\r\n  submitHandler() {\r\n    this._userService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\";\r\n\r\n          if (err.status === 400) {\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status === 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status === 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status === 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status === 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/shared/user/users']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.header' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}}  </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                    <small *ngIf=\"role.invalid && role.untouched \"  class=\"spanCss\"> {{'User_Registration.roleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstname' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}}  </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">  {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}} </small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","\n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\n    <div class=\"card\">\n        <p-toast></p-toast>\n\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Password_Reset.header' | translate}} </div>\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandle()\">\n\n\n            <div class=\"p-fluid\">\n\n  \n            <div class=\"p-field p-grid\">\n                <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'Password_Reset.password' | translate}}</label>\n                <div class=\"p-col-12 p-md-10\">\n                    <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \n                    <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\n                </div>\n            </div>\n            <div class=\"p-field p-grid\">\n                <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Password_Reset.passwordConfirm' | translate}}</label>\n                <div class=\"p-col-12 p-md-10\">\n                    <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \n                    <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\n                </div>\n            </div>\n\n            <div class=\"p-field p-grid\">\n                <div class=\"p-xs-col-5  p-mr-4\">\n      \n                  <button pbutton pripple type=\"button\" label=\"cancel\"\n                    class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\n                  </button>\n                </div>\n                <div class=\"p-xs-col-5 \">\n                  <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\n                  </button>\n                </div>\n      \n              </div>\n        </div>\n        </form>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../service/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.sass']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  passwordObj = {\r\n    selectedPassword: \"\",\r\n    confirmedPassword: \"\",\r\n  }\r\n  pass: string;\r\n\r\n  constructor(private _messageService: MessageService, private _authService: AuthService, private _router: Router, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submitHandle() {\r\n    // console.log(this.passwordObj)\r\n    if (this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword) {\r\n      let password = this.passwordObj.selectedPassword\r\n      this._authService\r\n        .changePassword({ password: password })\r\n        .subscribe(res => {\r\n            this._router.navigate(['/']);\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n\r\n    } else {\r\n      this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch\r\n        });\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/shared/user/procedures']);\r\n  }\r\n}\r\n","export class CreditLine {\r\n    accountNumber: string;\r\n    accountName: string;\r\n    procedureId: number;\r\n    creditLineFromDate: Date;\r\n    creditLineToDate: Date;\r\n    creditLine: number;\r\n    isEditable: boolean;\r\n} ","<div>\r\n        <div>\r\n            <p-menubar [model]=\"menuItems\">\r\n        \r\n            <ng-template pTemplate=\"start\">\r\n                <img src=\"assets/logo.jpg\" height=\"60\" width=\"75\" class=\"p-mr-6\" style=\" border: hidden \" >\r\n            \r\n            </ng-template>\r\n            <div class=\"p-formgroup-inline\">\r\n                <div class=\"p-field\">\r\n                     <select #langSelect (change)=\"_translateService.use(langSelect.value)\"\r\n                     class=\"layout-topbar-action p-d-flex p-dir-row p-jc-center p-ai-center p-px-2 rounded-circle ng-tns-c186-0 p-ripple\"\r\n                    style=\" height: 60px; background-color: #58585a ; color: #ffffff; border: none \"\r\n                    [(ngModel)]=\"browserLang\">\r\n                        <option *ngFor=\"let lang of _translateService.getLangs(); index as i\" value=\"{{lang}}\">{{lang | uppercase}} </option>\r\n                    </select> \r\n\r\n                </div>\r\n                <div class=\"p-field\">\r\n\r\n                    <a pripple class=\"layout-topbar-action p-d-flex p-dir-row p-jc-center p-ai-center p-px-2 rounded-circle ng-tns-c186-0 p-ripple\">\r\n                        <img src=\"assets/profile.png\" style=\"width: 60px; height: 60px; background-color: none ; color: none \"class=\"p-mr-2\" (click)=\"menu.toggle($event)\">\r\n                        <span class=\"p-link\"></span>\r\n                    </a>\r\n                    <p-menu #menu [popup]=\"true\" [model]=\"userPages\"></p-menu> \r\n                </div>\r\n\r\n            </div>\r\n        </p-menubar>\r\n        \r\n        </div>\r\n        <div>\r\n            <p-sidebar [(visible)]=\"sideBarShow\" class=\"sideBarWidth\" [showCloseIcon]=\"false\" >\r\n                <h2 style=\"font-weight:lighter \" class=\"p-text-center\"> {{ username }} </h2>\r\n                <p-menu #menu [model]=\"sidebarItems\" [style]=\"{'width':'300px', 'border': 'none'}\"></p-menu >        \r\n            </p-sidebar>\r\n        </div>\r\n    </div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-nav-bar',\r\n    templateUrl: './nav-bar.component.html',\r\n    styleUrls: ['./nav-bar.component.sass']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n    sideBarShow: boolean = false;\r\n    menuItems: MenuItem[] = [];\r\n    userPages: MenuItem[] = [];\r\n    sidebarItems: MenuItem[] = [];\r\n    username: string = localStorage.getItem('username');\r\n    role: string = localStorage.getItem('role');\r\n    browserLang: string = 'de';\r\n    orgId: number;\r\n    prcId: number;\r\n    @ViewChild('menu') menu: any;\r\n\r\n\r\n    constructor(public _translateService: TranslateService, private _router: Router) {\r\n        this._translateService.addLangs(['de', 'en']);\r\n        this._translateService.setDefaultLang('de');\r\n        this.browserLang = this._translateService.getBrowserLang();\r\n        this._translateService.use(this.browserLang.match(/de|en/) ? this.browserLang : 'de');\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.username = localStorage.getItem('username');\r\n        this.role = localStorage.getItem('role');\r\n        this.orgId = +localStorage.getItem('organisationId');\r\n        this.prcId = +localStorage.getItem('currentProcedureId');\r\n        if (window.addEventListener) {\r\n            window.addEventListener(\"storage\", this._listener, false);\r\n        }\r\n\r\n        this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this._translateService.use(event.lang);\r\n            this.getSideBarItems();\r\n            localStorage.setItem('lang', event.lang);\r\n        })\r\n        this.getSideBarItems()\r\n\r\n    }\r\n\r\n    private _listener = () => {\r\n        this.sidebarItems.push({\r\n            label: 'Data',\r\n            items: [\r\n                { label: 'Data table', icon: 'pi pi-table', routerLink: ['/shared/data'], visible: !!this.orgId && !!this.prcId },\r\n            ],\r\n        });\r\n        debugger;\r\n        this.menu.refresh();\r\n     }\r\n     \r\n\r\n    getSideBarItems() {\r\n        \r\n        this._translateService.get('sideBarMenu').subscribe(elem => {\r\n\r\n            this.menuItems = [\r\n\r\n                {\r\n                    label: '<button pButton type=\"button\"  icon=\"pi pi-check\"> </button>',\r\n                    icon: 'pi pi-bars',\r\n                    escape: false,\r\n                    command: () => {\r\n                        this.sideBarShow = true\r\n                    }\r\n\r\n                }\r\n            ];\r\n            if (this.role === \"Admin\") {\r\n                this.sidebarItems = [\r\n                    {\r\n                        label: 'Administrator',\r\n                        items: [\r\n                            { label: 'Import', icon: 'pi pi-file', routerLink: ['/admin/import'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.addUser, icon: 'pi pi-user-plus', routerLink: ['/admin/admin/add'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.addOrganisation, icon: 'pi pi-plus-circle', routerLink: ['admin/organisation/add'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.addDocumentType, icon: 'pi pi-plus-circle', routerLink: ['admin/document-type'], command: () => { this.sideBarShow = false } },\r\n                           // { label: elem.addAccountType, icon: 'pi pi-plus-circle', routerLink: ['admin/accountType'], command: () => { this.sideBarShow = false } },\r\n                            \r\n                            { label: elem.resetPassword, icon: 'pi pi-lock', routerLink: ['/resetPassword'], command: () => { this.sideBarShow = false } },\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Dashboard',\r\n                        items: [\r\n                            { label: elem.organisations, icon: 'pi  pi-home', routerLink: ['/admin/dashboard'], command: () => { this.sideBarShow = false } },\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: elem.data,\r\n                        items: [\r\n                            { label: elem.data, icon: 'pi  pi-table', routerLink: ['/shared/data'], command: () => { this.sideBarShow = false } },\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: elem.analysis,\r\n                        items: [\r\n                            { label: elem.amountAnalyisis, icon: 'pi pi-euro', routerLink: ['/analysis/amount'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.textAnalysis, icon: 'pi pi-inbox', routerLink: ['/analysis/text'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.paymentAnalyse, icon: 'pi pi-credit-card', routerLink: ['/analysis/payment'], command: () => { this.sideBarShow = false } },\r\n                           { label: elem.creditorsAnalyse, icon: 'pi pi-chart-bar' , routerLink: ['/analysis/creditor'], command: () => {this.sideBarShow = false}},\r\n\r\n\r\n                        ]\r\n                    },\r\n    /*                 {\r\n                        label: elem.liquidity,\r\n                        items: [\r\n                            { label: elem.openingBalance, icon: 'pi  pi-plus-circle', routerLink: ['/liquidity/openingBalance'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.creditLine, icon: 'pi  pi-plus-circle', routerLink: ['/liquidity/creditLine'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.freeLiquidity, icon: 'pi  pi-chart-line', routerLink: ['/liquidity/freeLiquidity'], command: () => { this.sideBarShow = false } },\r\n                        ]\r\n                    }  */\r\n                ];\r\n\r\n                this.userPages = [\r\n\r\n\r\n                    { label: elem.setting, icon: 'pi pi-globe' },\r\n                    {\r\n                        label: elem.logout, icon: 'pi pi-fw pi-power-off', command: () => {\r\n                            this.logout();\r\n                        }\r\n                    }\r\n\r\n                ];\r\n            } else if (this.role === \"Manager\") {\r\n                this.sidebarItems = [\r\n\r\n                    {\r\n                        label: 'Dashboard',\r\n                        items: [\r\n                            { label: elem.procedures, icon: 'pi  pi-home', routerLink: ['/shared/user/procedures'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.users, icon: 'pi pi-users', routerLink: ['/shared/user/users'], command: () => { this.sideBarShow = false } }\r\n                        ]\r\n                    },\r\n                    {\r\n                                    label: elem.data,\r\n                                    items: [\r\n                                        {label: elem.table, icon: 'pi pi-table', routerLink: ['/data'] },\r\n                                    ]\r\n                    }, \r\n                    \r\n                    {\r\n                        label: elem.analysis,\r\n                        items: [\r\n                            { label: elem.amountAnalyisis, icon: 'pi pi-euro', routerLink: ['/analysis/amount'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.textAnalysis, icon: 'pi pi-inbox', routerLink: ['/analysis/text'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.paymentAnalyse, icon: 'pi pi-credit-card', routerLink: ['/analysis/payment'], command: () => { this.sideBarShow = false } },\r\n                           { label: elem.creditorsAnalyse, icon: 'pi pi-chart-bar' , routerLink: ['/analysis/creditor'], command: () => {this.sideBarShow = false}},\r\n\r\n\r\n                        ]\r\n                    },\r\n\r\n                ];\r\n\r\n                this.userPages = [\r\n                    { label: elem.setting, icon: 'pi pi-globe' },\r\n                    {\r\n                        label: elem.logout, icon: 'pi pi-fw pi-power-off', command: () => {\r\n                            this.logout();\r\n                        }\r\n                    }\r\n                ];\r\n            } else if (this.role === \"User\") {\r\n                this.sidebarItems = [\r\n\r\n                    {\r\n                        label: 'Dashboard',\r\n                        items: [\r\n                            { label: elem.procedures, icon: 'pi  pi-home', routerLink: ['/shared/user/procedures'], command: () => { this.sideBarShow = false } },\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: elem.data,\r\n                        items: [\r\n                                {label: elem.table, icon: 'pi pi-table', routerLink: ['/data'] },\r\n                        ]\r\n                    }, \r\n                                \r\n                    {\r\n                        label: elem.analysis,\r\n                        items: [\r\n                            { label: elem.amountAnalyisis, icon: 'pi pi-euro', routerLink: ['/analysis/amount'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.textAnalysis, icon: 'pi pi-inbox', routerLink: ['/analysis/text'], command: () => { this.sideBarShow = false } },\r\n                            { label: elem.paymentAnalyse, icon: 'pi pi-credit-card', routerLink: ['/analysis/payment'], command: () => { this.sideBarShow = false } },\r\n                           { label: elem.creditorsAnalyse, icon: 'pi pi-chart-bar' , routerLink: ['/analysis/creditor'], command: () => {this.sideBarShow = false}},\r\n\r\n\r\n                        ]\r\n                    },\r\n\r\n                ];\r\n\r\n                this.userPages = [\r\n                    {\r\n                        label: elem.logout, icon: 'pi pi-fw pi-power-off', command: () => {\r\n                            this.logout();\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.clear();\r\n        this._router.navigate(['/']);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDataTable(companyCode:string, offset:number, limit: number) {\r\n    return this._http.get(this._thisURL + '/getPostingData/' + companyCode + '/' + offset + '/' + limit);\r\n  }\r\n\r\n  getDefaultSusaDateRange(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + `/susa/defaultDate/${orgId}/${prcId}`);\r\n  }\r\n\r\n  getSusa(orgId: number, prcId: number, fromDate: string, toDate: string, criteria: any) {\r\n    let url = this._thisURL + `/susa/${orgId}/${prcId}`;\r\n    if (fromDate && toDate) {\r\n      url += `/${fromDate}/${toDate}`\r\n    }\r\n    return this._http.get<any>(url, { params: criteria });\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h3 class=\"p-text-center\">{{accountName}}</h3>\r\n    <!-- <p-messages></p-messages> -->\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"detailsOptions\" (onChange)=\"changeData($event.value)\" optionLabel=\"name\"\r\n        optionValue=\"value\" [(ngModel)]=\"detailsOption\">\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\" [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\"\r\n      scrollHeight=\"350px\" [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\"\r\n            *ngFor=\"let col of columns\">\r\n            {{col.header | translate}}<p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.amountRelevant\"></i>\r\n              <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.amountRelevant\"></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"row.amountRelevantComment\" style=\"width: 100%; padding: 5px;\"\r\n                  (change)=\"commentChanged(row)\">\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\">\r\n              {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <!-- All records table... back-end filter and pagination -->\r\n\r\n    <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" [resizableColumns]=\"true\" dataKey=\"id\" *ngIf=\"detailsOption == 3\"\r\n    styleClass=\"p-datatable-gridlines\" [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\"\r\n    scrollHeight=\"350px\" [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\"\r\n    [(selection)]=\"selected\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-grid\">\r\n        <div class=\"p-col-1\" *ngIf=\"!details\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n            class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n            pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n        <div class=\"p-col-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n            class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n            class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\" label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n        </div>\r\n        <div class=\"p-col-7\">\r\n          <!-- Limit options -->\r\n          <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n            (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n          <!-- Go to First page -->\r\n          <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n            (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n          <!-- Go previous -->\r\n          <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\" (click)=\"previousPage()\"\r\n            class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          <!-- Page number -->\r\n          <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n            (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n          <!-- Go to next Page -->\r\n          <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n            (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n          <!-- Go to last page -->\r\n          <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n            (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n  \r\n          <!-- dispalyed data of total count -->\r\n          {{displayedDataCount}} of {{totalCount}}\r\n          <!-- Clear filter -->\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    </p-table>\r\n    <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" [resizableColumns]=\"true\" dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\" styleClass=\"p-datatable-gridlines\" [loading]=\"waiting\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\" [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n<!--       <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-2\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\" pTooltip=\"Save\" tooltipPosition=\"bottom\" label=\"Save Relevant\"></button>\r\n          </div>\r\n          <div class=\"p-mb-4\">\r\n           \r\n            <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n    \r\n            <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          \r\n            <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\" class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          \r\n            <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n              (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n           \r\n            <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n           \r\n            <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n\r\n           \r\n            {{displayedDataCount}} of {{totalCount}}\r\n           \r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n        </div>\r\n      </ng-template> -->\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText type=\"text\" [(ngModel)]=\"backCriteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChangeBack($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.amountRelevant\"></i>\r\n              <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.amountRelevant\"></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"row.amountRelevantComment\" style=\"width: 100%; padding: 5px;\"\r\n                  (change)=\"commentChanged(row)\">\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\">\r\n              {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AmountAnalysisDetails } from 'src/app/shared/model/amountAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'amount-analysis-details',\r\n  templateUrl: './amount-analysis-details.html',\r\n  styleUrls: ['./amount-analysis-details.sass']\r\n})\r\nexport class AmountAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: AmountAnalysisDetails[] = new Array();\r\n  allRecordData: AmountAnalysisDetails[] = new Array();\r\n  waiting: boolean;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  baseBalance: number;\r\n  procedureName: any;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: AmountAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number; }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  accountName: string;\r\n  // for pagination ends\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService, private _exportDataService: ExportDataService, private _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Amount Analysis', routerLink: '/analysis/amount', routerLinkActiveOptions: { exact: true } },\r\n      { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n    ];\r\n\r\n    this.home = { icon: 'pi pi-home', label: 'Data', routerLink: '/shared/data' };\r\n\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId ? this.orgId : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId ? this.prcId : +localStorage.getItem('currentProcedureId');\r\n    this.baseBalance = +this._route.snapshot.paramMap.get('baseBalance');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0\r\n    };\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'User Relevant', value: 2 },\r\n      { name: 'All', value: 3 }\r\n    ];\r\n\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'amountRelevant',\r\n        width: '6',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'amountRelevantComment',\r\n        width: '35',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(this.orgId, this.prcId, this.accountNumber, this.baseBalance)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        if (this.data.length > 0) {\r\n          this.accountName = this.data[0].accountName;\r\n        }\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n\r\n  }// end of ng on init\r\n\r\n\r\n  goBack() {\r\n    this._router.navigate(['/analysis/amount/']);\r\n  }\r\n\r\n\r\n  async exportExcel() {\r\n\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key) && key != 'id' && key != 'procedureId') {\r\n          let translatedKey = await this._translateService.get('DataTableColumns.' + key).toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (element[key] &&\r\n            (key == 'balance' || key == 'debitAmount' || key == 'creditAmount' || key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' || key == 'taxAmountCredit' || key == 'StartingBalance')) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n              }\r\n\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (element[key] &&\r\n            (key == 'documentDate' || key == 'postingDate' || key == 'dueDate' || key == 'dueDateNew' ||\r\n              key == 'executionDate' || key == 'applicationDate' || key == 'StartingBalanceDate')) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString('de-DE', {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n              });\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n          }\r\n          // end of formatting\r\n\r\n\r\n\r\n\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = { Sheets: { 'amount_analysis': worksheet }, SheetNames: ['amount_analysis'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"amount_analysis\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  selectRow(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    if (row.amountRelevant) {\r\n      row.amountRelevant = false;\r\n      row.amountRelevantComment = '';\r\n    } else {\r\n      row.amountRelevant = true;\r\n    }\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  commentChanged(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    row.amountRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantAmountAnalysis(this.orgId, this.prcId, this.accountNumber, this.baseBalance, this.selected)\r\n      .subscribe(res => {\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: \"records set as relevant successfully!\"\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(this.orgId, this.prcId, this.accountNumber, this.baseBalance)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsRelevant(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key]) {\r\n        delete this.backCriteria[key];\r\n      }\r\n     }\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsByAccount(this.orgId, this.prcId, this.accountNumber, this.backCriteria)\r\n      .subscribe(res => {\r\n        this.allRecordData = res.rows;\r\n        this.totalCount = res.count;\r\n        this.displayedDataCount = this.allRecordData.length;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    this._exportDataService\r\n      .exportXLSX('amount_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        url => {\r\n          // console.log(url);\r\n          window.open(url.toString(), \"_blank\");\r\n        },\r\n        (error) => console.log(error),\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.backCriteria.orderBy = event.sortField;\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    if (!this.waiting)\r\n      this.getAllByAccount();\r\n  }\r\n\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <p-messages></p-messages>\r\n  </div>\r\n</div>\r\n\r\n<p-table #dtmaxb dataKey=\"accountNumber\" [value]=\"data\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <!-- Limit options -->\r\n          <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n            (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n          <!-- Go to First page -->\r\n          <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n            (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n          <!-- Go previous -->\r\n          <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\" (click)=\"previousPage()\"\r\n            class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          <!-- Page number -->\r\n          <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n            (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n          <!-- Go to next Page -->\r\n          <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n            (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n          <!-- Go to last page -->\r\n          <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n            (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n            tooltipPosition=\"bottom\"></button>\r\n  \r\n          <!-- dispalyed data of total count -->\r\n          {{displayedDataCount}} of {{totalCount}}\r\n          <!-- Clear filter -->\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n          <col>\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{col.header | translate}}\r\n            </span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria['accountNumber']\"\r\n              [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, 'accountNumber')\"\r\n              class=\"filterInputCss\" />\r\n\r\n          </th>\r\n          <th pResizableColumn class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria['accountName']\"\r\n              [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, 'accountName')\"\r\n              class=\"filterInputCss\" />\r\n\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">\r\n              {{ row.totalBalance  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\"> \r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n            (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n        </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis',\r\n  templateUrl: './creditor-analysis.component.html',\r\n  styleUrls: ['./creditor-analysis.component.sass']\r\n})\r\nexport class CreditorAnalysisComponent implements OnInit {\r\n  cols: TableColumn[];\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: any;\r\n  data: any;\r\n  accountNumber: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  criteria: any = {\r\n    limit: 25,\r\n    offset: 0\r\n  };\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n\r\n  constructor(public _translateService: TranslateService, private _analysisService: AnalysisService, private _messageService: MessageService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    \r\n    this._translateService.get('CreditorsAnalysis').subscribe(elem => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/analysis/creditor' }\r\n      ];\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/shared/data' };\r\n\r\n      this.cols = [\r\n        {\r\n          header: elem.accountNumber,\r\n          field: 'accountNumber',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: elem.accountName,\r\n          field: 'accountName',\r\n          align: 'left'\r\n        },\r\n        {\r\n          header: elem.count,\r\n          field: 'totlaCount',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: elem.sum,\r\n          field: 'totalBalance',\r\n          align: 'right'\r\n        }\r\n      ];\r\n    })\r\n\r\n\r\n    this.getData();\r\n\r\n  }// end of ng o0n init\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.getData();\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate(['/analysis/creditor/deails/' + row.accountNumber]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this._analysisService\r\n      .getCreditorAnalysis(this.selectedOrganisation, this.selectedProcedure, this.criteria)\r\n      .subscribe(res => {\r\n        this.waiting = false;\r\n        this.data = res.data;\r\n        this.totalCount = res.count[0]['FOUND_ROWS()'];\r\n        this.displayedDataCount = this.totalCount > this.limit ? this.limit : this.totalCount;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField;\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.waiting)\r\n      this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.criteria.offset -= +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      limit: this.limit,\r\n      offset: 0\r\n    };\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false\r\n  };\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private _authSrvc: AuthService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    // return next.handle(request);\r\n    const token = this._authSrvc.getToken();\r\n    const tokenizedReq = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return next.handle(tokenizedReq);\r\n  }\r\n}\r\n","import {  TranslateService } from '@ngx-translate/core';\r\n\r\nexport class Choices {\r\n    name: string = 'Select Template';\r\n    value: number = 1;\r\n\r\n    constructor(name: string, value: number) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n\r\n    static getTemplates(): Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP_W-mobel\", 1));\r\n        result.push(new Choices(\"SAP_Cinram\", 2));\r\n        result.push(new Choices(\"Other\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getFileType() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Excel\", 1));\r\n        result.push(new Choices(\"Csv\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getFileClass() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Accounts\", 1));\r\n        result.push(new Choices(\"Posting\", 2));\r\n        result.push(new Choices(\"Helper\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getLocalization() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"en_US\", 1));\r\n        result.push(new Choices(\"de_DE\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getAccountTypes() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Creditor\", 1));\r\n        result.push(new Choices(\"Debtor\", 2));\r\n        result.push(new Choices(\"GLA_Account\", 3));\r\n        result.push(new Choices(\"Other\", 4));\r\n        return result;\r\n    }\r\n    static getDataSources() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP\", 1));\r\n        result.push(new Choices(\"Datev\", 2));\r\n        result.push(new Choices(\"Lexware\", 3));\r\n        return result;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganisationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/organisation';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get() {\r\n    return this._http.get<any>(this._thisURL);\r\n  }\r\n\r\n  insert(p: FormData) {\r\n    return this._http.post<any>(this._thisURL, p);\r\n  }\r\n\r\n  getOne(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  update(p: FormData, id: number) {\r\n    return this._http.put<any>(this._thisURL + '/' + id, p);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this._http.delete<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  getProcedures(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id + '/procedures')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  \r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  login(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/login', data);\r\n  }\r\n\r\n  resetPassword(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/resetPassword', data);\r\n  }\r\n\r\n  changePassword(data: {password: string}) {\r\n    return this._http.post<any>(this._thisURL + '/profile/resetPassword', data);\r\n  }\r\n\r\n\r\n  adminRegistration(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/adminRegistration', data);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getRole() {\r\n    return localStorage.getItem('role');\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Roles } from \"../../shared/model/roles\";\r\nimport { Titles } from \"../../shared/model/titles\";\r\nimport { Users } from \"../../shared/model/users\";\r\nimport { AdminRegistrationService } from \"../service/admin-registration.service\";\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-registration',\r\n  templateUrl: './admin-registration.component.html',\r\n  styleUrls: ['./admin-registration.component.sass']\r\n})\r\nexport class AdminRegistrationComponent implements OnInit {\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, public _translateService: TranslateService,\r\n      private _adminRegistrationService: AdminRegistrationService, private _orgService : OrganisationService) { }\r\n\r\n\r\n  orgs: [] = [];\r\n  titles: Titles[] = Titles.getTitles();\r\n  //roles: Roles[] = Roles.getRoles();\r\n  roles = [{name:'Admin', value: 1}];\r\n\r\n\r\n  userModel: Users;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.RoleId = 1;\r\n    \r\n    this._orgService.get()\r\n    .subscribe(\r\n      (data) => {\r\n        this.orgs = data;\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  submitHandler() {\r\n    this._adminRegistrationService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/admin/dashboard/procedures']); \r\n\r\n  }\r\n}\r\n"," <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'User_Registration.header' | translate}}</div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\" *ngIf=\"userModel.role==='Manager' || userModel.role==='User'\">\r\n                    <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\" > {{'User_Registration.organisation' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                      <p-dropdown placeholder=\"{{'User_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n                        #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n                        [showClear]=\"true\" [(ngModel)]=\"userModel.OrganisationId\">\r\n                        <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                          <span\r\n                            class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                          </span>\r\n                        </div>\r\n                      </p-dropdown>\r\n                      <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'User_Registration.organisationErrorMsg' | translate}} </small>\r\n          \r\n                    </div>\r\n                  </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}} </small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" maxlength=\"25\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" maxlength=\"50\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  addUser(user) {\r\n    // console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user/add', user);\r\n  }\r\n\r\n  editUser(user) {\r\n    // console.log(user)\r\n     return this._http.put<any>(this._thisURL + '/user/edit', user);\r\n  }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getUsers(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId );\r\n  }\r\n}\r\n","\r\nexport class Titles {\r\n\r\n    name: string = \"\"\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    static getTitles(): Titles[] {\r\n        let result: Titles[] = [];\r\n\r\n        result.push(new Titles(\"Frau\"));\r\n        result.push(new Titles(\"Herr\"));\r\n        return result;\r\n    }\r\n\r\n\r\n}","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h4 class=\"p-text-center\">{{accountName}}</h4>\r\n    <!-- <p-messages></p-messages> -->\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!waiting\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"detailsOptions\" (onChange)=\"changeData($event.value)\" optionLabel=\"name\"\r\n        optionValue=\"value\" [(ngModel)]=\"detailsOption\">\r\n      </p-selectButton>\r\n    </span>\r\n    <div *ngIf=\"detailsOption ==1\">\r\n      <span class=\"p-text-center\">\r\n        <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"displayData\" optionLabel=\"name\" optionValue=\"value\">\r\n        </p-selectButton>\r\n      </span>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"blueData\" *ngIf=\"displayData==1\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\" class=\" p-button-primary\"\r\n                label=\"{{ 'Analysis.back' | translate}} \" pTooltip=\"{{ 'Analysis.back' | translate}} \"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(blueData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate}} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{col.header | translate}}\">\r\n                {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px;\" (change)=\"commentChanged(row)\">\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{row.paymentRelevantComment}}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field=='value'\">\r\n                {{ row.balance  | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='documentDate' || col.field=='dueDate' || col.field=='applicationDate'\">\r\n                {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\"\r\n                *ngIf=\"col.field!='value' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate' && col.field!='paymentRelevantComment' && col.field!='paymentRelevant'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"redData\" *ngIf=\"displayData==2\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(redData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate}} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{col.header | translate}}\">\r\n                {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px;\" (change)=\"commentChanged(row)\">\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{row.paymentRelevantComment}}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field=='value'\">\r\n                {{ row.balance  | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='documentDate' || col.field=='dueDate' || col.field=='applicationDate'\">\r\n                {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\"\r\n                *ngIf=\"col.field!='value' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate' && col.field!='paymentRelevantComment' && col.field!='paymentRelevant'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"greenData\" *ngIf=\"displayData==3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(greenData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px;\" (change)=\"commentChanged(row)\">\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{row.paymentRelevantComment}}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field=='value'\">\r\n                {{ row.balance  | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='documentDate' || col.field=='dueDate' || col.field=='applicationDate'\">\r\n                {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\"\r\n                *ngIf=\"col.field!='value' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate' && col.field!='paymentRelevantComment' && col.field!='paymentRelevant'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\" let-columns>\r\n          <tr>\r\n            <td [attr.colspan]=\"columns.length\">\r\n              No records found\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"detailsOption != 1\">\r\n      <p-table #dtrelevant dataKey=\"id\" [value]=\"relevantData\" *ngIf=\"detailsOption != 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(relevantData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px;\" (change)=\"commentChanged(row)\">\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{row.paymentRelevantComment}}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field=='value'\">\r\n                {{ row.balance  | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='documentDate' || col.field=='dueDate' || col.field=='applicationDate'\">\r\n                {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\"\r\n                *ngIf=\"col.field!='value' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate' && col.field!='paymentRelevantComment' && col.field!='paymentRelevant'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" *ngIf=\"detailsOption == 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate}} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\" label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n            </div>\r\n            <div class=\"p-col-7\">\r\n              <!-- Limit options -->\r\n              <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n                (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n              <!-- Go to First page -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n                (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go previous -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\"\r\n                (click)=\"previousPage()\" class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Page number -->\r\n              <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n                (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n              <!-- Go to next Page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n                (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go to last page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n                (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n\r\n              <!-- dispalyed data of total count -->\r\n              {{displayedDataCount}} of {{totalCount}}\r\n              <!-- Clear filter -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{col.header | translate}}\">\r\n                {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input\r\n                *ngIf=\"col.field != 'paymentRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n                pInputText type=\"text\" [(ngModel)]=\"backCriteria[col.field]\" [style]=\"{width:'90%'}\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row.paymentRelevantComment }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px;\" (change)=\"commentChanged(row)\">\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{row.paymentRelevantComment}}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field=='value'\">\r\n                {{ row.balance  | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='documentDate' || col.field=='dueDate' || col.field=='applicationDate'\">\r\n                {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\"\r\n                *ngIf=\"col.field!='value' && col.field!='documentDate' && col.field!='dueDate' && col.field!='applicationDate' && col.field!='paymentRelevantComment' && col.field!='paymentRelevant'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { PaymentData, PaymentDetailsRecord } from 'src/app/shared/model/paymentAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport { PaymentAnalysisDetailsData } from 'src/app/shared/model/paymentAnalysis';\r\nimport * as FileSaver from 'file-saver';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-payment-analysis-details',\r\n  templateUrl: './payment-analysis-details.component.html',\r\n  styleUrls: ['./payment-analysis-details.component.sass']\r\n})\r\nexport class PaymentAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  data: PaymentData[];\r\n  blueData: PaymentDetailsRecord[] = new Array();\r\n  redData: PaymentDetailsRecord[] = new Array();\r\n  greenData: PaymentDetailsRecord[] = new Array();\r\n  relevantData: PaymentAnalysisDetailsData[] = new Array();\r\n  allRecordData: PaymentAnalysisDetailsData[] = new Array();\r\n  basicOptions: any;\r\n  basicData: any;\r\n  blue: any[] = new Array();\r\n  red: any[] = new Array();\r\n  green: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  accountName: string = '';\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  paymentOptions: { name: string; value: number; color: string; }[];\r\n  accountNumber: string;\r\n  waiting: boolean = true;\r\n  procedureName: string;\r\n  displayData: number;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  selected: PaymentAnalysisDetailsData[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  detailsOptions: { name: string; value: number; }[];\r\n  detailsOption: number;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  // for pagination ends\r\n\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService, private _router: Router,\r\n    private _route: ActivatedRoute, private _exportDataService: ExportDataService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n\r\n    this._translateService.get('PaymentAnalysis').subscribe(elem => {\r\n      this.waiting = true;\r\n      this.displayData = 1;\r\n      this.detailsOption = 1;\r\n\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        { label: elem.label, routerLink: '/analysis/payment', routerLinkActiveOptions: { exact: true } },\r\n        { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n      ];\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/shared/data' };\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              // debugger;\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              }\r\n            }\r\n          }],\r\n        }\r\n      };\r\n\r\n      this.backCriteria = {\r\n        limit: this.limit,\r\n        offset: 0\r\n      };\r\n\r\n      this.paymentOptions = [\r\n        { name: elem.blue, value: 1, color: 'blue !important' },\r\n        { name: elem.red, value: 2, color: 'red' },\r\n        { name: elem.green, value: 3, color: 'green' }\r\n      ];\r\n      this.detailsOptions = [\r\n        { name: elem.sysRelevant, value: 1 },\r\n        { name: elem.userRelevant, value: 2 },\r\n        { name: elem.allRelevant, value: 3 }\r\n      ];\r\n\r\n      this.frozenCols = [\r\n        {\r\n          header: '',\r\n          field: 'paymentRelevant',\r\n          width: '6',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: elem.comment,\r\n          field: 'paymentRelevantComment',\r\n          width: '35',\r\n          align: 'left'\r\n        }\r\n      ];\r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array()\r\n      };\r\n\r\n      this.basicData.datasets.push({\r\n        label: elem.blue,\r\n        backgroundColor: `rgb(100,100,255)`,\r\n        data: this.blue\r\n      },\r\n        {\r\n          label: elem.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.red\r\n        },\r\n        {\r\n          label: elem.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.green\r\n        });\r\n    })\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    if (!this.selectedOrganisation) {\r\n      this._messageService.add({\r\n        severity: 'error',\r\n        summary: 'ERROR',\r\n        life: 10000,\r\n        detail: \"there is no Ortganisation selected!\"\r\n      });\r\n    }\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    if (!this.selectedProcedure) {\r\n      this._messageService.add({\r\n        severity: 'error',\r\n        summary: 'ERROR',\r\n        life: 10000,\r\n        detail: \"there is no Procedure selected!\"\r\n      });\r\n    }\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    if (!this.accountNumber) {\r\n      this._messageService.add({\r\n        severity: 'error',\r\n        summary: 'ERROR',\r\n        life: 10000,\r\n        detail: \"there is no Account selected!\"\r\n      });\r\n    }\r\n\r\n    this.getData();\r\n\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this._analysisService\r\n      .getPaymentAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.data = res.data.data;\r\n        this.startDate = res.dateRange[0].mindate;\r\n        this.endDate = res.dateRange[0].maxdate;\r\n        this.blueData = res.data.blue;\r\n        this.redData = res.data.red;\r\n        this.greenData = res.data.green;\r\n        if (!this.accountName) {\r\n          if (this.blueData.length > 0) {\r\n            this.accountName = this.blueData[0].accountName;\r\n          } else if (this.redData.length > 0) {\r\n            this.accountName = this.redData[0].accountName;\r\n          } else if (this.greenData.length > 0) {\r\n            this.accountName = this.greenData[0].accountName;\r\n          }\r\n        }\r\n\r\n        if (!(this.labels.length > 0)) {\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.labels.push(element.monthName + '-' + element.yearName);\r\n            this.blue.push(Math.abs(element.blue.value));\r\n            this.green.push(Math.abs(element.green.value));\r\n            this.red.push(Math.abs(element.red.value));\r\n          }\r\n        }\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  selectRow(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    if (row.paymentRelevant) {\r\n      row.paymentRelevant = false;\r\n      row.paymentRelevantComment = '';\r\n    } else {\r\n      row.paymentRelevant = true;\r\n    }\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  commentChanged(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    row.paymentRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantPaymentAnalysis(this.selectedOrganisation, this.selectedProcedure, this.accountNumber, this.selected)\r\n      .subscribe(res => {\r\n        this.getData();\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: \"records set as relevant successfully!\"\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/analysis/payment/']);\r\n  }\r\n\r\n\r\n  async exportExcel(data) {\r\n\r\n    let translatedData = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n      let element = data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key) && key != 'id' && key != 'procedureId') {\r\n          let translatedKey = await this._translateService.get('DataTableColumns.' + key).toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (element[key] &&\r\n            (key == 'balance' || key == 'debitAmount' || key == 'creditAmount' || key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' || key == 'taxAmountCredit' || key == 'StartingBalance')) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n              }\r\n\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (element[key] &&\r\n            (key == 'documentDate' || key == 'postingDate' || key == 'dueDate' || key == 'dueDateNew' ||\r\n              key == 'executionDate' || key == 'applicationDate' || key == 'StartingBalanceDate')) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString('de-DE', {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n              });\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n          }\r\n          // end of formatting\r\n\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = { Sheets: { 'payment_analysis': worksheet }, SheetNames: ['payment_analysis'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"payment_analysis\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getData();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getData();\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsRelevant(this.selectedOrganisation, this.selectedProcedure, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.relevantData = res;\r\n        // this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key]) {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsByAccount(this.selectedOrganisation, this.selectedProcedure, this.accountNumber, this.backCriteria)\r\n      .subscribe(res => {\r\n        this.allRecordData = res.rows;\r\n        this.totalCount = res.count;\r\n        this.displayedDataCount = this.allRecordData.length;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.backCriteria.orderBy = event.sortField;\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    if (!this.waiting)\r\n      this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    this._exportDataService\r\n      .exportXLSX('payment_analysis', this.selectedOrganisation, this.selectedProcedure, criteriaWithLang)\r\n      .subscribe(\r\n        url => {\r\n          // console.log(url);\r\n          window.open(url.toString(), \"_blank\");\r\n        },\r\n        (error) => console.log(error),\r\n      );\r\n  }\r\n\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.sass']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{'Notfound.errorMsg' | translate}}</p>\r\n\r\n","<p-table [value]=\"procedures\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n  responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Add Procedure -->\r\n      <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addProcedure()\"\r\n      class=\"p-button-rounded p-button-primary\" pTooltip=\"{{'Procedure_Registration.addProedurePlaceHolder' | translate}}\"\r\n         tooltipPosition=\"bottom\"></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\">\r\n    <colgroup>\r\n      <col *ngFor=\"let col of cols\">\r\n      <col>\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n        {{ col.header | translate}} \r\n      </th>\r\n      <th *ngIf=\"role!=='User'\" style=\"width: 10em\" > </th>\r\n\r\n    </tr>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"body\" let-procedure>\r\n    <tr>\r\n      <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\" >\r\n        <i *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'true'\" class=\"pi pi-check checkIcon\"></i> <i\r\n          *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'false'\" class=\"pi pi-times closeIcon\"></i>\r\n        {{ (procedure[col.field]?.toString().toLowerCase().trim() != 'true' && procedure[col.field]?.toString().toLowerCase().trim() != 'false') ? procedure[col.field] : ''}}\r\n      </td>\r\n      <td *ngIf=\"role!=='User'\" style=\"width: 10em\" class= \"p-text-right\">\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\"\r\n          class=\"p-button-rounded p-button-warning headerColor\" pTooltip=\"{{'Admin_Dashboard.show' | translate}}\"\r\n          tooltipPosition=\"bottom\" (click)=\"dataTable(procedure)\"></button> &nbsp;\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'Procedure_Registration.editProedurePlaceHolder' | translate}}\" tooltipPosition=\"bottom\"\r\n          (click)=\"editProcedure(procedure.id, procedure.name, procedure.data, procedure.analysis)\"></button>\r\n\r\n      </td>\r\n\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"4\">{{'Procedure_Registration.NoProceduresFound' | translate}}</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.sass']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId')\r\n  role = localStorage.getItem('role')\r\n  procedures: [] = [];\r\n  cols: { header, field , align}[] = new Array();\r\n  check = '<i class=\"pi pi-check checkIcon\"></i>';\r\n\r\n  constructor(private _userService: UserService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this._userService\r\n      .getProcedures(this.organisationId)\r\n      .subscribe(\r\n        (data) => {\r\n          this.procedures = data;\r\n\r\n        },\r\n        (error) => console.log(error),\r\n        () => { }\r\n      );\r\n\r\n      this.cols = [\r\n        {\r\n          header: 'Procedure_Registration.name',\r\n          field: 'name',\r\n          align: 'left'\r\n        },\r\n        {\r\n          header: 'Procedure_Registration.datasource',\r\n          field: 'dataSource',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: 'Procedure_Registration.data',\r\n          field: 'data',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: 'Procedure_Registration.analysis',\r\n          field: 'analysis',\r\n          align: 'center'\r\n        },\r\n      ];\r\n\r\n    \r\n  } // end of ng on init\r\n\r\n\r\n\r\n  dataTable(prc) {\r\n    localStorage.setItem('currentProcedureId', prc.id);\r\n    localStorage.setItem('currentProcedureName', prc.name);\r\n    this._router.navigate(['/shared/data']);\r\n\r\n  }\r\n  editProcedure(id, name, data, analysis) {\r\n    localStorage.setItem('currentProcedureId', id);\r\n    localStorage.setItem('currentProcedureName', name);\r\n    localStorage.setItem('currentProcedureData', data);\r\n    localStorage.setItem('currentProcedureAnalysis', analysis);\r\n\r\n    this._router.navigate(['/admin/procedure/edit']);\r\n\r\n  }\r\n  addProcedure() {\r\n    this._router.navigate(['/admin/procedure/add']);\r\n\r\n  }\r\n}\r\n","import { CurrencyPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { LiquidityService } from 'src/app/shared/service/liquidity.service';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity-details',\r\n  templateUrl: './free-liquidity-details.component.html',\r\n  styleUrls: ['./free-liquidity-details.component.sass']\r\n})\r\nexport class FreeLiquidityDetailsComponent implements OnInit {\r\n\r\n  accountNumber: string;\r\n  accountName: string;\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n\r\n  constructor(private _liquidityService: LiquidityService, private _messageService: MessageService,\r\n    private _router: Router, private _route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.items = [\r\n      { label: 'Free Liquidity', routerLink: '/liquidity/freeLiquidity', routerLinkActiveOptions: { exact: true } },\r\n      { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n    ];\r\n    this.home = { icon: 'pi pi-home', label: ' Data', routerLink: '/shared/data' };\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            minRotation: 40,\r\n            maxRotation: 90,\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 0,\r\n            callback: function (label, index, values) {\r\n              // debugger;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              label = currencyPipe.transform(label, 'EURO', '');\r\n              return label;\r\n            }\r\n          }\r\n        }],\r\n      }\r\n    };\r\n\r\n    this.getData();\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  getData() {\r\n\r\n    this._liquidityService.getFreeLiquidityDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.accountName = res.bankBalances.accountName;\r\n        this.basicData = {\r\n          labels: res.bankBalances.labels,\r\n          datasets: [{\r\n            type: 'line',\r\n            label: 'Credit Lines',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: res.creditLines\r\n          }, {\r\n            type: 'line',\r\n            label: 'Free Liquidity',\r\n            fill: false,\r\n            data: res.freeLiquidity,\r\n            borderColor: '#E5A58B',\r\n            borderWidth: 2\r\n          }, {\r\n            type: 'bar',\r\n            label: 'Bank Balances',\r\n            backgroundColor: '#88FF88',\r\n            borderColor: '#58dF58',\r\n            data: res.bankBalances.bankBalances\r\n          }]\r\n        };\r\n\r\n\r\n      }, er => {\r\n\r\n      });\r\n\r\n  } // end of ng on init\r\n\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h4 class=\"p-text-center\">{{accountName}}</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostingDataService } from '../../service/posting-data.service';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as FileSaver from 'file-saver';\r\nimport { Word } from '../../model/word';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-susa',\r\n  templateUrl: './susa.component.html',\r\n  styleUrls: ['./susa.component.sass'],\r\n  providers: [DatePipe]\r\n})\r\nexport class SusaComponent implements OnInit {\r\n\r\n  organisationId: number = +localStorage.getItem('organisationId');\r\n  procedureId: number = +localStorage.getItem('currentProcedureId');\r\n  fromDate: Date = new Date();\r\n  toDate: Date = new Date();\r\n  procedureName: string = \"\";\r\n  cols: TableColumn[] = new Array();\r\n  data: any[] = new Array();\r\n  waiting: boolean = false;\r\n  criteria: any = {};\r\n  completeWords: Word[] = new Array();\r\n  filtersNo: number = 0;\r\n  searching: boolean = false;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(private _messageService: MessageService, private _postingDataService: PostingDataService,\r\n    private _router: Router, private prcService: ProcedureService, private datepipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.waiting = true;\r\n    this.items = [\r\n      { label: 'SUSA', routerLink: '/shared/data/susa', routerLinkActiveOptions: { exact: true } }\r\n    ];\r\n\r\n    this.home = { icon: 'pi pi-home', label: ' Data', routerLink: '/shared/data', routerLinkActiveOptions: { exact: true } };\r\n\r\n    this.organisationId = +localStorage.getItem('organisationId');\r\n    this.procedureId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._postingDataService\r\n      .getDefaultSusaDateRange(this.organisationId, this.procedureId)\r\n      .subscribe(res => {\r\n        this.fromDate = new Date(Date.parse(res[0].mindate));\r\n        this.toDate = new Date(Date.parse(res[0].maxdate));\r\n        let minYear = this.fromDate.getFullYear();\r\n        // debugger;\r\n        if (isNaN(minYear)) {\r\n          this.fromDate = this.toDate = new Date();\r\n          this.waiting = false;\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: \"There is no dates in this procedure\"\r\n          });\r\n        } else {\r\n          this.getData();\r\n        }\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Susa.accountType',\r\n        field: 'accountType',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Susa.accountnumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Susa.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Susa.startingBalance',\r\n        field: 'famount',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'Susa.sumDebit',\r\n        field: 'debitAmount',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'Susa.sumCredit',\r\n        field: 'creditAmount',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'Susa.balance',\r\n        field: 'inamount',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'Susa.endingBalance',\r\n        field: 'outamount',\r\n        align: 'right'\r\n      },\r\n    ];\r\n\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    this.searching = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n     }\r\n    let fdate = this.datepipe.transform(this.fromDate, 'yyyy-MM-dd');\r\n    let tdate = this.datepipe.transform(this.toDate, 'yyyy-MM-dd');\r\n    this._postingDataService\r\n      .getSusa(this.organisationId, this.procedureId, fdate, tdate, this.criteria)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.waiting = false;\r\n        this.searching = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField;\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    // this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.waiting)\r\n      this.getData();\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/shared/data']);\r\n  }\r\n\r\n\r\n  exportExcel() {\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(this.data);\r\n      const workbook = { Sheets: { 'susa': worksheet }, SheetNames: ['susa'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"SuSa\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    // const name = fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION;\r\n    // const file = new File([buffer], name, {type: EXCEL_TYPE});\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.getData();\r\n  }\r\n\r\n  filterChange(value, field) {\r\n    if (value) {\r\n      this.criteria[field] = value;\r\n      ++this.filtersNo;\r\n    } else {\r\n      delete this.criteria[field];\r\n      --this.filtersNo;\r\n    }\r\n    this.waiting = true;\r\n    // this.autoComplete(value);\r\n    this.getData();\r\n  }\r\n\r\n  // autoComplete(word: string) {\r\n    // if (word && word.length > 2) {\r\n    //   this._autocompleteService\r\n    //     .complete(word)\r\n    //     .subscribe(res => {\r\n    //       console.log(res);\r\n    //       this.completeWords = res;\r\n    //     });\r\n    // } else {\r\n      // this.completeWords = new Array();\r\n    // }\r\n  // }\r\n\r\n}\r\n","<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-8 p-mb-4 p-text-right\">\r\n    <p-toast></p-toast>\r\n    <label>{{ 'Susa.from' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"fromDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <label>{{ 'Susa.to' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"toDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-filter\" [disabled]=\"waiting\"\r\n      class=\" p-button-primary\" label=\"{{'Susa.search' | translate}}\" (click)=\"getData();\"\r\n      pTooltip=\"{{ 'Susa.search' | translate}} \" tooltipPosition=\"bottom\">\r\n      <i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i>\r\n    </button>\r\n  </div>\r\n  <!-- <div class=\"p-sm-4\">\r\n    <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n  </div> -->\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"searching\"></p-progressBar>\r\n\r\n    <p-table #dt [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\" [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\">\r\n            <!-- Add Procedure -->\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-primary\" label=\"{{ 'Susa.daten' | translate}} \"\r\n              pTooltip=\"{{ 'Susa.datenToolTip' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-2\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 150) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n           *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">{{col.header | translate}}</span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon></th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n              *ngIf=\"col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName'\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n            <!-- <p-autoComplete [suggestions]=\"completeWords\" (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\" (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\" [minLength]=\"1\" [inputStyle]=\"{width:'90%'}\" [style]=\"{width:'90%'}\" appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"></p-autoComplete> -->\r\n\r\n            <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <div\r\n              *ngIf=\"(col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName');then withoutFilter else withFilter\">\r\n            </div>\r\n            <ng-template #withoutFilter>\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n              </span>\r\n            </ng-template>\r\n            <ng-template #withFilter>\r\n              {{ (col.field == 'outamount'? +row['famount'] + +row['inamount'] : +row[col.field]) | currency:'EUR':''}}\r\n            </ng-template>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"4\">{{'not Found' | translate}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoleServiceService } from \"../service/role-service.service\";\r\nimport { UsersService } from \"../service/users.service\";\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-procedure-registration',\r\n  templateUrl: './procedure-registration.component.html',\r\n  styleUrls: ['./procedure-registration.component.sass']\r\n})\r\nexport class ProcedureRegistrationComponent implements OnInit {\r\n\r\n  orgs: [] = [];\r\n  dataSources: Choices[] = Choices.getDataSources();\r\n  organisationId = localStorage.getItem('organisationId')\r\n\r\n  procedureModel: Procedures = new Procedures();\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _roleServiceService: RoleServiceService,\r\n     private _usersService: UsersService, private _orgService : OrganisationService, public _translateService: TranslateService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n  }\r\n\r\n\r\n  submitHandler() {\r\n    this._roleServiceService.addProcedure(this.procedureModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/shared/user/procedures']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'Procedure_Registration.registrationHeader' | translate}} </div>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.organisation' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n              #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.OrganisationId\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'Procedure_Registration.organisationErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.datasource' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.datasourcePlaceHolder' | translate}}\" name=\"dataSource\" optionValue=\"name\" optionLabel=\"name\"\r\n              #dataSource=\"ngModel\" [options]=\"dataSources\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.dataSource\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"dataSource.invalid && dataSource.touched \"> {{'Procedure_Registration.datasourceErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"procedureModel.name\">\r\n            <small *ngIf=\"procedureName.invalid && procedureName.touched \" class=\"spanCss \">{{'Procedure_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.data' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"data\" binary=\"true\" [(ngModel)]=\"procedureModel.data\" inputId=\"data\"></p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\">\r\n            </p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { ImportService } from \"../service/import.service\";\r\nimport { FileToImport } from \"../../shared/model/file-import\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.sass']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n\r\n\r\n  items: MenuItem[] = [];\r\n  activeIndex: number = 0;\r\n  uploadedFiles: any[] = [];\r\n  templates: Choices[] = Choices.getTemplates();\r\n  fileTypes: Choices[] = Choices.getFileType();\r\n  fileClass: Choices[] = Choices.getFileClass();\r\n  locals: Choices[] = Choices.getLocalization();\r\n  accountTypes: Choices[] = Choices.getAccountTypes();\r\n  selectedTemplate: any;\r\n  waiting: boolean = false;\r\n  filesList: FileToImport[] = new Array();\r\n  currentFileIndex: number = -1;\r\n  accountsCustomTemplate: any = {};\r\n  postingCustomTemplate: any = {};\r\n  headCustomTemplate: any = {};\r\n  orgs: Organisation[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  procedures: Procedures[] = new Array();\r\n  selectedProcedureId: number = -1;\r\n  tempheader: any = {};\r\n\r\n\r\n  constructor(public _translateService: TranslateService ,private _messageService: MessageService, private _importService: ImportService, private _orgService: OrganisationService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.get('Admin_Import').subscribe(elem => {\r\n\r\n      this.items = [\r\n        {\r\n          label: elem.firstStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 0;\r\n            // this._messageService.add({severity:'info', summary:'First Step', detail: event.item.label});\r\n          }\r\n        },\r\n        {\r\n          label: elem.secondStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 1;\r\n          }\r\n        },\r\n        {\r\n          label: elem.thirdStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 2;\r\n          }\r\n        },\r\n        {\r\n          label: elem.firthStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 3;\r\n          }\r\n        }\r\n      ];\r\n  \r\n  \r\n      this._orgService.get()\r\n        .subscribe(\r\n          (data) => {\r\n            this.orgs = data;\r\n          },\r\n          (error) => console.log(error)\r\n        );\r\n    })\r\n\r\n\r\n\r\n  } \r\n  // end of ngOnInit\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  selectTemplatHandler(e) {\r\n    this.filesList = [];\r\n    this.addFormData();\r\n  }\r\n\r\n  removeFormData(index: number) {\r\n    this.filesList.splice(index, 1);\r\n  }\r\n\r\n  addFormData() {\r\n    let f = new FileToImport();\r\n    f.OrganisationId = this.selectedOrgId;\r\n    f.procedureId = this.selectedProcedureId;\r\n    f.defaultTemplate = this.selectedTemplate;\r\n    this.filesList.push(f);\r\n  }\r\n\r\n  goToImport(wizardIndex, fileIndex) {\r\n    this.currentFileIndex = fileIndex;\r\n    this.activeIndex = ++wizardIndex;\r\n  }\r\n\r\n  goNext(index) {\r\n    this.activeIndex = ++index;\r\n  }\r\n\r\n  goPrev(index) {\r\n    this.activeIndex = --index;\r\n  }\r\n\r\n  setTemplate() {\r\n    this.filesList[this.currentFileIndex].defaultTemplate = this.postingCustomTemplate;\r\n  }\r\n\r\n  deleteFileFromServer(f: FileToImport, index) {\r\n    this.waiting = true;\r\n\r\n    const nameOnServer = f?.nameOnServer;\r\n    if (nameOnServer) {\r\n      this._importService\r\n        .deleteFile({nameOnServer: nameOnServer})\r\n        .subscribe(res => {\r\n          this.waiting = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'File Deleted!',\r\n            detail: 'the file ' + this.filesList[index].orginalName + ' deleted successfuly!'\r\n          });\r\n          debugger;\r\n          this.removeFormData(index);\r\n\r\n        },\r\n          err => {\r\n            this.waiting = false;\r\n            this._messageService.add({\r\n              severity: 'warning',\r\n              summary: 'File not Deleted!',\r\n              detail: 'the file ' + this.filesList[index].orginalName + ' not found on the server!'\r\n            });\r\n          });\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'File not Deleted!',\r\n        detail: 'There is no file selected!'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // upload step 1\r\n  uploadFirstStep(f: FileToImport, index) {\r\n    this.waiting = true;\r\n    // send to back-end\r\n    // if type excel to excel-head\r\n    // else if type csv to csv-head\r\n    // else warn user to select type\r\n    // get headers orginal name  and name on the server and set them to f\r\n    const file: File = f?.file;\r\n    const fileType: number = f?.fileType?.value;\r\n    const local: number = f?.local?.value;\r\n    const fileClass: number = f?.fileClass?.value;\r\n    const temmplate: number = this.selectedTemplate;\r\n    const formData: FormData = new FormData();\r\n    if (!!file) {\r\n      formData.append('excel', file);\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'Please choose a file',\r\n        detail: 'You should chose a posting file!'\r\n      });\r\n      return;\r\n    }\r\n\r\n    formData.append('data', JSON.stringify({\r\n      template: temmplate,\r\n      fileType: fileType,\r\n      fileClass: fileClass,\r\n      local: local\r\n    }));\r\n\r\n    this._importService\r\n      .uploadFile(formData)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.tempheader = res.headers;\r\n        f.fileHeader = new Array();\r\n        for (let index = 0; index < res.headers.length; index++) {\r\n          const element = res.headers[index];\r\n          f.fileHeader.push({name: element});\r\n        }\r\n        // f.fileHeader = res.headers;\r\n        f.nameOnServer = res.fileName;\r\n        f.orginalName = res.orginalName;\r\n        f.defaultTemplate = res.defaultTemplate;\r\n        if (fileClass === 1) {\r\n          this.accountsCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 2) {\r\n          this.postingCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 3) {\r\n          this.headCustomTemplate = res.defaultTemplate;\r\n        }\r\n        f.uploaded = true;\r\n        this.currentFileIndex = index;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File uploaded!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' uploaded successfuly! you can upload another file now'\r\n        });\r\n      }, err => {\r\n        // console.log('error: ' + err);\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: 'There is an error occured, please try again!'\r\n        });\r\n      });\r\n\r\n  }\r\n  // upload step 1 ends\r\n\r\n\r\n  UploadHandler(event, f: FileToImport, index: number) {\r\n    const selectedFiles: FileList = event.files;\r\n    // debugger;\r\n    f.file = selectedFiles[0];\r\n    f.index = index;\r\n  }\r\n\r\n\r\n  importThisFile() {\r\n    this.waiting = true;\r\n\r\n    const theFile = this.filesList[this.currentFileIndex];\r\n\r\n    const filePath = theFile.nameOnServer;\r\n    const fileType = theFile.fileType?.value;\r\n    const fileClass = theFile.fileClass?.value;\r\n    const local = theFile.local?.value;\r\n    const accountType = theFile.accountType?.value;\r\n    const template = theFile.defaultTemplate;\r\n    const OrganisationId = theFile.OrganisationId;\r\n    const procedureId = theFile.procedureId;\r\n    debugger;\r\n\r\n    // const formData: FormData = new FormData();\r\n\r\n    // formData.append('data', JSON.stringify({\r\n    //   template: template,\r\n    //   fileType: fileType,\r\n    //   fileClass: fileClass,\r\n    //   local: local,\r\n    //   filePath: filePath,\r\n    //   accountType: accountType\r\n    // }));\r\n\r\n    const data = {\r\n      data: {\r\n        template: template,\r\n        fileType: fileType,\r\n        fileClass: fileClass,\r\n        local: local,\r\n        filePath: filePath,\r\n        accountType: accountType,\r\n        OrganisationId: OrganisationId,\r\n        procedureId: procedureId\r\n      }\r\n    }\r\n\r\n    this._importService\r\n      .importFile(data)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.filesList[this.currentFileIndex].imported = true;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File imported!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' imported successfuly! you can import another file now'\r\n        });\r\n      }, err => {\r\n        // debugger;\r\n        // console.log('error: ' + err.error.error);\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: err.error.error\r\n        });\r\n      });\r\n\r\n  } // end of import this file function\r\n\r\n\r\n  filterMapping(event) {\r\n    \r\n    let filtered : any[] = [];\r\n    let query = event.query;\r\n\r\n    for(let i = 0; i < this.filesList[this.currentFileIndex].fileHeader.length; i++) {\r\n        let header = this.filesList[this.currentFileIndex].fileHeader[i];\r\n        if (header.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n            filtered.push(header);\r\n        }\r\n    }\r\n    \r\n    this.filesList[this.currentFileIndex].fileHeader = filtered;\r\n} // end of filter mapping function\r\n\r\n\r\nrestoreFileHeaders() {\r\n  this.filesList[this.currentFileIndex].fileHeader = this.tempheader;\r\n}\r\n\r\n\r\n}\r\n","<p-card>\r\n  <p-toast></p-toast>\r\n  <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\" [readonly]=\"true\"></p-steps>\r\n  <!-- {{filesList[currentFileIndex]?.orginalName}} -->\r\n</p-card>\r\n<br />\r\n\r\n<p-card>\r\n  <!-- ********************** Step 1 satrts ******************** -->\r\n  <!-- <div class=\"p-grid\"> -->\r\n  <!-- \r\n    <div class=\"p-col-1\">\r\n    </div> -->\r\n  <div [hidden]=\"activeIndex != 0\" class=\"p-sm-12\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h2 >{{'Admin_Import.firstStepHeader' | translate}}</h2>\r\n      </div>\r\n      <!-- <div class=\"p-col-4\" *ngIf=\"waiting\">\r\n        <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n      </div> -->\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h3>{{filesList[currentFileIndex]?.orginalName}}</h3>\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-10\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n              placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n              (onChange)=\"orgChangedHandler($event)\" [disabled]=\"selectedProcedureId > 0\" [style]=\"{width:'300px'}\">\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedOrgId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedProcedureId\"\r\n              placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required [disabled]=\"selectedTemplate\"\r\n              [style]=\"{width:'300px'}\"></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedProcedureId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectTemplate' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"templates\" [(ngModel)]=\"selectedTemplate\"\r\n              placeholder=\"{{'Admin_Import.selectTemplatePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"value\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\"\r\n              (onChange)=\"selectTemplatHandler($event)\" [style]=\"{width:'300px'}\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"p-grid\">\r\n        <p-messages></p-messages>\r\n      </div>\r\n      <div class=\"p-sm-12\" *ngFor=\"let f of filesList; let i = index;\" [hidden]=\"!selectedTemplate\">\r\n        <!-- {{f | json}} -->\r\n        <br><br>\r\n\r\n        <div class=\"p-grid\" *ngIf=\"f.imported!==true\">\r\n          <div class=\"p-sm-12\">\r\n            <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <!-- maxFileSize=\"100000000\" -->\r\n            <p-fileUpload name=\"excel\" mode=\"advanced\" [showUploadButton]=\"false\" customUpload=\"true\"\r\n              (uploadHandler)=\"UploadHandler($event, f, i)\" uploadLabel=\"Set File\" [auto]=\"true\"\r\n              chooseLabel=\"{{'Admin_Import.searchLabel' | translate}}\"\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, .csv, text/plain\">\r\n              <ng-template pTemplate=\"content\">\r\n\r\n              </ng-template>\r\n            </p-fileUpload>\r\n            <span *ngIf=\"f.file\">{{f?.file?.name}} - {{ (f?.file?.size / 1024) | number: '1.0-2' }} KB</span>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileTypes\" [(ngModel)]=\"f.fileType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileFormat' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileClass\" [(ngModel)]=\"f.fileClass\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==1\">\r\n            <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"f.accountType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectAccountType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==2 && f.fileType?.value==2\">\r\n            <p-dropdown [options]=\"locals\" [(ngModel)]=\"f.local\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectLocalization' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <span class=\"p-buttonset\">\r\n              <button pButton type=\"button\" icon=\"pi pi-upload\" iconPos=\"left\"\r\n                label=\"{{'Admin_Import.uploadLabel' | translate}}\" (click)=\"uploadFirstStep(f, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || f.uploaded || waiting\"\r\n                class=\"p-button-raised p-button-rounded\"><i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i></button>\r\n              <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n                class=\"p-button-raised p-button-rounded\" (click)=\"goToImport(0, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || !f.uploaded || f.imported\"></button>\r\n            </span>\r\n            &nbsp;\r\n            <button pButton pRipple [disabled]=\"!f.uploaded || waiting\" type=\"button\" icon=\"pi pi-times\"\r\n              class=\"p-button-rounded p-button-danger\" (click)=\"deleteFileFromServer(f, i)\"></button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div class=\"p-grid\" *ngIf=\"selectedTemplate\">\r\n      <div class=\"p-col-10\">\r\n        <br><br>\r\n        <button pButton type=\"button\" icon=\"pi pi-plus\" iconPos=\"left\"\r\n          label=\"{{'Admin_Import.anotherFile' | translate}}\" (click)=\"addFormData()\"></button>\r\n      </div>\r\n      <div class=\"p-col-2\"></div>\r\n    </div>\r\n\r\n\r\n    <br><br>\r\n    <!-- <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(0)\"></button> -->\r\n  </div>\r\n  <!-- </div> -->\r\n\r\n\r\n  <!-- ********************** Step 2 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 1\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n    {{'Admin_Import.secondStepHeader' | translate}}\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(1)\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goNext(1)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n  <!-- ********************** Step 3 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 2\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n    <br>\r\n    <p-accordion *ngIf=\"filesList[currentFileIndex]\">\r\n      <p-accordionTab header=\"{{'Admin_Import.thirdStepHeader' | translate}}\"\r\n        *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 1\" [selected]=\"true\">\r\n        <div class=\"p-grid\">\r\n          <!-- p-sm-12 p-lg-8 -->\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.databaseField' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.selectedFile' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> {{'Admin_Import.mappingField' | translate}} </b></h2>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b> BuKr</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.client' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>accountType</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>accountNumber</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>accountName</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab header=\"Posting Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 2\"\r\n        [selected]=\"true\">\r\n\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> Database Field </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> Data Type</b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> Mapping Field </b></h2>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.client' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <!-- <p-autoComplete [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [suggestions]=\"filesList[currentFileIndex].fileHeader\" (completeMethod)=\"filterMapping($event)\"\r\n              [forceSelection]=\"true\" [dropdown]=\"true\" [virtualScroll]=\"true\"\r\n              (onBlur)=\"restoreFileHeaders()\" (onKeyUp)=\"restoreFileHeaders()\"\r\n              (onSelect)=\"restoreFileHeaders()\"></p-autoComplete> -->\r\n\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.executionDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['executionDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.assignment' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['assignment']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.recordNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['recordNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debtorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debtorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.transactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['transactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDocument' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDocument']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textPosting' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textPosting']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.companyCode' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.fiscalYear' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['fiscalYear']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingPeriod' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingPeriod']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.reference' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['reference']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.GLAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['GLAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountGLAccountNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountGLAccountNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountCreditorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountCreditorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountDebtorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountDebtorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dueDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['dueDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textHeader' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textHeader']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balance' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balance']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balanceTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balanceTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.exchangeRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['exchangeRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.cashDiscount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['cashDiscount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.salesTaxKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['salesTaxKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.euTaxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['euTaxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountDebit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountDebit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.stackNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['stackNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.costCenter1' | translate}}</div>\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.textDataType' | translate}}</div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['constCenter1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.costCenter2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['CostCenter2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.identifierBalanceCarryforward' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['identifierBalanceCarryforward']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.generalReversal' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['generalReversal']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.ledgerId' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['ledgerId']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentLink' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentLink']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </p-accordionTab>\r\n\r\n      <p-accordionTab header=\"Head Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 3\"\r\n        [selected]=\"true\">\r\n        Head Mapping is hear\r\n      </p-accordionTab>\r\n    </p-accordion>\r\n\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"Previous\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"goPrev(2)\"></button>\r\n      <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(2)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- ********************** Step 4 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 3\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n\r\n    <p-messages></p-messages>\r\n\r\n    <br><br>\r\n    <div class=\"p-col-8\">\r\n      <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n    </div>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(3)\"></button>\r\n      <button pButton type=\"button\" label=\"Import\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"importThisFile()\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.continueLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" [disabled]=\"!filesList[currentFileIndex]?.imported\"\r\n        (click)=\"goPrev(1)\"></button>\r\n    </span>\r\n  </div>\r\n</p-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { RoleServiceService } from \"../service/role-service.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-procedure-edit',\r\n  templateUrl: './procedure-edit.component.html',\r\n  styleUrls: ['./procedure-edit.component.sass']\r\n})\r\nexport class ProcedureEditComponent implements OnInit {\r\n\r\n  procedureModel: Procedures;\r\n\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _roleServiceService : RoleServiceService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.procedureModel = new Procedures();\r\n    this.procedureModel.id = +localStorage.getItem('currentProcedureId');\r\n    this.procedureModel.name = localStorage.getItem('currentProcedureName');\r\n    this.procedureModel.data = (localStorage.getItem('currentProcedureData') === \"true\");\r\n    this.procedureModel.analysis = (localStorage.getItem('currentProcedureAnalysis') === \"true\");\r\n\r\n  }\r\n\r\n  submitHandler(){\r\n     this._roleServiceService.editProcedure(this.procedureModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'updated successfully!',\r\n          detail: 'updated successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      }); \r\n  } \r\n  cancelHandle(){\r\n    this._router.navigate(['/shared/user/procedures']);\r\n    localStorage.removeItem(\"currentProcedureId\");\r\n    localStorage.removeItem(\"currentProcedureName\");\r\n    localStorage.removeItem(\"currentProcedureData\");\r\n    localStorage.removeItem(\"currentProcedureAnalysis\");\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Procedure_Registration.editHeader' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"procedureModel.name\" > \r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.data' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"data\" binary=\"true\"[(ngModel)]=\"procedureModel.data\" inputId=\"data\" [value]=\"procedureModel.data\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\" [value]=\"procedureModel.analysis\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{accountName}}</h2>\r\n    <p-messages></p-messages>\r\n  </div>\r\n  <div class=\"p-col-12 \">\r\n    <p-card class=\"p-text-center\">\r\n      <p-chart type=\"pie\" [data]=\"chartData\" height= \"350px\"></p-chart>\r\n    </p-card>\r\n  </div>\r\n\r\n  <div class=\"p-col-4\">\r\n      <p-card class=\"p-text-center\">\r\n        <ng-template pTemplate=\"header\">\r\n            {{ 'CreditorsAnalysis.amountTotalBalance' | translate}}\r\n        </ng-template>\r\n          <h1>{{totalAmount | currency:'EUR':'symbol' }}</h1>\r\n          <h3>{{ 'CreditorsAnalysis.amountTotalCount' | translate}}</h3>\r\n          <h1>  {{totalAmountCount}} </h1>\r\n          <br>\r\n          <p class=\"amountColor\" (click)=\"setDetails(2)\"><i class=\"pi pi-arrow-down\"></i>{{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n      </p-card>\r\n  </div>\r\n  <div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.textTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalText | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.textTotalCount' | translate}}</h3>\r\n        <h1>  {{totalTextCount}}</h1>\r\n        <br>\r\n        <p class=\"textColor\" (click)=\"setDetails(1)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n    </p-card>\r\n</div>\r\n<div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.paymentTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalPayment | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.paymentTotalCount' | translate}}</h3>\r\n        <h1>  {{totalPaymentCount}}</h1>\r\n        <br>\r\n        <p class=\"paymentColor\" (click)=\"setDetails(3)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}}  </p>\r\n\r\n    </p-card>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <app-text-analysis-details details=\"true\" *ngIf=\"displayDetails==1\"></app-text-analysis-details>\r\n        <amount-analysis-details details=\"true\" *ngIf=\"displayDetails==2\"></amount-analysis-details>\r\n        <app-payment-analysis-details details=\"true\" *ngIf=\"displayDetails==3\"></app-payment-analysis-details>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis-details',\r\n  templateUrl: './creditor-analysis-details.component.html',\r\n  styleUrls: ['./creditor-analysis-details.component.sass']\r\n})\r\nexport class CreditorAnalysisDetailsComponent implements OnInit {\r\n  accountNumber: string;\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountName: string;\r\n  totalAmount: number;\r\n  totalText: number;\r\n  totalPayment: number;\r\n  displayDetails: number;\r\n  chartData: any ; \r\n  totalAmountCount: any;\r\n  totalPaymentCount: any;\r\n  totalTextCount: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(public _translateService: TranslateService, private _route: ActivatedRoute, private _analysisService: AnalysisService, private _messageService: MessageService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    \r\n    this._translateService.get('CreditorsAnalysis').subscribe(elem => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        { label: elem.label, routerLink: '/analysis/creditor', routerLinkActiveOptions: { exact: true } },\r\n        { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n      ];\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/shared/data' };\r\n      this._analysisService\r\n      .getCreditorAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.totalAmount = res.amount.length > 0 ? res.amount[0].totalBalance : 0;\r\n        this.totalAmountCount = res.amount.length > 0 ? res.amount[0].totlaCount : 0;\r\n        this.totalPayment = res.payment.length > 0 ? res.payment[0].totalBalance : 0;\r\n        this.totalPaymentCount = res.payment.length > 0 ? res.payment[0].totlaCount : 0;\r\n        this.totalText = res.text.length > 0 ? res.text[0].totalBalance : 0;\r\n        this.totalTextCount = res.text.length > 0 ? res.text[0].totlaCount : 0;\r\n        this.accountName = res.text.length > 0 ? res.text[0].accountName : res.amount.length > 0 ? res.amount[0].accountName : res.payment[0]?.accountName;\r\n        this.chartData = {\r\n          labels: [elem.amountLabel,elem.textLabel, elem.paymentLabel],\r\n          datasets: [\r\n              {\r\n                  data: [this.totalAmount, this.totalText, this.totalPayment],\r\n                  backgroundColor: [\r\n                      \"#95ca14\",\r\n                      \"#587bc7\",\r\n                      \"#fc6521\"\r\n                  ],\r\n                  hoverBackgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ]\r\n              }]    \r\n          };\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n     })\r\n\r\n\r\n\r\n  }\r\n\r\n  setDetails(option: number) {\r\n    this.displayDetails = option;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n        <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n          placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n          optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n          (onChange)=\"orgChangedHandler($event)\" [style]=\"{width:'300px'}\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-6 fontStyle\" > {{'Admin_Import.selectProcedure' | translate}} </label>\r\n        <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n          placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n          [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n          [style]=\"{width:'300px'}\"></p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n\r\n\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingDocTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n    [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n          {{col.header | translate}}</th>\r\n        <th>{{'Document_Type.Action' | translate}}</th>\r\n      </tr>\r\n\r\n    </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n            {{ col.field != 'documentTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <span  *ngIf=\"row.documentTypeNewName && (row.documentTypeNewName.toLowerCase() == 'zahlung' || row.documentTypeNewName.toLowerCase() == 'rechnung')\">\r\n                {{'Document_Type.'+row.documentTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <p-dropdown [options]=\"docTypes\" [(ngModel)]=\"row.documentTypeNewId\" optionValue=\"id\" appendTo=\"body\" \r\n                placeholder=\"Document Type new\" optionLabel=\"documentTypeName\" [showClear]=\"true\" [filter]=\"true\"\r\n                filterBy=\"documentTypeName\" (onChange)=\"docTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\" pTooltip=\"{{'Document_Type.Edit' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\" pTooltip=\"{{'Document_Type.Save' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\" pTooltip=\"{{'Document_Type.Cancel' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-document-type',\r\n  templateUrl: './document-type.component.html',\r\n  styleUrls: ['./document-type.component.sass']\r\n})\r\nexport class DocumentTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingDocTypes: PostingDocTypes[];\r\n  docTypes: DocumentTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field }[] = new Array();\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, private _docTypesService: PostingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.docTypes.push({\r\n      id: 0,\r\n      documentTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._docTypesService\r\n      .getDocTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.docTypes.push(...data);\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Document_Type.documentType',\r\n        field: 'documentType'\r\n      },\r\n      {\r\n        header: 'Document_Type.documentTypeNewName',\r\n        field: 'documentTypeNewName'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n  editRow(row) {\r\n    this.postingDocTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    debugger;\r\n    this.originalVal = row.documentTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.documentTypeNewId = this.originalVal;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == this.originalVal)[0]?.documentTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row) {\r\n    // alert(JSON.stringify(row));\r\n    this._docTypesService\r\n      .updateNewDocType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        row.isEditable = false;\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Document new type is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this._docTypesService\r\n        .getPostingDocTypes(this.selectedOrgId, e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.postingDocTypes = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  docTypeChangedHandler(e, row) {\r\n    row.documentTypeNewId = e.value;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == e.value)[0].documentTypeName;\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-4\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n      <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n        placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"orgChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\">\r\n      </p-dropdown>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-6\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n      <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n        placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n\r\n\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingAccountTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}</th>\r\n          <th>{{'Account_Type.Action' | translate}}</th>\r\n        </tr>\r\n\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\" >\r\n            {{ col.field != 'accountTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <span *ngIf=\"row.accountTypeNewName\">\r\n                {{'Account_Type.'+row.accountTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"row.accountTypeNewId\" optionValue=\"id\" appendTo=\"body\" \r\n                placeholder=\"{{'Account_Type.accountTypeNewName' | translate}}\" optionLabel=\"AccountTypeName\" [showClear]=\"true\" [filter]=\"true\"\r\n                filterBy=\"AccountTypeName\" (onChange)=\"accountTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-account-type',\r\n  templateUrl: './account-type.component.html',\r\n  styleUrls: ['./account-type.component.sass']\r\n})\r\nexport class AccountTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingAccountTypes: PostingAccountTypes[];\r\n  accountTypes: AccountTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field , align}[] = new Array();\r\n  procedureName: string;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _postingService: PostingService, private _orgService: OrganisationService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.accountTypes.push({\r\n      id: 0,\r\n      AccountTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._postingService\r\n      .getAccountTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.accountTypes.push(...data);\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Account_Type.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountType',\r\n        field: 'accountType',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this._postingService\r\n        .getPostingAccountTypes(this.selectedOrgId, this.selectedPrcId)\r\n        .subscribe(\r\n          data => {\r\n            this.postingAccountTypes = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  editRow(row) {\r\n    this.postingAccountTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    // debugger;\r\n    this.originalVal = row.accountTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.accountTypeNewId = this.originalVal;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == this.originalVal)[0]?.AccountTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row) {\r\n\r\n    this._postingService\r\n      .updateNewAccountType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        row.isEditable = false;\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Account new type is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  accountTypeChangedHandler(e, row) {\r\n    row.accountTypeNewId = e.value;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == e.value)[0].AccountTypeName;\r\n  }\r\n\r\n\r\n\r\n}\r\n","  <p-table [value]=\"users\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n    responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n      <div class=\"p-mb-4\">\r\n        <!-- Add User -->\r\n        <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addUser()\"\r\n          class=\"p-button-rounded p-button-primary\" pTooltip=\"Add user\" tooltipPosition=\"bottom\"></button>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n        <col>\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n          {{col.header | translate}}</th>\r\n        <th *ngIf=\"role!=='User'\" style=\"width: 10em\"> </th>\r\n      </tr>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template pTemplate=\"body\" let-user>\r\n      <tr>\r\n\r\n        <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n          <div *ngIf=\"col.subField;then nested_object_content else normal_content\"></div>\r\n          <ng-template #nested_object_content>\r\n            {{user[col.field][col.subField]}}\r\n          </ng-template>\r\n          <ng-template #normal_content>\r\n            {{user[col.field]}}\r\n          </ng-template>\r\n        <td *ngIf=\"role!=='User'\" style=\"width: 10em\">\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\"\r\n            class=\"p-button-rounded p-button-warning headerColor\" pTooltip=\"Edit user\" tooltipPosition=\"bottom\"\r\n            (click)=\"edituser(user)\"></button>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"12\">{{'User_Registration.NoUsersFound' | translate}}</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from \"../service/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-organisation-users',\r\n  templateUrl: './organisation-users.component.html',\r\n  styleUrls: ['./organisation-users.component.sass']\r\n})\r\nexport class OrganisationUsersComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId')\r\n  role = localStorage.getItem('role')\r\n  users  : [] = [];\r\n  cols = [];\r\n  constructor(private _userService : UserService, private _router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._userService\r\n    .getUsers(this.organisationId)\r\n    .subscribe(\r\n      (data) => { \r\n        this.users = data;\r\n        // console.log(data)\r\n        },\r\n      (error) => console.log(error),\r\n      () => { }\r\n    );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'User_Registration.role',\r\n        field: \"Role\",\r\n        subField: 'name'\r\n      },\r\n      {\r\n        header: 'User_Registration.username',\r\n        field: 'username'\r\n      },\r\n      {\r\n        header: 'User_Registration.email',\r\n        field: 'email'\r\n      },\r\n      {\r\n        header: 'User_Registration.title',\r\n        field: 'title'\r\n      },\r\n      {\r\n        header: 'User_Registration.firstname',\r\n        field: 'firstname'\r\n      },\r\n      {\r\n        header: 'User_Registration.lastname',\r\n        field: 'lastname'\r\n      },\r\n      {\r\n        header: 'User_Registration.mobileNr',\r\n        field: 'mobileNumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.street',\r\n        field: 'street'\r\n      },\r\n      {\r\n        header: 'User_Registration.houseNr',\r\n        field: 'housenumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.postcode',\r\n        field: 'postCode'\r\n      },\r\n      {\r\n        header: 'User_Registration.city',\r\n        field: 'city'\r\n      },\r\n      {\r\n        header: 'User_Registration.country',\r\n        field: 'country'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  edituser(user) {\r\n    localStorage.setItem('selectedUser_userId', user.id);\r\n    localStorage.setItem('selectedUser_roleId', user.RoleId);\r\n    localStorage.setItem('selectedUser_username', user.username);\r\n    localStorage.setItem('selectedUser_email', user.email);\r\n    localStorage.setItem('selectedUser_title', user.title);\r\n    localStorage.setItem('selectedUser_firstname', user.firstname);\r\n    localStorage.setItem('selectedUser_lastname', user.lastname);\r\n    localStorage.setItem('selectedUser_mobileNr', user.mobileNumber);\r\n    localStorage.setItem('selectedUser_street', user.street);\r\n    localStorage.setItem('selectedUser_houseNr', user.housenumber);\r\n    localStorage.setItem('selectedUser_postcode', user.postCode);\r\n    localStorage.setItem('selectedUser_city', user.city);\r\n    localStorage.setItem('selectedUser_country', user.country);\r\n\r\n    this._router.navigate(['/shared/user/edit']); \r\n  }\r\n  addUser(){\r\n    this._router.navigate(['/shared/user/add']); \r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  uploadFile(formdata) {\r\n    return this._http.post<any>(this._thisURL + '/header', formdata);\r\n  }\r\n\r\n  importFile(formData) {\r\n    return this._http.post<any>(this._thisURL + '/import', formData);\r\n  }\r\n\r\n  deleteFile(data) {\r\n    return this._http.post<any>(this._thisURL + '/delete-file', data);\r\n  }\r\n\r\n  addProcedure(procedure) {\r\n    console.log(procedure)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Procedures } from '../model/procedures';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcedureService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getById(prcId: number): Observable<Procedures[]>{\r\n    return this._http.get<Procedures[]>(this._thisURL + '/procedure/' + prcId);\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { ElementRef, Pipe, PipeTransform, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n\r\n  private readonly _nativeElement: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private sanitizer: DomSanitizer) {\r\n    this._nativeElement = el.nativeElement;\r\n  }\r\n\r\n  transform(value: string): SafeHtml | null {\r\n    if (!value)\r\n      return null;\r\n\r\n    let temp: string = '';\r\n    this.keywords.forEach(word => {\r\n      const regEx = new RegExp(word, 'ig');\r\n      let wordList = value.split(\" \").filter((elem, index) => {\r\n        return regEx.test(elem);\r\n      });\r\n      wordList.forEach(w => {\r\n        temp = value.replace(w, `<span class=\"highlight\"><b>${w}</b></span>`);\r\n      });\r\n    });\r\n    return this.sanitizer.sanitize(SecurityContext.HTML, temp) || ''\r\n    // return this.sanitizer.bypassSecurityTrustHtml(value);\r\n    // return null;\r\n  } // end of transform function\r\n\r\n\r\n  keywords = [\r\n    'Pfändung',\r\n    'Pfaendung',\r\n    'Vollstreckung',\r\n    'Rechtskräftig',\r\n    'Rechtskraeftig',\r\n    'vollzieher',\r\n    'Obergericht',\r\n    'gericht',\r\n    '(\\\\b|[^a-zA-Z]+)OGV([^a-zA-Z]+|\\\\s*)',\r\n    'Stundung',\r\n    'nsolvenz',\r\n    'Aufrechnung',\r\n    'Vollstreckung',\r\n    'Vollstreckungsbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)VB([^a-zA-Z]+|\\\\s*)',\r\n    'Zwangsvollstreckung',\r\n    '(\\\\b|[^a-zA-Z]+)ZV([^a-zA-Z]+|\\\\s*)',\r\n    'Teilzahlung',\r\n    'Ratenzahlung',\r\n    'Drittschuldner',\r\n    'Abtretung',\r\n    'berweisungsbeschluss',\r\n    'PFÜB',\r\n    'Verjährung',\r\n    '(\\\\b|[^a-zA-Z]+)ZPO([^a-zA-Z]+|\\\\s*)',\r\n    'Inkasso',\r\n    'Eidesstattliche',\r\n    'Urteil',\r\n    'Haftung',\r\n    'Kostenfestsetzungsbeschluss',\r\n    '(\\\\b|[^a-zA-Z]+)KFB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)MB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnverfahren',\r\n    'Rechtskr',\r\n    'Umschuldung',\r\n    'Eidesstattliche Erklärung',\r\n    'Eidesstattliche Erklaerung',\r\n    '(\\\\b|[^a-zA-Z]+)EE([^a-zA-Z]+|\\\\s*)',\r\n    'Rest',\r\n    'Restzahlung',\r\n    'Vereinbarung',\r\n    'Schulden',\r\n    'Urteil',\r\n    'Rate',\r\n    'Vergleich',\r\n\r\n    'Verjaehrung',\r\n    'Lieferstop',\r\n    'Leistungsstopp',\r\n    'Leistungsstop',\r\n    'Lieferstopp',\r\n    'Mahnung',\r\n    'Mahngebühr',\r\n    'Mahngeb',\r\n    'Limit',\r\n    'Überschreitung',\r\n    'Ueberschreitung',\r\n    'Androhung',\r\n    'Drohung',\r\n    'Vorfällig',\r\n    'Vorfaellig',\r\n    'Vorkasse',\r\n    'Proforma',\r\n    'Creditreform',\r\n    'Säumnis',\r\n    'Saeumnis',\r\n    'Anruf',\r\n    'Erinnerung',\r\n    '1.M.',\r\n    '2.M.',\r\n    '3.M.',\r\n    'Letzte',\r\n    'Verzug',\r\n    'Sicherheit',\r\n    'Klage',\r\n    'Aktenzeichen',\r\n    'Nachzahlung',\r\n    'Nachz',\r\n    'Zahlungsplan',\r\n    'Bescheid',\r\n    'Abschlag',\r\n    'Rechtsanwaltsgebühr',\r\n    'Rechtsanwaltsgebuehr',\r\n    'Ra -Gebühr',\r\n    'Ra -Gebuehr',\r\n    'Geschäftszeichen',\r\n    'Geschaeftszeichen',\r\n    'Beistand',\r\n    'Verrechnung',\r\n    'Außergerichtlich',\r\n    'außergerichtl',\r\n    'aussergerichtl',\r\n    'Abtretung',\r\n    'Ablöse',\r\n    'Abloese',\r\n    'Vorschuss',\r\n    'Vorschuß',\r\n\r\n  ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  exportXLSX(tableName, OrganisationId, ProcedureId, criteria: any) {\r\n    return this._http.get(this._thisURL + '/export/' + tableName + '/' + OrganisationId + '/' + ProcedureId, { params: criteria });\r\n\r\n  }\r\n\r\n  exportPDF(data) {\r\n    return this._http.get(this._thisURL + '/exportPDF/' + data);\r\n\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n  </div>\r\n</div>\r\n<div class=\"card\">\r\n  <p-table [value]=\"postings\" [columns]=\"cols\" [scrollable]=\"true\" scrollHeight=\"350px\" [style]=\"{width:'100%'}\"\r\n    [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [reorderableColumns]=\"true\" [loading]=\"loading\"\r\n    [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-mb-4\">\r\n        <!-- Export as excel -->\r\n        <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n          class=\"p-mr-2 p-button-warning\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n        <!-- Limit options -->\r\n        <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n          (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n        <!-- Go to First page -->\r\n        <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n          (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n          tooltipPosition=\"bottom\"></button>\r\n        <!-- Go previous -->\r\n        <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\" (click)=\"previousPage()\"\r\n          class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n        <!-- Page number -->\r\n        <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n          (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n        <!-- Go to next Page -->\r\n        <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n          (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n          tooltipPosition=\"bottom\"></button>\r\n        <!-- Go to last page -->\r\n        <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n          (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n          tooltipPosition=\"bottom\"></button>\r\n\r\n        <!-- dispalyed data of total count -->\r\n        {{displayedDataCount}} of {{totalCount}}\r\n        <!-- Clear filter -->\r\n        <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n          class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n          tooltipPosition=\"bottom\"></button>\r\n\r\n        <button type=\"button\" pButton pRipple icon=\"pi pi-info-circle\" (click)=\"susa()\" class=\"p-ml-6\" pTooltip=\"Susa\"\r\n          tooltipPosition=\"bottom\" label=\"Susa\"></button>\r\n\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 150) +'px'}\">\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn *ngFor=\"let col of cols\"\r\n          class=\"p-text-center\" pTooltip=\"{{col.header}}\" tooltipPosition=\"bottom\">{{col.header}}\r\n          <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n          <!-- <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            (change)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" /> -->\r\n\r\n          <p-autoComplete [suggestions]=\"completeWords\" (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\" (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\" [minLength]=\"1\" [inputStyle]=\"{width:'90%'}\" [style]=\"{width:'90%'}\" appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"\r\n            *ngIf=\"col.field != 'documentDate' && col.field != 'dueDate' && col.field != 'applicationDate' && col.field != 'postingDate' && col.field != 'executionDate'\">\r\n          </p-autoComplete>\r\n\r\n          <p-calendar *ngIf=\"col.field == 'documentDate' || col.field == 'dueDate' || col.field == 'applicationDate' || col.field == 'postingDate' || col.field == 'executionDate'\"\r\n            [(ngModel)]=\"criteria[col.field]\" (onSelect)=\"filterChange($event, col.field)\" [monthNavigator]=\"true\"\r\n            [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\">\r\n          </p-calendar>\r\n\r\n          <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData>\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n          <div\r\n            *ngIf=\"(col.field == 'balance' || col.field == 'debitAmount' || col.field == 'creditAmount' || col.field == 'documentDate' || col.field == 'executionDate' || col.field == 'dueDate' || col.field == 'postingDate' || col.field == 'applicationDate');then withFilter else withoutFilter\">\r\n          </div>\r\n          <ng-template #withoutFilter>\r\n            <span pTooltip=\"{{ rowData[col.field] }}\">\r\n              {{ rowData[col.field] }}\r\n            </span>\r\n          </ng-template>\r\n          <ng-template #withFilter>\r\n            {{ (col.field == 'balance' || col.field == 'debitAmount' ||\r\n              col.field == 'creditAmount') ? \r\n              (rowData[col.field] | currency:'EUR':'')  : rowData[col.field] | date:'dd.MM.yyyy'}}\r\n          </ng-template>\r\n\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No postings found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { PostingDataService } from '../service/posting-data.service';\r\nimport { DataFilterService } from '../service/data-filter.service';\r\nimport { ExportDataService } from '../service/export-data.service';\r\nimport { dataTableColumns } from \"../model/dataTableColumns\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\n// import { AutocompleteService } from '../service/autocomplete.service';\r\nimport { Word } from '../model/word';\r\nimport { DictionaryService } from '../service/dictionary.service';\r\n// import { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sap-data-table',\r\n  templateUrl: './sap-data-table.component.html',\r\n  styleUrls: ['./sap-data-table.component.sass'],\r\n  // providers: [DatePipe]\r\n})\r\nexport class SAPDataTableComponent implements OnInit {\r\n\r\n  constructor(private _messageService: MessageService, private _dataFilterService: DataFilterService,\r\n    private _exportDataService: ExportDataService, private _router: Router,\r\n    private _translateService: TranslateService, private scrollViewport: ElementRef,\r\n    private _autocompleteService: DictionaryService) { }\r\n\r\n\r\n  organisationId = localStorage.getItem('organisationId');\r\n  procedureId = localStorage.getItem('currentProcedureId');\r\n  procedureName: string = \"\";\r\n  filtersNo: number = 0;\r\n  loading: boolean = false;\r\n  selectLastPage: boolean = false;\r\n  data: any;\r\n  postings: [] = [];\r\n  cols: dataTableColumns[];\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 },];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  displayedDataCount = 0;\r\n  criteria: any = {\r\n    OrganisationId: this.organisationId,\r\n    procedureId: this.procedureId,\r\n    limit: this.limit,\r\n    offset: 0\r\n  };\r\n  totalCount: number = 0;\r\n  completeWords: Word[] = new Array();\r\n\r\n  ngOnInit(): void {\r\n\r\n    // this._translateService.setDefaultLang('de');\r\n    // this._translateService.\r\n    dataTableColumns.getDataTableColumns(this._translateService).then(cols => {\r\n      // debugger;\r\n      this.cols = cols;\r\n      this.getData();\r\n    });\r\n\r\n\r\n    this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      dataTableColumns.getDataTableColumns(this._translateService).then(cols => {\r\n        // debugger;\r\n        this.cols = cols;\r\n        // this.getData();\r\n      });\r\n    });\r\n\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n  }\r\n\r\n  async getData() {\r\n    // debugger;\r\n    this.loading = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this._dataFilterService\r\n      .get(this.criteria)\r\n      .subscribe(\r\n        data => {\r\n          this.data = data;\r\n          this.postings = this.data.rows;\r\n          this.totalCount = this.data.count;\r\n          this.displayedDataCount = this.totalCount > this.limit ? this.limit : this.totalCount;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.loading = false;\r\n\r\n        },\r\n        error => {\r\n          this.loading = false;\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: \"There is an error occured please try again\"\r\n          });\r\n        },\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField;\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.loading)\r\n      this.getData();\r\n  }\r\n\r\n  filterChange(value, field) {\r\n    if (value) {\r\n      // if (value instanceof Date) {\r\n      //   this.criteria[field] = this.datepipe.transform(value, 'yyyy-MM-dd');\r\n      // } else\r\n        this.criteria[field] = value;\r\n      ++this.filtersNo;\r\n    } else {\r\n      delete this.criteria[field];\r\n      --this.filtersNo;\r\n    }\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.loading = true;\r\n    this.autoComplete(value);\r\n    this.getData();\r\n  }\r\n\r\n  autoComplete(word: string) {\r\n    // if (word && word.length > 2) {\r\n    //   this._autocompleteService\r\n    //     .complete(word)\r\n    //     .subscribe(res => {\r\n    //       console.log(res);\r\n    //       this.completeWords = res;\r\n    //     });\r\n    // } else {\r\n    this.completeWords = new Array();\r\n    // }\r\n\r\n  }\r\n\r\n  submitFilter() {\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      OrganisationId: this.organisationId,\r\n      procedureId: this.procedureId,\r\n      limit: this.limit,\r\n      offset: 0\r\n    };\r\n    this.filtersNo = 0;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.loading = true;\r\n    if (!this.criteria.offset) {\r\n      this.criteria.offset = 0;\r\n    }\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.loading = true;\r\n    this.criteria.offset -= +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.criteria.offset = 0;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.loading = true;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  exportXLSX() {\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.criteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    this._exportDataService\r\n      .exportXLSX('posting', this.organisationId, this.procedureId, criteriaWithLang)\r\n      .subscribe(\r\n        url => {\r\n          // console.log(url);\r\n          window.open(url.toString(), \"_blank\");\r\n        },\r\n        (error) => console.log(error),\r\n      );\r\n  }\r\n  exportPDF() {\r\n    this._exportDataService\r\n      .exportPDF(this.postings)\r\n      .subscribe(\r\n        (data) => {\r\n\r\n          // console.log(data);\r\n        },\r\n        (error) => console.log(error),\r\n        () => { }\r\n      );\r\n  }\r\n\r\n  susa() {\r\n    this._router.navigate(['/shared/data/susa']);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  constructor(private primengConfig: PrimeNGConfig, private bnIdle: BnNgIdleService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n\r\n    this.bnIdle.startWatching(900).subscribe((isTimedOut: boolean) => {\r\n        console.log('session expired');\r\n        localStorage.clear();\r\n        this._router.navigate(['/']);\r\n    });\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","<app-layout></app-layout>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminRegistrationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  addUser(user) {\r\n    console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user', user);\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Users {\r\n    id: number;\r\n    title: string =  '';\r\n    OrganisationId: number;\r\n    email: string ='';\r\n    // role:  string ='';\r\n    RoleId: number = 3;\r\n    role: string = '';\r\n    firstname: string ='';\r\n    lastname: string ='';\r\n    username: string ='';\r\n    mobileNumber: string ='';\r\n    // contactPerson: string ='';\r\n    street: string ='';\r\n    housenumber: number = null;\r\n    city: string ='';\r\n    postCode: string ='';\r\n    country: string ='';\r\n\r\n}","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <button type=\"button\" pButton pRipple label=\"{{'DueDateAnalysis.backToPayment' | translate}}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\" pTooltip=\"{{'PaymentAnalysis.backToPayment' | translate}}\"\r\n      tooltipPosition=\"bottom\"></button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart type=\"line\" height=\"350\" [data]=\"basicData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"delayData\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\">\r\n            <col>\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n              </span>\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </th>\r\n            <th>Details</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <!-- <span *ngIf=\"col.field=='delayPos' || col.field=='delayNeg'\">\r\n                {{ row[col.field]  | currency:'EUR':'' }}\r\n              </span> -->\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"notPaidChartData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div> -->\r\n\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"notPaidDataTable\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"notPaidCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n              {{col.header | translate}}\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-right\">\r\n              <span *ngIf=\"col.field=='date'\">\r\n                {{ row.monthName + '-' + row.yearName }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='notPaid'\">\r\n                {{ +row.notPaid | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field!='date' && col.field!='notPaid'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div> -->\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-due-date',\r\n  templateUrl: './due-date.component.html',\r\n  styleUrls: ['./due-date.component.sass']\r\n})\r\nexport class DueDateComponent implements OnInit {\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateOptions: any;\r\n  docDateData: any;\r\n  docDateLabels: any[] = new Array();\r\n  docPositiveData: any[] = new Array();\r\n  docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  notPaidLabels: any[] = new Array();\r\n  notPaidData: any[] = new Array();\r\n  // notPaidDataTable: any[] = new Array();\r\n  notPaidChartData: any;\r\n\r\n  data: any[] = new Array();\r\n  @ViewChild('chart') chart: any;\r\n  // docCols: { header: string; field: string; }[];\r\n  notPaidCols: TableColumn[];\r\n  delayCols: TableColumn[];\r\n  delayData: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    \r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe(elem => {\r\n      this.items = [\r\n      \r\n        { label: elem.paymentLabel, routerLink: '/analysis/payment' },\r\n        { label: elem.label, routerLink: '/analysis/due-date' }\r\n      ];\r\n\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/shared/data' };\r\n\r\n      this._analysisService\r\n      .getDueDateAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(res => {\r\n        // debugger;\r\n        this.data = res.data.dueDateReference.data;\r\n        this.labels = res.data.dueDateReference.labels;\r\n        this.waiting = false;\r\n        this.basicData = {\r\n          labels: this.labels,\r\n          datasets: new Array(),\r\n        };\r\n        this.basicData.datasets.push({\r\n          label: elem.firstChartLabel,\r\n          borderColor: `rgb(100,100,255)`,\r\n          data: this.data,\r\n          fill: false,\r\n        });\r\n        // this.chart.refresh();\r\n        // this.chart.reinit();\r\n        this.docDataTable = res.data.docDateReference;\r\n        // this.notPaidDataTable = res.data.docDateReference;\r\n        this.delayData = res.data.dueDateRefAccounts;\r\n        this.docDataTable.forEach(element => {\r\n          this.docDateLabels.push(element.monthName + '-' + element.yearName);\r\n          this.notPaidLabels.push(element.monthName + '-' + element.yearName);\r\n          this.docPositiveData.push(element.positive);\r\n          this.docNegativeData.push(element.negative);\r\n          this.docData.push(+element.positive + +element.negative);\r\n          this.notPaidData.push(+element.notPaid);\r\n        });\r\n\r\n        this.docDateData = {\r\n          labels: this.docDateLabels,\r\n          datasets: [{\r\n              type: 'line',\r\n              label: elem.average,\r\n              borderColor: '#42A5F5',\r\n              borderWidth: 2,\r\n              fill: false,\r\n              data: this.docData\r\n          }, {\r\n              type: 'bar',\r\n              label: elem.positive,\r\n              backgroundColor: '#F5B59B',\r\n              data: this.docPositiveData,\r\n              borderColor: '#E5A58B',\r\n              borderWidth: 2\r\n          }, {\r\n              type: 'bar',\r\n              label: elem.negative,\r\n              backgroundColor: '#FFD795',\r\n              borderColor: '#EFC785',\r\n              data: this.docNegativeData\r\n          }]\r\n      };\r\n\r\n      this.notPaidChartData = {\r\n        labels: this.notPaidLabels,\r\n        datasets: [{\r\n            label: elem.notPaid,\r\n            backgroundColor: '#42A5F5',\r\n            data: this.notPaidData\r\n        }]\r\n    };\r\n\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n    })\r\n    this.basicData = {\r\n      labels: this.labels,\r\n      datasets: new Array()\r\n    };\r\n\r\n    this.basicOptions = {\r\n      scales: {\r\n          xAxes: [{\r\n                ticks: {\r\n                  minRotation: 40,\r\n                  maxRotation: 90,\r\n                }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              stepSize: 50\r\n            }\r\n      }],\r\n      }\r\n  };\r\n\r\n\r\n    this.waiting = true;\r\n\r\n\r\n    this.delayCols = [\r\n      {\r\n        header: 'DueDateAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.positiveDelay',\r\n        field: 'delayPos',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.negativeDelay',\r\n        field: 'delayNeg',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.count',\r\n        field: 'count',\r\n        align: 'center'\r\n      }\r\n    ];\r\n    \r\n    this.notPaidCols = [\r\n      {\r\n        header: 'DueDateAnalysis.date',\r\n        field: 'date',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.notPaid',\r\n        field: 'notPaid',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n  }\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['/analysis/payment/']);\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate(['analysis/due-date/deails/' + row.accountNumber]);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Word } from '../model/word';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DictionaryService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  complete(word: string): Observable<Word[]> {\r\n    return this._http.get<Word[]>(this._thisURL + 'complete/' + word);\r\n  }\r\n\r\n \r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavBarComponent } from './shared/nav-bar/nav-bar.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { ImportComponent } from './admin/import/import.component';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { UnauthComponent } from './shared/unauth/unauth.component';\r\nimport { NotfoundComponent } from './shared/notfound/notfound.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { LayoutComponent } from './shared/layout/layout.component'\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { AmountAnalysisComponent } from './shared/analysis/amount-analysis/amount-analysis.component';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { UserRegistrationComponent } from './shared/user-registration/user-registration.component';\r\nimport { UserEditComponent } from './shared/user-edit/user-edit.component';\r\nimport { UserDashboardComponent } from './shared/user-dashboard/user-dashboard.component';\r\nimport { OrganisationUsersComponent } from './shared/organisation-users/organisation-users.component';\r\nimport { ProcedureEditComponent } from './admin/procedure-edit/procedure-edit.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { DocumentTypeComponent } from './admin/document-type/document-type.component';\r\nimport { AmountAnalysisDetailsComponent } from './shared/analysis/amount-analysis/details/amount-analysis-details.component';\r\nimport { TextAnalysisComponent } from './shared/analysis/text-analysis/text-analysis.component';\r\nimport { TextAnalysisDetailsComponent } from './shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component';\r\nregisterLocaleData(localeDe, 'de');\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { SusaComponent } from './shared/sap-data-table/susa/susa.component';\r\nimport { PaymentAnalysisComponent } from './shared/analysis/payment-analysis/payment-analysis.component';\r\nimport { HighlightPipe } from './shared/pipes/highlight.pipe';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport { PaymentAnalysisDetailsComponent } from './shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component';\r\nimport { DueDateComponent } from './shared/analysis/payment-analysis/due-date/due-date.component';\r\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\r\n\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { DueDateDetailsComponent } from './shared/analysis/payment-analysis/due-date-details/due-date-details.component';\r\nimport { CreditorAnalysisComponent } from './shared/analysis/creditor-analysis/creditor-analysis.component';\r\nimport { CreditorAnalysisDetailsComponent } from './shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component';\r\nimport { AccountTypeComponent } from './admin/account-type/account-type.component';\r\nimport { OpeningBalanceComponent } from './shared/liquidity/opening-balance/opening-balance.component';\r\nimport { CreditLineComponent } from './shared/liquidity/credit-line/credit-line.component';\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from './shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component';\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    FooterComponent,\r\n    ImportComponent,\r\n    UnauthComponent,\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    AdminRegistrationComponent,\r\n    ResetPasswordComponent,\r\n    LayoutComponent,\r\n    SAPDataTableComponent,\r\n    ResetPasswordNewUserComponent,\r\n    ProcedureRegistrationComponent,\r\n    AmountAnalysisComponent,\r\n    OrganisationRegistrationComponent,\r\n    UserRegistrationComponent,\r\n    UserEditComponent,\r\n    UserDashboardComponent,\r\n    OrganisationUsersComponent,\r\n    ProcedureEditComponent,\r\n    AdminDashboardComponent,\r\n    DocumentTypeComponent,\r\n    AmountAnalysisDetailsComponent,\r\n    TextAnalysisComponent,\r\n    TextAnalysisDetailsComponent,\r\n    SusaComponent,\r\n    PaymentAnalysisComponent,\r\n    HighlightPipe,\r\n    PaymentAnalysisDetailsComponent,\r\n    DueDateComponent,\r\n    DueDateDetailsComponent,\r\n    CreditorAnalysisComponent,\r\n    CreditorAnalysisDetailsComponent,\r\n    AccountTypeComponent,\r\n    OpeningBalanceComponent,\r\n    CreditLineComponent,\r\n    FreeLiquidityComponent,\r\n    FreeLiquidityDetailsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MenubarModule,\r\n    DividerModule,\r\n    StepsModule,\r\n    ChartModule,\r\n    CheckboxModule,\r\n    ToastModule,\r\n    MenubarModule,\r\n    TableModule,\r\n    FileUploadModule,\r\n    CalendarModule,\r\n    MultiSelectModule,\r\n    TooltipModule,\r\n    TreeModule,\r\n    SelectButtonModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    DropdownModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    SidebarModule,\r\n    ListboxModule,\r\n    PanelMenuModule,\r\n    MenuModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    ProgressSpinnerModule,\r\n    DialogModule,\r\n    DynamicDialogModule,\r\n    ContextMenuModule,\r\n    AccordionModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    PasswordModule,\r\n    MegaMenuModule,\r\n    AutoCompleteModule,\r\n    InputNumberModule,\r\n    BreadcrumbModule\r\n  ],\r\n  providers: [MessageService, AuthGuard, {\r\n    provide: LOCALE_ID,\r\n    useValue: 'de'\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptor,\r\n    multi: true\r\n  },\r\n  BnNgIdleService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleServiceService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getRoles() {\r\n     return this._http.get<any>(this._thisURL + '/roles');\r\n  }\r\n  getmanagerRoleId() {\r\n    return this._http.get<any>(this._thisURL + '/roles/getManagerId');\r\n }\r\n\r\n addProcedure(procedure) {\r\n   return this._http.post<any>(this._thisURL + '/procedures', procedure);\r\n}\r\n\r\neditProcedure(procedure) {\r\n   return this._http.put<any>(this._thisURL + '/procedures/edit', procedure);\r\n}\r\n}\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\nexport class dataTableColumns {\r\n\r\n  field?: string;\r\n  header?: string;\r\n  align?: string;\r\n  width?: number;\r\n\r\n  constructor(field: string, header: string, align: string = 'center', width: number = 150) {\r\n    this.field = field;\r\n    this.header = header;\r\n    this.align = align;\r\n    this.width = width;\r\n  }\r\n\r\n  static async getDataTableColumns(translateService: TranslateService): Promise<dataTableColumns[]> {\r\n    let result: dataTableColumns[] = [];\r\n    result.push(new dataTableColumns(\"client\", await translateService.get(\"DataTableColumns.client\").toPromise()));\r\n    result.push(new dataTableColumns(\"companyCode\", await translateService.get(\"DataTableColumns.companyCode\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber\", await translateService.get(\"DataTableColumns.documentNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentDate\", await translateService.get(\"DataTableColumns.documentDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountType\", await translateService.get(\"DataTableColumns.accountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountType\", await translateService.get(\"DataTableColumns.contraAccountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountNumber\", await translateService.get(\"DataTableColumns.accountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountName\", await translateService.get(\"DataTableColumns.accountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountNumber\", await translateService.get(\"DataTableColumns.contraAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountName\", await translateService.get(\"DataTableColumns.contraAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"balance\", await translateService.get(\"DataTableColumns.balance\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"debitAmount\", await translateService.get(\"DataTableColumns.debitAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"creditAmount\", await translateService.get(\"DataTableColumns.creditAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"stackNumber\", await translateService.get(\"DataTableColumns.stackNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"recordNumber\", await translateService.get(\"DataTableColumns.recordNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"fiscalYear\", await translateService.get(\"DataTableColumns.fiscalYear\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmount\", await translateService.get(\"DataTableColumns.taxAmount\").toPromise(), 'right'));\r\n    //result.push(new dataTableColumns(\"identificationNumber\", await translateService.get(\"DataTableColumns.identificationNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"executionDate\", await translateService.get(\"DataTableColumns.executionDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"dueDate\", await translateService.get(\"DataTableColumns.dueDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"ledgerId\", await translateService.get(\"DataTableColumns.ledgerId\").toPromise()));\r\n    result.push(new dataTableColumns(\"assignment\", await translateService.get(\"DataTableColumns.assignment\").toPromise()));\r\n    result.push(new dataTableColumns(\"reference\", await translateService.get(\"DataTableColumns.reference\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentType\", await translateService.get(\"DataTableColumns.documentType\").toPromise()));\r\n   // result.push(new dataTableColumns(\"documentTypeNew\", await translateService.get(\"DataTableColumns.documentTypeNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingDate\", await translateService.get(\"DataTableColumns.postingDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountNumber\", await translateService.get(\"DataTableColumns.GLAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountName\", await translateService.get(\"DataTableColumns.GLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debtorNumber\", await translateService.get(\"DataTableColumns.debtorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"debtorName\", await translateService.get(\"DataTableColumns.debtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"creditorNumber\", await translateService.get(\"DataTableColumns.creditorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"creditorName\", await translateService.get(\"DataTableColumns.creditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountNo\", await translateService.get(\"DataTableColumns.contraAccountGLAccountNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountName\", await translateService.get(\"DataTableColumns.contraAccountGLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorNo\", await translateService.get(\"DataTableColumns.contraAccountDebtorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorName\", await translateService.get(\"DataTableColumns.contraAccountDebtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorNo\", await translateService.get(\"DataTableColumns.contraAccountCreditorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorName\", await translateService.get(\"DataTableColumns.contraAccountCreditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debitCredit\", await translateService.get(\"DataTableColumns.debitCredit\").toPromise()));\r\n    result.push(new dataTableColumns(\"balanceTransactionCurrency\", await translateService.get(\"DataTableColumns.balanceTransactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber2\", await translateService.get(\"DataTableColumns.documentNumber2\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"bookingAmount\", await translateService.get(\"DataTableColumns.bookingAmount\").toPromise()));\r\n    result.push(new dataTableColumns(\"exchangeRate\", await translateService.get(\"DataTableColumns.exchangeRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"transactionCurrency\", await translateService.get(\"DataTableColumns.transactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter1\", await translateService.get(\"DataTableColumns.costCenter1\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter2\", await translateService.get(\"DataTableColumns.costCenter2\").toPromise()));\r\n    result.push(new dataTableColumns(\"salesTaxKey\", await translateService.get(\"DataTableColumns.salesTaxKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"textPosting\", await translateService.get(\"DataTableColumns.textPosting\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxRate\", await translateService.get(\"DataTableColumns.taxRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"euTaxRate\", await translateService.get(\"DataTableColumns.euTaxRate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"costQuantityField\", await translateService.get(\"DataTableColumns.costQuantityField\").toPromise()));\r\n    result.push(new dataTableColumns(\"identifierBalanceCarryforward\", await translateService.get(\"DataTableColumns.identifierBalanceCarryforward\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingPeriod\", await translateService.get(\"DataTableColumns.postingPeriod\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"differentTaxationType\", await translateService.get(\"DataTableColumns.differentTaxationType\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentLink\", await translateService.get(\"DataTableColumns.documentLink\").toPromise()));\r\n    result.push(new dataTableColumns(\"cashDiscount\", await translateService.get(\"DataTableColumns.cashDiscount\").toPromise()));\r\n    result.push(new dataTableColumns(\"textHeader\", await translateService.get(\"DataTableColumns.textHeader\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingKey\", await translateService.get(\"DataTableColumns.postingKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmountDebit\", await translateService.get(\"DataTableColumns.taxAmountDebit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"taxAmountCredit\", await translateService.get(\"DataTableColumns.taxAmountCredit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"applicationDocument\", await translateService.get(\"DataTableColumns.applicationDocument\").toPromise()));\r\n    result.push(new dataTableColumns(\"applicationDate\", await translateService.get(\"DataTableColumns.applicationDate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"applicationDateNew\", await translateService.get(\"DataTableColumns.applicationDateNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"generalReversal\", await translateService.get(\"DataTableColumns.generalReversal\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation1\", await translateService.get(\"DataTableColumns.typeDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation1\", await translateService.get(\"DataTableColumns.contentDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation2\", await translateService.get(\"DataTableColumns.typeDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation2\", await translateService.get(\"DataTableColumns.contentDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation3\", await translateService.get(\"DataTableColumns.typeDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation3\", await translateService.get(\"DataTableColumns.contentDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation4\", await translateService.get(\"DataTableColumns.typeDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation4\", await translateService.get(\"DataTableColumns.contentDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation5\", await translateService.get(\"DataTableColumns.typeDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation5\", await translateService.get(\"DataTableColumns.contentDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation6\", await translateService.get(\"DataTableColumns.typeDocumentInformation6\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation6\", await translateService.get(\"DataTableColumns.contentDocumentInformation6\").toPromise()));\r\n    return result;\r\n    \r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../service/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private _messageService: MessageService, private _authService: AuthService, private _router: Router, public _translateService: TranslateService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n    localStorage.setItem('lang', browserLang);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   this._translateService.get('LOGIN.welcomeMsg').subscribe(elem => {\r\n      // console.log(elem)\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const data = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    this._authService\r\n      .login(data)\r\n      .subscribe(res => {\r\n\r\n        if (res && res.user.userinfo) {\r\n          const userInfo = res.user.userinfo;\r\n          const fullName = userInfo.firstname + ' ' + userInfo.lastname;\r\n          const role = userInfo.Role;\r\n          const username = userInfo.username;\r\n          const OrganisationId = userInfo.OrganisationId\r\n        \r\n          localStorage.setItem('username', username);\r\n          localStorage.setItem('role', role);\r\n          localStorage.setItem('full_name', fullName);\r\n          localStorage.setItem('organisationId', OrganisationId);\r\n          localStorage.setItem('token', res.token);\r\n        }\r\n\r\n        if(localStorage.getItem('role') === \"Admin\") {\r\n          this._router.navigate(['/admin/dashboard']);\r\n        } else {\r\n          this._router.navigate(['/shared/user/procedures']);\r\n        }\r\n\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n\r\n      });\r\n\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","<div class=\"cardBody\">\r\n  <p-toast></p-toast>\r\n\r\n  <div class=\"p-grid p-mt-6 \">\r\n\r\n    <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\">\r\n      <div class=\"pages-body login-page p-d-flex p-flex-column\">\r\n        <div class=\"p-as-center p-mt-auto p-mb-auto\">\r\n          <div class=\"pages-panel card p-d-flex p-flex-column\">\r\n            <div class=\"pages-header p-px-3 p-py-1 loginLogoCss\">\r\n              <img src=\"assets/logo.jpg\" height=\"100\" width=\"100\">\r\n            </div>\r\n            <h3 class=\"fontStyle\"> {{'LOGIN.welcomeWord' | translate}} </h3>\r\n            <div class=\"pages-detail p-mb-6 p-px-6 fontStyle\"> {{'LOGIN.welcomeMsg' | translate}}</div>\r\n            <div class=\"input-panel p-d-flex p-flex-column p-px-3\">\r\n              <form (ngSubmit)=\"login()\">\r\n                <div class=\"p-inputgroup \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-envelope\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"username\" id=\"email\" type=\"text\" pinputText [(ngModel)]=\"username\"\r\n                      class=\"p-inputtext p-component p-filled\" placeholder=\"Email\" autofocus>\r\n                  </span>\r\n                </div>\r\n                <div class=\"p-inputgroup p-mt-5 p-mb-6 \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-lock\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"password\" id=\"password\" type=\"password\" pinputText [(ngModel)]=\"password\"\r\n                      class=\"p-inputtext p-component p-filled\"\r\n                      placeholder=\"{{'LOGIN.passwordPlaceholder' | translate}}\">\r\n\r\n                  </span>\r\n                </div>\r\n                <button pButton type=\"submit\" label=\"{{'LOGIN.loginButton' | translate}}\"\r\n                  class=\" fontStyle p-button-raised p-button-rounded buttonCss p-mb-4 p-px-3 p-button p-component p-ripple login-button\"\r\n                  ></button>\r\n              </form>\r\n            </div>\r\n            <a class=\"linkCss p-mb-4 fontStyle\"> {{'LOGIN.passowrdForgetLink' | translate}}</a>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Organisation } from \"../../shared/model/organisation\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-organisation-registration',\r\n  templateUrl: './organisation-registration.component.html',\r\n  styleUrls: ['./organisation-registration.component.sass']\r\n})\r\nexport class OrganisationRegistrationComponent implements OnInit {\r\n\r\n  organisation: Organisation = new Organisation();\r\n  id: number;\r\n  imageSrc: string | ArrayBuffer;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, public _translateService: TranslateService,\r\n    private _route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = +this._route.snapshot.paramMap.get('id');\r\n    if (this.id > 0) {\r\n      this._orgService\r\n        .getOne(this.id)\r\n        .subscribe(res => {\r\n          if (res.length > 0) {\r\n            this.organisation = res[0];\r\n          }\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          });\r\n        });\r\n    }\r\n\r\n  } // end of ngInit\r\n\r\n  UploadHandler(event) {\r\n    const selectedFiles: FileList = event.files;\r\n    this.organisation.logo = selectedFiles[0];\r\n    if (selectedFiles && selectedFiles[0]) {\r\n      const file = selectedFiles[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n\r\n      reader.readAsDataURL(file);\r\n  }\r\n  }\r\n\r\n  submitHandler() {\r\n\r\n    const formData: FormData = new FormData();\r\n    formData.append('logo', this.organisation.logo);\r\n    formData.append('data', JSON.stringify(this.organisation));\r\n\r\n    // if organisation has an id value, then the action is update\r\n    if (this.organisation && this.organisation.id > 0) {\r\n      this._orgService\r\n        .update(formData, this.organisation.id)\r\n        .subscribe(res => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation updated successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n    } else {\r\n      this._orgService\r\n        .insert(formData)\r\n        .subscribe(res => {\r\n          this.organisation = res;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation inserted successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n\r\n    } // end of if-else has an id\r\n  } // end of submit handler function\r\n\r\n\r\n\r\n  cancelHandle() {\r\n    this._router.navigate(['/admin/dashboard']);\r\n  }\r\n\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <h5 class=\"p-text-center\"> {{'Organisation_Registration.header' | translate}} </h5>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"name\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.name' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #name=\"ngModel\" name=\"name\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.name\">\r\n            <small *ngIf=\"name.invalid && name.touched \"\r\n              class=\"spanCss \">{{'Organisation_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.email' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #email=\"ngModel\" name=\"email\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.email\"\r\n              pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\">\r\n            <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \">\r\n              {{'Organisation_Registration.emailErrorMsg' | translate}}</small>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"street\"\r\n            class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{'Organisation_Registration.street' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #street=\"ngModel\" name=\"street\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.street\">\r\n            <small *ngIf=\"street.invalid && street.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.streetErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"houseNr\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.houseNr' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #houseNr=\"ngModel\" name=\"houseNr\" type=\"number\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.houseNr\">\r\n            <small *ngIf=\"houseNr.invalid && houseNr.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.houseNrErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.city' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #city=\"ngModel\" name=\"city\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.city\">\r\n            <small *ngIf=\"city.invalid && city.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.cityErrorMsg' | translate}}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.postcode' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #postCode=\"ngModel\" name=\"postCode\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.postCode\">\r\n            <small *ngIf=\"postCode.invalid && postCode.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.postcodeErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.country' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #country=\"ngModel\" name=\"country\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.country\">\r\n            <small *ngIf=\"country.invalid && country.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.countryErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"logo\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.logo' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-fileUpload name=\"logo\" name=\"logo\" \r\n              customUpload=\"true\" [auto]=\"true\" mode=\"basic\" accept=\"image/*\" styleClass=\"logoCss p-cancelButton \"\r\n              (uploadHandler)=\"UploadHandler($event)\" class=\"p-ripple\" [style]=\"{'width':'50px', 'padding': '8px'}\">\r\n            </p-fileUpload>\r\n            <div *ngIf=\"organisation.id && organisation.logo\" class=\"p-mt-2\">\r\n              <img src=\"{{organisation.logo}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n            <div *ngIf=\"!organisation.id && organisation.logo\" class=\"p-mt-2\">\r\n              <img src=\"{{imageSrc}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n\r\n\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"data\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"  *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}</th>\r\n          <th>{{'Account_Type.Action' | translate}}</th>\r\n        </tr>\r\n\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field != 'StartingBalance' && col.field != 'StartingBalanceDate'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalance'\">\r\n              {{ row[col.field] | currency:'EUR':''}}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalanceDate'\">\r\n                {{ row[col.field] | date:'dd.MM.yyyy'}}\r\n              </span>\r\n\r\n            <p-inputNumber *ngIf=\"row.isEditable && col.field == 'StartingBalance'\" [(ngModel)]=\"row.StartingBalance\"\r\n              mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\" [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{'width': '50%'}\" \r\n              size='10'>\r\n            </p-inputNumber>\r\n\r\n            <p-calendar  *ngIf=\"row.isEditable && col.field == 'StartingBalanceDate'\"\r\n            [(ngModel)]=\"row.StartingBalanceDate\" [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\" \r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OpeningBalance } from '../../model/openingBalance';\r\nimport { LiquidityService } from \"../../service/liquidity.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-opening-balance',\r\n  templateUrl: './opening-balance.component.html',\r\n  styleUrls: ['./opening-balance.component.sass']\r\n})\r\nexport class OpeningBalanceComponent implements OnInit {\r\n\r\n  data: OpeningBalance[] = new Array();\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  cols: TableColumn[];\r\n  originalOpeningBalance: number;\r\n  originalOpeningBalanceDate: Date;\r\n\r\n\r\n  constructor(private _liquidityService: LiquidityService, private _messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalance',\r\n        field: 'StartingBalance',\r\n        width: '250',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalanceDate',\r\n        field: 'StartingBalanceDate',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n    this._liquidityService\r\n      .getOpeningBalance(this.orgId, this.prcId)\r\n      .subscribe(res => {\r\n        res.forEach(val => {\r\n          val.StartingBalanceDate = new Date(val.StartingBalanceDate);\r\n        })\r\n        this.data = res;\r\n\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  editRow(row: OpeningBalance) {\r\n    this.data.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalOpeningBalance = row.StartingBalance;\r\n    this.originalOpeningBalanceDate = row.StartingBalanceDate;\r\n  }\r\n\r\n  save(row: OpeningBalance) {\r\n    this._liquidityService\r\n    .updateOpeningBalance(this.orgId, this.prcId, row)\r\n    .subscribe(res => {\r\n      row.isEditable = false;\r\n      let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n      this._messageService.add({\r\n        severity: 'success',\r\n        summary: 'DONE!',\r\n        detail: `opening balance is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n      });\r\n    }, er => {\r\n      this._messageService.add({\r\n        severity: 'error',\r\n        summary: 'ERROR!',\r\n        detail: er.error.error\r\n      });\r\n    });\r\n  }\r\n\r\n  cancel(row: OpeningBalance) {\r\n    row.StartingBalance = this.originalOpeningBalance;\r\n    row.StartingBalanceDate = this.originalOpeningBalanceDate;\r\n    row.isEditable = false;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.sass']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{name:'Manager', value: 2}, {name:'User', value: 3}];\r\n  \r\n\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.id = +localStorage.getItem('selectedUser_userId');\r\n    this.userModel.RoleId = +localStorage.getItem('selectedUser_roleId');\r\n    this.userModel.username = localStorage.getItem('selectedUser_username');\r\n    this.userModel.email = localStorage.getItem('selectedUser_email');\r\n    this.userModel.title = localStorage.getItem('selectedUser_title');\r\n    this.userModel.firstname = localStorage.getItem('selectedUser_firstname');\r\n    this.userModel.lastname = localStorage.getItem('selectedUser_lastname');\r\n    this.userModel.mobileNumber = localStorage.getItem('selectedUser_mobileNr');\r\n    this.userModel.street = localStorage.getItem('selectedUser_street');\r\n    this.userModel.housenumber = parseFloat(localStorage.getItem('selectedUser_houseNr'));\r\n    this.userModel.postCode = localStorage.getItem('selectedUser_postcode');\r\n    this.userModel.city = localStorage.getItem('selectedUser_city');\r\n    this.userModel.country = localStorage.getItem('selectedUser_country');\r\n  }\r\n\r\n  submitHandler() {\r\n    this._userService.editUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Updated successfully!',\r\n          detail: 'Updated successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/shared/user/users']); \r\n    localStorage.removeItem(\"selectedUser_userId\");\r\n    localStorage.removeItem(\"selectedUser_roleId\");\r\n    localStorage.removeItem(\"selectedUser_username\");\r\n    localStorage.removeItem(\"selectedUser_email\");\r\n    localStorage.removeItem(\"selectedUser_title\");\r\n    localStorage.removeItem(\"selectedUser_firstname\");\r\n    localStorage.removeItem(\"selectedUser_lastname\");\r\n    localStorage.removeItem(\"selectedUser_mobileNr\");\r\n    localStorage.removeItem(\"selectedUser_street\");\r\n    localStorage.removeItem(\"selectedUser_houseNr\");\r\n    localStorage.removeItem(\"selectedUser_postcode\");\r\n    localStorage.removeItem(\"selectedUser_city\");\r\n    localStorage.removeItem(\"selectedUser_country\");\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.editHeader' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown  name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","export const environment = {\r\n  production: false,\r\n  //baseUrl: 'http://localhost:8000/api/',\r\n    baseUrl: 'http://venalytics.de:8000/api/',\r\n  // 'https://www.openthesaurus.de/synonyme/search?format=application/json&q='\r\n  // autocomplete: 'https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=deen&query='\r\n};\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h3 class=\"p-text-center\">{{accountName}}</h3>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <!-- <div class=\"card\"> -->\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"detailsOptions\" (onChange)=\"changeData($event.value)\" optionLabel=\"name\"\r\n        optionValue=\"value\" [(ngModel)]=\"detailsOption\">\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\" [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\"\r\n      scrollHeight=\"350px\" [style]=\"{width:'100%'}\" [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\" label=\"{{ 'TextAnalysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"{{ 'TextAnalysis.export' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n          </div>\r\n\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <!-- <th> -->\r\n          <!-- <p-tableHeaderCheckbox></p-tableHeaderCheckbox> -->\r\n          <!-- </th> -->\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n\r\n        </tr>\r\n        <tr>\r\n          <!-- <th></th> -->\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input *ngIf=\"col.field != 'textRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n             pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{width:'90%'}\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\" />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i>\r\n              <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"row.textRelevantComment\" style=\"width: 100%; padding: 5px;\"\r\n                  (change)=\"commentChanged(row)\">\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.textRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\">\r\n              {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='reference' || col.field=='textPosting' || col.field=='textHeader'\"\r\n              [innerHTML]=\"row[col.field] | highlight\" pTooltip=\"{{ row[col.field] }}\">\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='reference' && col.field!='textPosting' && col.field!='textHeader' && col.field != 'textRelevantComment' && col.field != 'textRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" [resizableColumns]=\"true\" dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\" styleClass=\"p-datatable-gridlines\" [loading]=\"waiting\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [style]=\"{width:'100%'}\" [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\" [lazy]=\"true\" (onLazyLoad)=\"sort($event)\">\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\" label=\"{{ 'TextAnalysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n<!--             <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"></button>\r\n -->         \r\n             <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"{{ 'TextAnalysis.export' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate}}\" tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"></button>\r\n          </div>\r\n          <div class=\"p-col-7\">\r\n            <!-- Limit options -->\r\n            <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n            <!-- Go to First page -->\r\n            <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n            <!-- Go previous -->\r\n            <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\" class=\" p-mr-2\" pTooltip=\"{{'Data_Table.previous' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n            <!-- Page number -->\r\n            <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\" [disabled]=\"true\"\r\n              (change)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n            <!-- Go to next Page -->\r\n            <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n            <!-- Go to last page -->\r\n            <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"></button>\r\n\r\n            <!-- dispalyed data of total count -->\r\n            {{displayedDataCount}} of {{totalCount}}\r\n            <!-- Clear filter -->\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n        </div>\r\n     \r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input *ngIf=\"col.field != 'textRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText type=\"text\" [(ngModel)]=\"backCriteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i class=\"pi pi-star-o \" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i>\r\n              <i class=\"pi pi-star \" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"row.textRelevantComment\" style=\"width: 100%; padding: 5px;\"\r\n                  (change)=\"commentChanged(row)\">\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.textRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\">\r\n              {{ row[col.field]  | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='reference' || col.field=='textPosting' || col.field=='textHeader'\"\r\n              [innerHTML]=\"row[col.field] | highlight\" pTooltip=\"{{ row[col.field] }}\">\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='reference' && col.field!='textPosting' && col.field!='textHeader' && col.field != 'textRelevantComment' && col.field != 'textRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n  <!-- </div> -->\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TextAnalysisDetails } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-details',\r\n  templateUrl: './text-analysis-details.component.html',\r\n  styleUrls: ['./text-analysis-details.component.sass']\r\n})\r\nexport class TextAnalysisDetailsComponent implements OnInit {\r\n\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: TextAnalysisDetails[] = new Array();\r\n  allRecordData: TextAnalysisDetails[] = new Array();\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: TextAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number; }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n    // for pagination\r\n    backCriteria: any;\r\n    pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n    limit: number = 25;\r\n    pageNr: number = 1;\r\n    maxPageNr: number = 0;\r\n    filtersNo: number = 0;\r\n    totalCount: any;\r\n    displayedDataCount: any;\r\n  accountName: string;\r\n    // for pagination ends\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService, private _translateService: TranslateService, private _exportDataService: ExportDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/analysis/text', routerLinkActiveOptions: { exact: true } },\r\n      { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n    ];\r\n    \r\n    this.home = { icon: 'pi pi-home', label: 'Data', routerLink: '/shared/data' };\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId? this.orgId : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId ? this.prcId : +localStorage.getItem('currentProcedureId');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0\r\n    };\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'Marked', value: 2 },\r\n      { name: 'All', value: 3 }\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.reference',\r\n        field: 'reference',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textPosting',\r\n        field: 'textPosting',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textHeader',\r\n        field: 'textHeader',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'textRelevant',\r\n        width: '6',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'textRelevantComment',\r\n        width: '35',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        if (this.data.length > 0) {\r\n          this.accountName = this.data[0].accountName;\r\n        }\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/analysis/text/']);\r\n  }\r\n\r\n  async exportExcel() {\r\n\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key) && key != 'id' && key != 'procedureId') {\r\n          let translatedKey = await this._translateService.get('DataTableColumns.' + key).toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (element[key] &&\r\n            (key == 'balance' || key == 'debitAmount' || key == 'creditAmount' || key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' || key == 'taxAmountCredit' || key == 'StartingBalance')) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n              }\r\n\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (element[key] &&\r\n            (key == 'documentDate' || key == 'postingDate' || key == 'dueDate' || key == 'dueDateNew' ||\r\n              key == 'executionDate' || key == 'applicationDate' || key == 'StartingBalanceDate')) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString('de-DE', {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n              });\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n          }\r\n          // end of formatting\r\n          \r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = { Sheets: { 'text_analysis': worksheet }, SheetNames: ['text_analysis'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"text_analysis\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  selectRow(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    if (row.textRelevant) {\r\n      row.textRelevant = false;\r\n      row.textRelevantComment = '';\r\n    } else {\r\n      row.textRelevant = true;\r\n    }\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  commentChanged(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map(item => item.id).indexOf(row.id);\r\n    row.textRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantTextAnalysis(this.orgId, this.prcId, this.accountNumber, this.selected)\r\n      .subscribe(res => {\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: \"records set as relevant successfully!\"\r\n        });\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetailsRelevant(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key]) {\r\n        delete this.backCriteria[key];\r\n      }\r\n     }\r\n    this._analysisService\r\n      .getTextAnalysisDetailsByAccount(this.orgId, this.prcId, this.accountNumber, this.backCriteria)\r\n      .subscribe(res => {\r\n        this.allRecordData = res.rows;\r\n        this.totalCount = res.count;\r\n        this.displayedDataCount = this.allRecordData.length;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.backCriteria.orderBy = event.sortField;\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    if (!this.waiting)\r\n      this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = {...this.backCriteria};\r\n    criteriaWithLang['lang'] = lang;\r\n    this._exportDataService\r\n      .exportXLSX('text_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        url => {\r\n          // console.log(url);\r\n          window.open(url.toString(), \"_blank\");\r\n        },\r\n        (error) => console.log(error),\r\n      );\r\n  }\r\n\r\n\r\n// for pagination starts\r\n\r\nfilterChangeBack(query, colName): void {\r\n  this.getAllByAccount();\r\n}\r\n\r\nlimitChange(e) {\r\n  this.limit = e.value\r\n  this.backCriteria.offset = 0;\r\n  this.backCriteria.limit = this.limit;\r\n  this.pageNr = 1;\r\n  this.getAllByAccount();\r\n}\r\n\r\nfirstPage() {\r\n  this.pageNr = 1;\r\n  this.backCriteria.offset = 0;\r\n  this.getAllByAccount();\r\n}\r\n\r\nnextPage() {\r\n  ++this.pageNr;\r\n  if (this.pageNr > this.maxPageNr) return;\r\n  this.backCriteria.offset += +this.limit;\r\n\r\n  this.getAllByAccount();\r\n}\r\n\r\n\r\nlastPage() {\r\n  this.pageNr = this.maxPageNr;\r\n  this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n  this.getAllByAccount();\r\n}\r\n\r\npreviousPage() {\r\n  --this.pageNr;\r\n  if (this.pageNr <= 0) return;\r\n  this.backCriteria.offset -= +this.limit;\r\n  this.getAllByAccount();\r\n}\r\n\r\npageNrChange(value) {\r\n  this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n  this.getAllByAccount();\r\n}\r\n\r\nclearFilter() {\r\n  this.backCriteria = {\r\n    limit: this.limit,\r\n    offset: 0\r\n  };\r\n  this.pageNr = 1;\r\n  this.getAllByAccount();\r\n}\r\n// for pagination ends\r\n\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentAnalysis, PaymentData } from '../../model/paymentAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n@Component({\r\n  selector: 'app-payment-analysis',\r\n  templateUrl: './payment-analysis.component.html',\r\n  styleUrls: ['./payment-analysis.component.sass']\r\n})\r\nexport class PaymentAnalysisComponent implements OnInit {\r\n\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  specificAccountData: any;\r\n  data: PaymentData[];\r\n  blueData: any[] = new Array();\r\n  RedData: any[] = new Array();\r\n  GreenData: any[] = new Array();\r\n  specificAccountBlueData: any[] = new Array();\r\n  specificAccountRedData: any[] = new Array();\r\n  specificAccountGreenData: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  ready: boolean = false;\r\n  accounts: any[] = new Array();\r\n  blueAccounts: any[] = new Array();\r\n  top10Blue: any[] = new Array();\r\n  greenAccounts: any[] = new Array();\r\n  redAccounts: any[] = new Array();\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  procedureName: string;\r\n  top10Red: any[];\r\n  top10Green: any[];\r\n  top10: number;\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  top10Cols: TableColumn[];\r\n  accountsCols: TableColumn[];\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  selectedMaxAccountNumber: string;\r\n  selectedMaxAccount: any;\r\n  @ViewChild('chart') chart: any;\r\n  selectedMaxAccountName: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  blue: string ;\r\n  red: string ;\r\n  green: string ;\r\n\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService, private _router: Router,\r\n    private prcService: ProcedureService) { \r\n\r\n    }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.get('PaymentAnalysis').subscribe( elem => {\r\n      this.blue = elem.blue;\r\n      this.red = elem.red ; \r\n      this.green = elem.green;\r\n\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/analysis/payment' }\r\n      ];\r\n  \r\n      this.home = { icon: 'pi pi-home',  label: elem.data, routerLink: '/shared/data' };\r\n\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n  \r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                // debugger;\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              }\r\n            }\r\n          }],\r\n        }\r\n      };\r\n  \r\n      this.top10 = 1;\r\n  \r\n      this.paymentOptions = [\r\n        { name: this.blue, value: 1, color: 'rgb(100,100,255)' },\r\n        { name: this.red, value: 2, color: 'rgb(255,100,100)' },\r\n        { name: this.green, value: 3, color: 'rgb(100,255,100)' }\r\n      ];\r\n  \r\n      this.top10Cols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'center'\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left'\r\n\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.sum',\r\n          field: 'value',\r\n          align: 'right'\r\n\r\n        },\r\n      ];\r\n  \r\n      this.accountsCols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'center'\r\n\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left'\r\n\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.blue',\r\n          field: 'blue',\r\n          align: 'right'\r\n\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.red',\r\n          field: 'red',\r\n          align: 'right'\r\n\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.green',\r\n          field: 'green',\r\n          align: 'right'\r\n\r\n        },\r\n      ];\r\n  \r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array()\r\n      };\r\n  \r\n      this.basicData.datasets.push({\r\n        label: this.blue ,\r\n        backgroundColor: `rgb(100,100,255)`,\r\n        data: this.blueData\r\n      },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.RedData\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.GreenData\r\n        });\r\n  \r\n      this.specificAccountData = {\r\n        labels: this.labels,\r\n        datasets: new Array()\r\n      };\r\n  \r\n      this.specificAccountData.datasets.push({\r\n        label: this.blue,\r\n        backgroundColor: `rgb(100,100,255)`,\r\n        data: this.specificAccountBlueData\r\n      },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.specificAccountRedData\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.specificAccountGreenData\r\n        });\r\n    })\r\n\r\n\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._analysisService\r\n      .getPaymentAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(res => {\r\n        this.data = res.data.res;\r\n        this.accounts = res.data.accounts;\r\n        this.startDate = res.dateRange[0].mindate;\r\n        this.endDate = res.dateRange[0].maxdate;\r\n\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          const element = this.data[i];\r\n\r\n          this.labels.push(element.monthName + '-' + element.yearName);\r\n          this.blueData.push(Math.abs(element.blue.value));\r\n          this.GreenData.push(Math.abs(element.green.value));\r\n          this.RedData.push(Math.abs(element.red.value));\r\n        }\r\n\r\n        // get top 10\r\n        this.accounts.sort((a, b) => Math.abs(b.blue) - Math.abs(a.blue));\r\n        this.top10Blue = this.accounts.slice(0, 10);\r\n        this.accounts.sort((a, b) => Math.abs(b.red) - Math.abs(a.red));\r\n        this.top10Red = this.accounts.slice(0, 10);\r\n        this.accounts.sort((a, b) => Math.abs(b.green) - Math.abs(a.green));\r\n        this.top10Green = this.accounts.slice(0, 10);\r\n        // debugger;\r\n        this.ready = true;\r\n        this.tempData = [...this.accounts];\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n\r\n    // if (this.selectedProcedure && +this.selectedProcedure > 0) {\r\n    //   this.prcService\r\n    //     .getById(+this.selectedProcedure)\r\n    //     .subscribe(prc => {\r\n    //       this.procedureName = prc && prc.length > 0 ? prc[0].name : \"\";\r\n    //     }, er => { });\r\n    // }\r\n  } // end of init function\r\n\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate(['/analysis/payment/' + this.selectedOrganisation + '/' + this.selectedProcedure + '/' + row.accountNumber]);\r\n  }\r\n\r\n  goToDueDate() {\r\n    this._router.navigate(['/analysis/due-date']);\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.accounts = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.accounts = this.accounts.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  onRowSelect(event): void {\r\n    // debugger;\r\n\r\n    this.selectedMaxAccountNumber = event.data.accountNumber;\r\n    this.selectedMaxAccountName = event.data.accountName;\r\n\r\n    // for each month\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const element = this.data[i];\r\n      // for each account\r\n      if (element.blue.accounts) {\r\n        let total = 0;\r\n        element.blue.accounts.forEach(b => {\r\n          // if the account is selected account add the value to the total\r\n          if (b.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += b.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountBlueData[i] = Math.abs(total);\r\n      }\r\n      if (element.red.accounts) {\r\n        let total = 0;\r\n        element.red.accounts.forEach(r => {\r\n          // if the account is selected account add the value to the total\r\n          if (r.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += r.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountRedData[i] = Math.abs(total);\r\n      }\r\n      if (element.green.accounts) {\r\n        let total = 0;\r\n        element.green.accounts.forEach(g => {\r\n          // if the account is selected account add the value to the total\r\n          if (g.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += g.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountGreenData[i] = Math.abs(total);\r\n      }\r\n    }\r\n    this.chart.refresh();\r\n    // this.chart.reinit();\r\n  }\r\n\r\n  onRowUnselect(event) {\r\n    this.selectedMaxAccountNumber = null;\r\n\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\" {{'DueDateAnalysis.label' | translate}}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"goToDueDate()\" pTooltip=\"{{'DueDateAnalysis.label' | translate}}\"\r\n      tooltipPosition=\"bottom\"></button>\r\n    <p-messages></p-messages>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"basicData && ready\">\r\n\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <span *ngIf=\"!selectedMaxAccountNumber\"> {{'PaymentAnalysis.allAccounts' | translate}} </span>\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!selectedMaxAccountNumber\">\r\n      </p-chart>\r\n      <span *ngIf=\"selectedMaxAccountNumber\"> {{ selectedMaxAccountName }} </span>\r\n      <p-chart #chart type=\"bar\" height=\"450\" [data]=\"specificAccountData\" [options]=\"basicOptions\"\r\n        *ngIf=\"selectedMaxAccountNumber\"></p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-6\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"top10\" optionLabel=\"name\" optionValue=\"value\">\r\n        <!-- <ng-template let-item>\r\n          <i [style]=\"'background: {{item.color}}'\"></i>\r\n        </ng-template> -->\r\n      </p-selectButton>\r\n    </span>\r\n    <p-table #dtmaxb dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Blue\" *ngIf=\"top10==1\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{col.header | translate}}\">\r\n              {{col.header | translate}}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='value'\">\r\n              {{ row.blue  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field!='value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxr dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Red\" *ngIf=\"top10==2\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{col.header | translate}}\">\r\n              {{col.header | translate}}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='value'\">\r\n              {{ row.red  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field!='value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxg dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Green\" *ngIf=\"top10==3\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{col.header | translate}}\">\r\n              {{col.header | translate}}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='value'\">\r\n              {{ row.green  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field!='value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\" [hidden]=\"!selectedProcedure\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"accountsCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\">\r\n          <col>\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pReorderableColumn pResizableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{col.header | translate}}\">\r\n              {{col.header | translate}}\r\n              <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th>Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field!='accountNumber' && col.field!='accountName'\">\r\n              {{ row[col.field]  | currency:'EUR':'' }}\r\n            </span>\r\n            <span *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Bar } from '../../model/bar';\r\nimport { Router } from '@angular/router';\r\nimport { TextAnalysis } from \"../../model/textAnalysis\";\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis',\r\n  templateUrl: './text-analysis.component.html',\r\n  styleUrls: ['./text-analysis.component.sass']\r\n})\r\nexport class TextAnalysisComponent implements OnInit {\r\n\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  data: TextAnalysis[] = new Array();\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(private _messageService: MessageService, private _analysisService: AnalysisService,\r\n    private _router: Router, private prcService: ProcedureService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/analysis/text' }\r\n    ];\r\n\r\n    this.home = { icon: 'pi pi-home', label: ' Data', routerLink: '/shared/data' };\r\n\r\n    this.waiting = true;\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        yAxes: [{\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'Count',\r\n          ticks: {\r\n            min: 0,\r\n          }\r\n        }\r\n        ]\r\n      }\r\n    };\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n\r\n    this._analysisService\r\n      .getTextAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = [...this.data];\r\n        this.basicData = {\r\n          labels: ['Total Count'],\r\n          datasets: new Array()\r\n        };\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          const element = this.data[i];\r\n          this.basicData.datasets.push(new Bar(element.accountName, `rgb(${Math.random() * 25500 % 255}, ${Math.random() * 25500 % 255},${Math.random() * 25500 % 255})`, element.totlaCount));\r\n        }\r\n        this.waiting = false;\r\n      }, er => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR',\r\n          life: 10000,\r\n          detail: \"There is an error occured please try again\"\r\n        });\r\n      });\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate(['/analysis/text/' + this.selectedOrganisation + '/' + this.selectedProcedure + '/' + row.accountNumber]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height= \"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedProcedure>0\">\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n    [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n      </colgroup>\r\n    </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{col.header | translate}}\r\n            </span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span  pTooltip=\"{{ row[col.field] }}\">\r\n            {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\" ></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.sass']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n<p>footer works!</p>\r\n<p>footer works!</p>\r\n<p>footer works!</p>\r\n<p>footer works!</p>\r\n<p>footer works!</p>\r\n","export class Bar {\r\n    label: string;\r\n    backgroundColor: string;\r\n    data: number[];\r\n\r\n    constructor(label: string, backgroundColor: string, data: number) {\r\n        this.label = label;\r\n        this.backgroundColor = backgroundColor;\r\n        this.data = new Array();\r\n        this.data.push(data);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-unauth',\r\n  templateUrl: './unauth.component.html',\r\n  styleUrls: ['./unauth.component.sass']\r\n})\r\nexport class UnauthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>  {{'Unauth.errorMsg' | translate}} </p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity',\r\n  templateUrl: './free-liquidity.component.html',\r\n  styleUrls: ['./free-liquidity.component.sass']\r\n})\r\nexport class FreeLiquidityComponent implements OnInit {\r\n\r\n  basicOptions: any;\r\n  basicData: any;\r\n  accounts: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  procedureName: string = \"\";\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  orgId: number;\r\n  prcId: number;\r\n  cols: TableColumn[] = new Array();\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  searching: boolean;\r\n\r\n  constructor(private _liquidityService: LiquidityService, private _messageService: MessageService,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n\r\n    this.items = [\r\n      { label: 'Free Liquidity', routerLink: '/liquidity/freeLiquidity' }\r\n    ];\r\n\r\n    this.home = { icon: 'pi pi-home', label: ' Data', routerLink: '/shared/data' };\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            minRotation: 40,\r\n            maxRotation: 90,\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 0,\r\n            callback: function (label, index, values) {\r\n              // debugger;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              label = currencyPipe.transform(label, 'EURO', '');\r\n              return label;\r\n            }\r\n          }\r\n        }],\r\n      }\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Account Number',\r\n        field: 'accountNumber'\r\n      },\r\n      {\r\n        header: 'Account Name',\r\n        field: 'accountName'\r\n      },\r\n      {\r\n        header: 'Count',\r\n        field: 'count'\r\n      }\r\n    ];\r\n\r\n\r\n    this.getData();\r\n    \r\n\r\n\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this.searching = true;\r\n    this._liquidityService.getFreeLiquidity(this.orgId, this.prcId)\r\n      .subscribe(res => {\r\n        this.accounts = res.bankBalances.accounts;\r\n        this.tempData = res.bankBalances.accounts;\r\n        this.basicData = {\r\n          labels: res.bankBalances.labels,\r\n          datasets: [{\r\n            type: 'line',\r\n            label: 'Credit Lines',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: res.creditLines\r\n          }, {\r\n            type: 'line',\r\n            label: 'Free Liquidity',\r\n            fill: false,\r\n            data: res.freeLiquidity,\r\n            borderColor: '#E5A58B',\r\n            borderWidth: 2\r\n          }, {\r\n            type: 'bar',\r\n            label: 'Bank Balances',\r\n            backgroundColor: '#88FF88',\r\n            borderColor: '#58dF58',\r\n            data: res.bankBalances.bankBalances\r\n          }]\r\n        };\r\n        this.searching = false;\r\n      }, er => {\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.accounts = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.accounts = this.accounts.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate(['liquidity/freeLiquidity/details/' + row.accountNumber]);\r\n  }\r\n\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"400px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\" [hidden]=\"!prcId\">\r\n      <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"searching\"></p-progressBar>\r\n      <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\">\r\n            <col>\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{col.field}}\" pReorderableColumn pResizableColumn class=\"p-text-center\" *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{col.header | translate}}\">\r\n                {{col.header | translate}}\r\n                <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n              </span>\r\n            </th>\r\n            <th>Details</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n                *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr>\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{col.align}}\">\r\n              <!-- <span *ngIf=\"col.field!='accountNumber' && col.field!='accountName'\">\r\n                {{ row[col.field]  | currency:'EUR':'' }}\r\n              </span> -->\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataFilterService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get(params: any) {\r\n    return this._http.get<any>(this._thisURL + '/posting', { params: params });\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getManagers() {\r\n    return this._http.get<any>(this._thisURL + '/getManagers');\r\n }\r\n\r\n getProcedures(userId) {\r\n   return this._http.get<any>(this._thisURL + '/users/' + userId + '/procedures');\r\n }\r\n\r\n getUsers(userId) {\r\n  return this._http.get<any>(this._thisURL + '/users/' + userId + '/users');\r\n}\r\n\r\n}\r\n","\r\n\r\nexport class Procedures {\r\n    id: number;\r\n    OrganisationId: number;\r\n    name: string ='';\r\n    data:  boolean = false;\r\n    analysis: boolean = false;\r\n    dataSource: string ='';\r\n\r\n\r\n    // constructor(organisationId: number, name: string, data: boolean,analysis: boolean,dataSource: string) {\r\n    //     this.organisationId = organisationId;\r\n    //     this.name = name;\r\n    //     this.data = data;\r\n    //     this.analysis = analysis;\r\n    //     this.dataSource = dataSource;\r\n\r\n    // }\r\n\r\n    static setProcedure(procedureModel) {\r\n\r\n        let result: Procedures = procedureModel\r\n        return result\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  authorized = false;\r\n  roles: any;\r\n\r\n  constructor(private _authSrvc: AuthService, private _router: Router) { }\r\n\r\n  // canActivate(\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  //   return true;\r\n  // }\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    this.authorized = false;\r\n    if (this._authSrvc.isLoggedIn()) {\r\n      const currentUserRole = this._authSrvc.getRole();\r\n      \r\n      if (route.data.roles) {\r\n        for (let i = 0; i < route.data.roles.length; i++) {\r\n          if (route.data.roles[i] === currentUserRole) {\r\n            this.authorized = true;\r\n            break;\r\n          }\r\n        }\r\n        // console.log(this.authorized);\r\n        if (this.authorized === false) {\r\n          // console.log('unauthorized from authGuard!');\r\n          this._router.navigate(['/unauthorized']);\r\n        }\r\n        return this.authorized;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      this._router.navigate(['/unauthorized']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AmountAnalysis, AmountAnalysisDetails } from '../model/amountAnalysis';\r\nimport { TextAnalysis, TextAnalysisDetails } from '../model/textAnalysis';\r\nimport { PaymentAnalysis, PaymentAnalysisDetails, PaymentAnalysisDetailsData } from '../model/paymentAnalysis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalysisService {\r\n\r\n  _thisURL = environment.baseUrl + 'analysis/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAmountAnalysis(orgId: number, prcId: number, baseBalance: number): Observable<AmountAnalysis[]> {\r\n    return this._http.get<AmountAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/amount/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetails(orgId: number, prcId: number, accountNumber: string, baseBalance: number): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysis(orgId: number, prcId: number): Observable<TextAnalysis[]> {\r\n    return this._http.get<TextAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/text');\r\n  }\r\n\r\n  getTextAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber + '/relevant');\r\n  }\r\n\r\n  getTextAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: TextAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: TextAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getAmountAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: AmountAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: AmountAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  setRelevantTextAnalysis(orgId: number, prcId: number, accountNumber: string, records: TextAnalysisDetails[]): Observable<TextAnalysisDetails[]> {\r\n    return this._http.put<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber, records);\r\n  }\r\n\r\n  setRelevantAmountAnalysis(orgId: number, prcId: number, accountNumber: string, baseBalance: number, records: AmountAnalysisDetails[]): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.put<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance, records);\r\n  }\r\n\r\n  setRelevantPaymentAnalysis(orgId: number, prcId: number, accountNumber: string, records: PaymentAnalysisDetailsData[]): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.put<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber, records);\r\n  }\r\n\r\n  getPaymentAnalysis(orgId: number, prcId: number): Observable<PaymentAnalysis> {\r\n    return this._http.get<PaymentAnalysis>(this._thisURL + orgId + '/' + prcId + '/payment');\r\n  }\r\n\r\n  getPaymentAnalysisDetails(orgId: number, prcId: number, accountNumber: String): Observable<PaymentAnalysisDetails> {\r\n    return this._http.get<PaymentAnalysisDetails>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * get the relevant user for this account based on paymentRelevant field ignore other conditions\r\n   * because the user can set any record as relevant even if the record is not blue neither red...\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.get<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * Get All records for this account; you can use getAmountAnalysisDetailsByAccount\r\n   * return the same data but the difference in the comment and relative field\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: PaymentAnalysisDetailsData[] }> {\r\n    return this._http.get<{ count: number, rows: PaymentAnalysisDetailsData[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getDueDateAnalysis(orgId: number, prcId: number): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate');\r\n  }\r\n\r\n  getDueDateAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate/details/' + accountNumber);\r\n  }\r\n\r\n\r\n  getCreditorAnalysis(orgId: number, prcId: number, criteria: any): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor', { params: criteria });\r\n  }\r\n\r\n  getCreditorAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor/details/' + accountNumber);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ImportComponent } from \"./admin/import/import.component\";\r\nimport { UnauthComponent } from \"./shared/unauth/unauth.component\";\r\nimport { NotfoundComponent } from \"./shared/notfound/notfound.component\";\r\nimport { LoginComponent } from \"./shared/login/login.component\";\r\nimport { LayoutComponent } from './shared/layout/layout.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { SusaComponent } from \"./shared/sap-data-table/susa/susa.component\";\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { AmountAnalysisComponent } from \"./shared/analysis/amount-analysis/amount-analysis.component\";\r\nimport { AdminDashboardComponent } from \"./admin/admin-dashboard/admin-dashboard.component\";\r\nimport { UserRegistrationComponent } from \"./shared/user-registration/user-registration.component\";\r\nimport { UserEditComponent } from \"./shared/user-edit/user-edit.component\";\r\nimport { ProcedureEditComponent } from \"./admin/procedure-edit/procedure-edit.component\";\r\nimport { UserDashboardComponent } from \"./shared/user-dashboard/user-dashboard.component\";\r\nimport { OrganisationUsersComponent } from \"./shared/organisation-users/organisation-users.component\";\r\nimport { DocumentTypeComponent } from \"./admin/document-type/document-type.component\";\r\nimport { AmountAnalysisDetailsComponent } from \"./shared/analysis/amount-analysis/details/amount-analysis-details.component\";\r\nimport { TextAnalysisComponent } from \"./shared/analysis/text-analysis/text-analysis.component\";\r\nimport { TextAnalysisDetailsComponent } from \"./shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component\";\r\nimport { PaymentAnalysisComponent } from \"./shared/analysis/payment-analysis/payment-analysis.component\";\r\nimport { PaymentAnalysisDetailsComponent } from \"./shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component\";\r\nimport { DueDateComponent } from \"./shared/analysis/payment-analysis/due-date/due-date.component\";\r\nimport { DueDateDetailsComponent } from \"./shared/analysis/payment-analysis/due-date-details/due-date-details.component\";\r\nimport { CreditorAnalysisComponent } from \"./shared/analysis/creditor-analysis/creditor-analysis.component\";\r\nimport { CreditorAnalysisDetailsComponent } from \"./shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component\";\r\nimport { AccountTypeComponent } from \"./admin/account-type/account-type.component\";\r\nimport { OpeningBalanceComponent } from \"./shared/liquidity/opening-balance/opening-balance.component\";\r\nimport { CreditLineComponent } from \"./shared/liquidity/credit-line/credit-line.component\";\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from \"./shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  // {\r\n  //   path: 'admin', component: AdminComponent, canActivate: [AuthGuard], children: [\r\n  //     { path: 'import', component: ImportComponent, canActivate: [AuthGuard], data: { roles: ['ADMIN'] } },\r\n  //   ]\r\n  // },\r\n  { path: 'admin/admin/add', component: AdminRegistrationComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/organisation/add', component: OrganisationRegistrationComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/organisation/edit/:id', component: OrganisationRegistrationComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/procedure/add', component: ProcedureRegistrationComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/procedure/edit', component: ProcedureEditComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/dashboard', component: AdminDashboardComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/import', component: ImportComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'admin/document-type', component: DocumentTypeComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n\r\n  { path: 'shared/user/add', component: UserRegistrationComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager'] } },\r\n  { path: 'shared/user/edit', component: UserEditComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager'] } },\r\n  { path: 'shared/user/procedures', component: UserDashboardComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager'] } },\r\n  { path: 'shared/user/users', component: OrganisationUsersComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager'] } },\r\n  { path: 'shared/data', component: SAPDataTableComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'shared/data/susa', component: SusaComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n\r\n  { path: 'analysis/amount', component: AmountAnalysisComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/amount/:orgId/:prcId/:accountNumber/:baseBalance', component: AmountAnalysisDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/text', component: TextAnalysisComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/text/:orgId/:prcId/:accountNumber', component: TextAnalysisDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/payment', component: PaymentAnalysisComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/payment/:orgId/:prcId/:accountNumber', component: PaymentAnalysisDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/due-date', component: DueDateComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/due-date/deails/:accountNumber', component: DueDateDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/creditor', component: CreditorAnalysisComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'analysis/creditor/deails/:accountNumber', component: CreditorAnalysisDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n\r\n\r\n  { path: 'admin/accountType', component: AccountTypeComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'liquidity/openingBalance', component: OpeningBalanceComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'liquidity/creditLine', component: CreditLineComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'liquidity/freeLiquidity', component: FreeLiquidityComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n  { path: 'liquidity/freeLiquidity/details/:accountNumber', component: FreeLiquidityDetailsComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Manager', 'User'] } },\r\n\r\n  { path: 'unauthorized', component: UnauthComponent },\r\n  { path: 'resetPassword', component: ResetPasswordComponent },\r\n  { path: 'reset/:token', component: ResetPasswordNewUserComponent },\r\n  { path: '**', component: NotfoundComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OpeningBalance } from '../model/openingBalance';\r\nimport { CreditLine } from '../model/creditLine';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LiquidityService {\r\n\r\n  _thisURL = environment.baseUrl + 'liquidity/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getOpeningBalance(orgId: number, prcId: number): Observable<OpeningBalance[]> {\r\n    return this._http.get<OpeningBalance[]>(this._thisURL + orgId + '/' + prcId + '/openingBalance');\r\n  }\r\n\r\n  updateOpeningBalance(orgId: number, prcId: number, row: OpeningBalance): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/openingBalance', row);\r\n  }\r\n\r\n\r\n  getCreditLine(orgId: number, prcId: number): Observable<CreditLine[]> {\r\n    return this._http.get<CreditLine[]>(this._thisURL + orgId + '/' + prcId + '/creditLine');\r\n  }\r\n\r\n  updateCreditLine(orgId: number, prcId: number, row: CreditLine): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/creditLine', row);\r\n  }\r\n\r\n  getFreeLiquidity(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity');\r\n  }\r\n\r\n  getFreeLiquidityDetails(orgId: number, prcId: number, accountNumber: string) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/' + accountNumber);\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"cardBody\">\n    <p-toast></p-toast>\n    \n    <div class=\"p-grid p-mt-6 \">\n\n        <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\" >\n            <div class=\"pages-body login-page p-d-flex p-flex-column\">\n                <div class=\"p-as-center p-mt-auto p-mb-auto\">\n                    <div class=\"pages-panel card p-d-flex p-flex-column\">\n                        <div class=\"p-field p-grid\">\n                            <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password</label>\n                            <div class=\"p-col-12 p-md-10\">\n                                <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \n                                <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">password is required</small>\n                            </div>\n                        </div>\n                        <div class=\"p-field p-grid\">\n                            <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password confirmation</label>\n                            <div class=\"p-col-12 p-md-10\">\n                                <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \n                                <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">password is required</small>\n                            </div>\n                        </div>\n                        <div class=\"p-field p-grid\">\n                            <div class=\"p-xs-8 p-xs-offset-2 p-md-6 p-md-offset-3 \">\n                                <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component submitButtonCss p-filled\"   >\n                                    <span class=\"p-button-label\"> Submit </span>\n                                </button>\n                            </div>\n            \n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n\n</div>\n\n\n -->\n \n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2 \">\n    <div class=\"card cardBody\">\n        <p-toast></p-toast>\n        <div class=\"content \">\n            <div class=\"p-text-center p-mt-6 p-mb-4 titleFontStyle \">  {{'Password_Reset.header' | translate}} </div>\n            <form class=\"p-fluid \"  (ngSubmit)=\"submitHandle()\">\n    \n    \n                <div class=\"p-fluid\">\n    \n      \n                <div class=\"p-field p-grid\">\n                    <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.password' | translate}}</label>\n                    <div class=\"p-col-12 p-md-8\">\n                        <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \n                        <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\n                    </div>\n                </div>\n                <div class=\"p-field p-grid\">\n                    <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.passwordConfirm' | translate}}</label>\n                    <div class=\"p-col-12 p-md-8\">\n                        <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \n                        <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\n                    </div>\n                </div>\n\n                <div class=\"p-field p-grid\">\n                    <div class=\"p-xs-col-5  p-mr-4\">\n          \n                      <button pbutton pripple type=\"button\" label=\"cancel\"\n                        class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\n                      </button>\n                    </div>\n                    <div class=\"p-xs-col-5 \">\n                      <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\n                      </button>\n                    </div>\n          \n                  </div>\n            </div>\n            </form>\n        </div>\n\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../service/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router ,ActivatedRoute} from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-new-user',\r\n  templateUrl: './reset-password-new-user.component.html',\r\n  styleUrls: ['./reset-password-new-user.component.sass']\r\n})\r\nexport class ResetPasswordNewUserComponent implements OnInit {\r\n\r\n  passwordObj = {\r\n    selectedPassword : \"\",\r\n    confirmedPassword: \"\",\r\n  }\r\n  pass :string;\r\n  token:any ; \r\n  constructor(private _messageService: MessageService, private _authService: AuthService, private _router: Router,  private _route: ActivatedRoute, public _translateService: TranslateService) { }\r\n  ngOnInit(): void {\r\n    this._translateService.setDefaultLang('de');\r\n    this.token = this._route.snapshot.paramMap.get('token');\r\n    // console.log(this.token)\r\n  }\r\n\r\n  submitHandle() {\r\n    console.log(this.passwordObj)\r\n    if (this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword) {\r\n        let password = this.passwordObj.selectedPassword\r\n        this._authService\r\n        .resetPassword({password: password, token: this.token})\r\n        .subscribe(res => {\r\n          // if(res.message === \"successfully\"){\r\n            this._router.navigate(['/']);\r\n          // } else {\r\n          //   this._messageService.add({\r\n          //     severity: 'error',\r\n          //     summary: 'ERROR!',\r\n          //     detail: \"password could not be reset\"\r\n          //   });\r\n          // }\r\n  \r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\" ; \r\n  \r\n            if(err.status=== 400){\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status=== 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status=== 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status=== 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status=== 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n      \r\n    } else {\r\n      this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch\r\n        });\r\n      })\r\n    }\r\n\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/shared/user/procedures']);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}