{"version":3,"sources":["./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/shared/layout/layout.component.ts","./src/app/shared/layout/layout.component.html","./src/app/admin/service/posting.service.ts","./src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.html","./src/app/shared/analysis/payment-analysis/due-date-details/due-date-details.component.ts","./src/app/shared/model/organisation.ts","./src/app/shared/analysis/payment-analysis/payment-details-month/payment-details-month.component.html","./src/app/shared/analysis/payment-analysis/payment-details-month/payment-details-month.component.ts","./src/app/shared/analysis/amount-analysis/amount-analysis.component.ts","./src/app/shared/analysis/amount-analysis/amount-analysis.component.html","./src/app/shared/model/file-import.ts","./src/app/shared/liquidity/credit-line/credit-line.component.ts","./src/app/shared/liquidity/credit-line/credit-line.component.html","./src/app/shared/user-registration/user-registration.component.ts","./src/app/shared/user-registration/user-registration.component.html","./src/app/shared/reset-password/reset-password.component.html","./src/app/shared/reset-password/reset-password.component.ts","./src/app/shared/model/creditLine.ts","./src/app/shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component.html","./src/app/shared/nav-bar/nav-bar.component.html","./src/app/shared/nav-bar/nav-bar.component.ts","./src/app/shared/service/posting-data.service.ts","./src/app/shared/analysis/amount-analysis/details/amount-analysis-details.component.ts","./src/app/shared/analysis/amount-analysis/details/amount-analysis-details.html","./src/app/shared/analysis/creditor-analysis/creditor-analysis.component.html","./src/app/shared/analysis/creditor-analysis/creditor-analysis.component.ts","./src/environments/environment.ts","./src/app/token.interceptor.ts","./src/app/shared/model/choices.ts","./src/app/admin/service/organisation.service.ts","./src/app/shared/service/auth.service.ts","./src/app/shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component.html","./src/app/admin/admin-registration/admin-registration.component.ts","./src/app/admin/admin-registration/admin-registration.component.html","./src/app/shared/service/user.service.ts","./src/app/shared/model/titles.ts","./src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.ts","./src/app/shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component.html","./src/app/shared/notfound/notfound.component.ts","./src/app/shared/notfound/notfound.component.html","./src/app/shared/user-dashboard/user-dashboard.component.ts","./src/app/shared/user-dashboard/user-dashboard.component.html","./src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.ts","./src/app/shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component.html","./src/app/shared/sap-data-table/susa/susa.component.ts","./src/app/shared/sap-data-table/susa/susa.component.html","./src/app/admin/procedure-registration/procedure-registration.component.ts","./src/app/admin/procedure-registration/procedure-registration.component.html","./src/app/admin/import/import.component.ts","./src/app/admin/import/import.component.html","./src/app/admin/procedure-edit/procedure-edit.component.ts","./src/app/admin/procedure-edit/procedure-edit.component.html","./src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.html","./src/app/shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component.ts","./src/app/admin/document-type/document-type.component.ts","./src/app/admin/document-type/document-type.component.html","./src/app/admin/account-type/account-type.component.ts","./src/app/admin/account-type/account-type.component.html","./src/app/shared/organisation-users/organisation-users.component.html","./src/app/shared/organisation-users/organisation-users.component.ts","./src/app/admin/service/import.service.ts","./src/app/shared/service/procedure.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/shared/pipes/highlight.pipe.ts","./src/app/shared/service/export-data.service.ts","./src/app/shared/sap-data-table/sap-data-table.component.ts","./src/app/shared/sap-data-table/sap-data-table.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/service/admin-registration.service.ts","./src/app/shared/model/users.ts","./src/app/admin/pre-calculate/pre-calculate.component.html","./src/app/admin/pre-calculate/pre-calculate.component.ts","./src/app/shared/analysis/payment-analysis/due-date/due-date.component.ts","./src/app/shared/analysis/payment-analysis/due-date/due-date.component.html","./src/app/shared/service/dictionary.service.ts","./src/app/app.module.ts","./src/app/admin/service/role-service.service.ts","./src/app/shared/model/dataTableColumns.ts","./src/app/shared/login/login.component.ts","./src/app/shared/login/login.component.html","./src/app/admin/service/procedure.service.ts","./src/app/admin/organisation-registration/organisation-registration.component.ts","./src/app/admin/organisation-registration/organisation-registration.component.html","./src/app/shared/liquidity/opening-balance/opening-balance.component.ts","./src/app/shared/liquidity/opening-balance/opening-balance.component.html","./src/app/shared/user-edit/user-edit.component.ts","./src/app/shared/user-edit/user-edit.component.html","./src/environments/environment.prod.ts","./src/app/admin/service/pre-calculate.service.ts","./src/app/shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component.html","./src/app/shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component.html","./src/app/shared/analysis/payment-analysis/payment-analysis.component.ts","./src/app/shared/analysis/payment-analysis/payment-analysis.component.html","./src/app/shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component.ts","./src/app/shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component.html","./src/app/shared/analysis/text-analysis/text-analysis.component.ts","./src/app/shared/analysis/text-analysis/text-analysis.component.html","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/model/bar.ts","./src/app/shared/unauth/unauth.component.ts","./src/app/shared/unauth/unauth.component.html","./src/app/shared/liquidity/free-liquidity/free-liquidity.component.ts","./src/app/shared/liquidity/free-liquidity/free-liquidity.component.html","./src/app/shared/service/data-filter.service.ts","./src/app/admin/service/users.service.ts","./src/app/shared/model/procedures.ts","./src/app/auth.guard.ts","./src/app/shared/service/analysis.service.ts","./src/app/app-routing.module.ts","./src/app/shared/service/liquidity.service.ts","./src/app/shared/reset-password-new-user/reset-password-new-user.component.html","./src/app/shared/reset-password-new-user/reset-password-new-user.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component.ts","./src/app/shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<div class=\"p-mt-2\">\r\n  <p-table [value]=\"organisations\" [columns]=\"cols\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n    [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col *ngFor=\"let col of cols\">\r\n      </colgroup>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"header\" >\r\n      <tr>\r\n        <th pResizableColumn pReorderableColumn  *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n          {{col.header | translate}}\r\n        </th>\r\n        <th>{{'Data_Table.actions' | translate}}</th>\r\n      </tr>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"body\" let-organisation>\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of cols\"  class=\"p-text-{{col.align}}\">{{organisation[col.field]}}</td>\r\n        <td pReorderableRowHandle>\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showProcedures(organisation.id)\"></button> &nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'Admin_Dashboard.show' | translate}}\" tooltipPosition=\"bottom\"\r\n            (click)=\"showUsers(organisation.id)\"></button>&nbsp;\r\n          <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning\"\r\n            pTooltip=\"{{'general_actions.edit' | translate }}\" tooltipPosition=\"bottom\" (click)=\"editOrg(organisation.id)\"></button>\r\n        </td>\r\n\r\n      </tr>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No organisations found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Header } from 'primeng/api';\r\nimport { OrganisationService } from \"../service/organisation.service\";\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.sass']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  organisations: [] = []\r\n  users: [] = []\r\n  organisationRoleId: number;\r\n  cols: { header, field , align}[] = new Array();\r\n\r\n  constructor(private _organisationService: OrganisationService, private _router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    this._organisationService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.organisations = data\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Admin_Dashboard.organisationName',\r\n        field: 'name',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationEmail',\r\n        field: 'email',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCountry',\r\n        field: 'country',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationCity',\r\n        field: 'city',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationPostCode',\r\n        field: 'postCode',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationStreet',\r\n        field: 'street',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Admin_Dashboard.organisationHouseNr',\r\n        field: 'houseNr',\r\n        align: 'center'\r\n      }\r\n\r\n    ];\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  showProcedures(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n\r\n\r\n  }\r\n  showUsers(id) {\r\n    // console.log(id)\r\n    localStorage.setItem('organisationId', id);\r\n    this._router.navigate(['/dashboard/shared/user/users']);\r\n\r\n  }\r\n\r\n  editOrg(id) {\r\n    this._router.navigate(['/dashboard/admin/organisation/edit/' + id]);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router ,ActivatedRoute} from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.sass']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  username: string = localStorage.getItem('username'); \r\n  role: string = localStorage.getItem('role');\r\n\r\n  constructor(private _route: ActivatedRoute, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.setDefaultLang('de');\r\n    this._route.fragment.subscribe(currentRoute => {\r\n      this.role = localStorage.getItem('role');\r\n      this.username = localStorage.getItem('username'); \r\n    });\r\n    \r\n  }\r\n\r\n}\r\n"," <div class=\"p-grid\">\r\n    <div class=\"p-mb-6 p-col-12\">\r\n        <app-nav-bar></app-nav-bar>\r\n    \r\n    </div>\r\n    <div class=\"p-mt-6 p-col-12 dashboard\">\r\n        <router-outlet></router-outlet>\r\n    </div> \r\n<!--     <div class=\"p-mb-6 p-col-12\">\r\n        <app-footer></app-footer>\r\n    </div> -->\r\n </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { Observable } from 'rxjs';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingService {\r\n  _thisURL = environment.baseUrl + 'admin/';\r\n  _docTypeURL = environment.baseUrl + 'admin/document-type/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDocTypesEnum(): Observable<DocumentTypes[]> {\r\n    return this._http.get<DocumentTypes[]>(this._docTypeURL);\r\n  }\r\n\r\n  getPostingDocTypes(orgId: number, prcdrId: number): Observable<PostingDocTypes[]>{\r\n    return this._http.get<PostingDocTypes[]>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId);\r\n  }\r\n\r\n  updateNewDocType(orgId: number, prcdrId: number, data: {documentType, documentTypeNewId, documentTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._docTypeURL + 'posting/' + orgId + '/' + prcdrId, data);\r\n  }\r\n\r\n\r\n\r\n  getAccountTypesEnum():Observable<AccountTypes[]> {\r\n    return this._http.get<AccountTypes[]>(this._thisURL + 'account-type');\r\n  }\r\n\r\n  getPostingAccountTypes(orgId: number, prcId: number): Observable<PostingAccountTypes[]>{\r\n    return this._http.get<PostingAccountTypes[]>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId);\r\n  }\r\n\r\n  updateNewAccountType(orgId: number, prcId: number, data: {accountNumber, accountTypeNewId, accountTypeNewName}): Observable<any>{\r\n    return this._http.put<any>(this._thisURL + 'account-type/posting/' + orgId + '/' + prcId, data);\r\n  }\r\n  \r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\"{{ 'DueDateAnalysis.backtoDueDate' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\"\r\n      pTooltip=\"{{ 'DueDateAnalysis.backtoDueDate' | translate }}\" tooltipPosition=\"bottom\"></button>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\"\r\n      (onDataSelect)=\"selectBarData($event)\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-7\" *ngIf=\"selectedDate\">\r\n    <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-5 p-text-right\" *ngIf=\"selectedDate\">\r\n    <button type=\"button\" pButton pRipple label=\"All\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-warning\"\r\n      (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\" style=\"margin-top: 20px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedDate\">\r\n    <p-table [value]=\"filteredDataTable\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"\r\n            col.field == 'dueDate' ||\r\n            col.field == 'applicationDate' ||\r\n            col.field == 'documentDate'\r\n          \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n            col.field != 'balance' &&\r\n            col.field != 'documentDate' &&\r\n            col.field != 'dueDate' &&\r\n            col.field != 'applicationDate'\r\n          \">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"!selectedDate\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"data\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                col.field == 'dueDate' ||\r\n                col.field == 'applicationDate' ||\r\n                col.field == 'documentDate'\r\n              \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'applicationDate'\r\n              \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-due-date-details',\r\n  templateUrl: './due-date-details.component.html',\r\n  styleUrls: ['./due-date-details.component.sass'],\r\n})\r\nexport class DueDateDetailsComponent implements OnInit {\r\n\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountNumber: string;\r\n  accountName: string;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateLabels: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  filteredDataTable: any[] = new Array();\r\n  data: any[] = new Array();\r\n  docPositiveData: any[] = new Array();\r\n  docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDateData: any = {};\r\n  delayCols: TableColumn[];\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  selectedDate: string;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService, private _analysisService: AnalysisService,\r\n    private _router: Router, private _route: ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.waiting = true;\r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe(elem => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        { label: elem.paymentLabel, routerLink: '/dashboard/analysis/payment', routerLinkActiveOptions: { exact: true } },\r\n        { label: elem.label, routerLink: '/dashboard/analysis/due-date', routerLinkActiveOptions: { exact: true } },\r\n        { label: 'Details', routerLink: this._router.url, routerLinkActiveOptions: { exact: true } }\r\n      ];\r\n\r\n      this.home = { icon: 'pi pi-home', label: elem.data, routerLink: '/dashboard/shared/data' };\r\n      this._analysisService\r\n        .getDueDateAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.accountNumber, null, null, null)\r\n        .subscribe(res => {\r\n\r\n          this.waiting = false;\r\n          this.docDataTable = res.data.docDateReference;\r\n          this.data = res.data.records;\r\n\r\n          this.docDataTable.forEach(element => {\r\n            this.docDateLabels.push(element.monthName + '-' + element.yearName);\r\n            this.docPositiveData.push(element.positive);\r\n            this.docNegativeData.push(element.negative);\r\n            this.docData.push(+element.positive + +element.negative);\r\n          });\r\n\r\n          this.docDateData = {\r\n            labels: this.docDateLabels,\r\n            datasets: [{\r\n              type: 'line',\r\n              label: elem.average,\r\n              borderColor: '#42A5F5',\r\n              borderWidth: 2,\r\n              fill: false,\r\n              data: this.docData\r\n            }, {\r\n              type: 'bar',\r\n              label: elem.positive,\r\n              backgroundColor: '#F5B59B',\r\n              data: this.docPositiveData,\r\n              borderColor: '#E5A58B',\r\n              borderWidth: 2\r\n            }, {\r\n              type: 'bar',\r\n              label: elem.negative,\r\n              backgroundColor: '#FFD795',\r\n              borderColor: '#EFC785',\r\n              data: this.docNegativeData\r\n            }]\r\n          };\r\n\r\n          this.data.forEach(record => {\r\n            let appDate = new Date(record.applicationDate);\r\n            let dueDate = new Date(record.dueDate);\r\n            if (appDate && dueDate && appDate instanceof Date && dueDate instanceof Date)\r\n              record.delay = Math.ceil((appDate?.getTime() - dueDate?.getTime()) / (1000 * 3600 * 24));\r\n          })\r\n\r\n        }, er => {\r\n          this.waiting = false;\r\n        });\r\n    })\r\n\r\n\r\n    this.basicData = {\r\n      labels: this.labels,\r\n      datasets: new Array()\r\n    };\r\n\r\n    this.basicOptions = {\r\n\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: {\r\n            minRotation: 40,\r\n            maxRotation: 90,\r\n          }\r\n        }],\r\n        yAxes: [{\r\n          ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 0,\r\n            stepSize: 50\r\n          }\r\n        }],\r\n      }\r\n    };\r\n\r\n    this.delayCols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNewName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.delay',\r\n        field: 'delay',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['/dashboard/analysis/due-date']);\r\n  }\r\n\r\n  selectBarData(e) {\r\n    debugger;\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.docDateLabels[index];\r\n    let startTemp = this.selectedDate.split('-');\r\n    let startDate = new Date(parseInt(startTemp[1]), parseInt(startTemp[0]) - 1, 1);\r\n    let endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0);\r\n    this.filteredDataTable = this.data.filter(row => (new Date(row.documentDate)).getTime() >= startDate.getTime() &&\r\n    (new Date(row.documentDate)).getTime() <= endDate.getTime());\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Organisation {\r\n    id: number;\r\n    name: string ='';\r\n    logo:  File ;\r\n    email: string = '';\r\n    street: string ='';\r\n    houseNr: number = null;\r\n    city: string ='';\r\n    postCode: number = null;\r\n    country: string ='';\r\n\r\n\r\n    // constructor(name: string, logo: File ,email: string, street: string , houseNr: number , city: string , country: string ) {\r\n    //     this.name = name;\r\n    //     this.logo = logo;\r\n    //     this.email = email;\r\n    //     this.street = street;\r\n    //     this.houseNr = houseNr;\r\n    //     this.city = city;\r\n    //     this.country = country;\r\n\r\n    // }\r\n\r\n    static setOrganisation(organisation) {\r\n\r\n        let result: Organisation = organisation\r\n        return result\r\n    }\r\n\r\n\r\n}","<span class=\"p-text-center\">\r\n    <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"displayData\" optionLabel=\"name\" optionValue=\"value\">\r\n    </p-selectButton>\r\n  </span>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredBlue\" *ngIf=\"displayData == 1\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredRed\" *ngIf=\"displayData == 2\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <p-table #dtmaxb dataKey=\"id\" [value]=\"filteredGreen\" *ngIf=\"displayData == 3\" [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n    [reorderableColumns]=\"true\">\r\n    \r\n    <ng-template pTemplate=\"colgroup\" let-columns>\r\n      <colgroup>\r\n        <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\" let-columns>\r\n      <tr>\r\n        <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n          *ngFor=\"let col of columns\">\r\n          <span pTooltip=\"{{ col.header | translate }}\">\r\n            {{ col.header | translate }}\r\n          </span>\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <!-- <tr>\r\n        <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n          <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n            class=\"filterInputCss\" />\r\n        </th>\r\n      </tr> -->\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n      <tr>\r\n        <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n          <span *ngIf=\"col.field == 'balance'\">\r\n            {{ row.balance | currency: \"EUR\":\"\" }}\r\n          </span>\r\n          <span *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate'\r\n            \">\r\n            {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n          </span>\r\n          <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n              col.field != 'balance' &&\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'paymentRelevantComment' &&\r\n              col.field != 'paymentRelevant'\r\n            \">\r\n            {{ row[col.field] }}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\" let-columns>\r\n      <tr>\r\n        <td [attr.colspan]=\"columns.length\">No records found</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-payment-details-month',\r\n  templateUrl: './payment-details-month.component.html',\r\n  styleUrls: ['./payment-details-month.component.sass']\r\n})\r\nexport class PaymentDetailsMonthComponent implements OnInit {\r\n\r\n  @Input('blue') blueData: any[];\r\n  @Input('red') redData: any[];\r\n  @Input('green') greenData: any[];\r\n  @Input('month') month: string; // like: '9-2019'\r\n  startDate: Date;\r\n  endDate: Date;\r\n  filteredBlue: any[];\r\n  filteredRed: any[];\r\n  filteredGreen: any[];\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  cols: TableColumn[];\r\n  displayData = 1;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.month)\r\n      this.updateData(this.month);\r\n\r\n    this.paymentOptions = [\r\n      { name: 'blue', value: 1, color: 'blue !important' },\r\n      { name: 'red', value: 2, color: 'red' },\r\n      { name: 'green', value: 3, color: 'green' },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n  updateData(date: string) {\r\n    let startTemp = date.split('-');\r\n    this.startDate = new Date(parseInt(startTemp[1]), parseInt(startTemp[0]) - 1, 1);\r\n    this.endDate = new Date(this.startDate.getFullYear(), this.startDate.getMonth() + 1, 0);\r\n    this.filteredBlue = this.blueData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n    this.filteredRed = this.redData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n    this.filteredGreen = this.greenData.filter(row => {\r\n      return (new Date(row.documentDate)).getTime() >= this.startDate.getTime() &&\r\n        (new Date(row.documentDate)).getTime() <= this.endDate.getTime();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AmountAnalysis } from '../../model/amountAnalysis';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Bar } from '../../model/bar';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-amount-analysis',\r\n  templateUrl: './amount-analysis.component.html',\r\n  styleUrls: ['./amount-analysis.component.sass'],\r\n})\r\nexport class AmountAnalysisComponent implements OnInit {\r\n  data: AmountAnalysis[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  baseBalance = 500;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.totalBalance',\r\n        field: 'totalBalance',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: AmountAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/amount/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber +\r\n        '/' +\r\n        this.baseBalance,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.tempData = [...this.data];\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid p-mt-2\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-text-right\">\r\n      <label for=\"baseBalance\">{{'AmountAnalysis.baseBalance' | translate}}: </label>\r\n      <!-- <input pInputNumber type=\"number\" name=\"baseBalance\" [(ngModel)]=\"baseBalance\"/> -->\r\n      <p-inputNumber [(ngModel)]=\"baseBalance\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n      </p-inputNumber>\r\n      <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\" class=\"p-ml-2\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12 \" *ngIf=\"selectedProcedure>0\">\r\n    <!-- <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar> -->\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span><p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">{{ row[col.field] | currency:'EUR':''}}</span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Choices } from \"./choices\";\r\n\r\nexport class FileToImport {\r\n\r\n    OrganisationId: number;\r\n    procedureId: number;\r\n    template: any = {};\r\n    defaultTemplate: any = {};\r\n    fileType: Choices;\r\n    fileClass: Choices;\r\n    local: Choices;\r\n    accountType: Choices;\r\n    size: Number;\r\n    orginalName: string;\r\n    nameOnServer: string;\r\n    file: File;\r\n    index: number;\r\n    uploaded: boolean;\r\n    imported: boolean;\r\n    fileHeader: any = {};\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CreditLine } from '../../model/creditLine';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { MessageService } from 'primeng/api';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-credit-line',\r\n  templateUrl: './credit-line.component.html',\r\n  styleUrls: ['./credit-line.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class CreditLineComponent implements OnInit {\r\n  procedureName: string;\r\n  prcId: number;\r\n  orgId: number;\r\n  data: CreditLine[];\r\n  cols: TableColumn[];\r\n  originalCreditLine: number;\r\n  originalCreditLineFromDate: Date;\r\n  originalCreditLineToDate: Date;\r\n  newDialog: boolean;\r\n  newRecord: CreditLine;\r\n  // for filter\r\n  searching: boolean = true;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private datepipe: DatePipe,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // debugger;\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLine',\r\n        field: 'creditLine',\r\n        // width: '250',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineFromDate',\r\n        field: 'creditLineFromDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLineToDate',\r\n        field: 'creditLineToDate',\r\n        align: 'center'\r\n      },\r\n    ];\r\n    this.searching = true;\r\n    this._liquidityService.getCreditLine(this.orgId, this.prcId).subscribe(\r\n      (res) => {\r\n        res.forEach((val) => {\r\n          val.creditLineFromDate = val.creditLineFromDate\r\n            ? new Date(val.creditLineFromDate)\r\n            : null;\r\n          val.creditLineToDate = val.creditLineToDate\r\n            ? new Date(val.creditLineToDate)\r\n            : null;\r\n          let accountNumber = parseInt(val.accountNumber?.toString(), 10);\r\n          val.accountNumber = isNaN(accountNumber)\r\n            ? val.accountNumber\r\n            : accountNumber;\r\n          let creditLine = parseFloat(val?.creditLine?.toString());\r\n          val.creditLine = isNaN(creditLine)\r\n            ? val.creditLine\r\n            : creditLine;\r\n        });\r\n        this.data = res;\r\n        this.tempData = res;\r\n        // debugger;\r\n        this.searching = false;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  } // end of ng on init\r\n\r\n  editRow(row: CreditLine) {\r\n    this.data\r\n      .filter((row) => row.isEditable)\r\n      .map((r) => {\r\n        r.isEditable = false;\r\n        return r;\r\n      });\r\n    row.isEditable = true;\r\n    this.originalCreditLine = row.creditLine;\r\n    this.originalCreditLineFromDate = row.creditLineFromDate;\r\n    this.originalCreditLineToDate = row.creditLineToDate;\r\n  }\r\n\r\n  save(row: CreditLine) {\r\n    this.searching = true;\r\n    // debugger;\r\n    let tempRow: any = {...row};\r\n    tempRow.creditLineFromDate = this.datepipe.transform(row.creditLineFromDate, 'yyyy-MM-dd');\r\n    tempRow.creditLineToDate = this.datepipe.transform(row.creditLineToDate, 'yyyy-MM-dd');\r\n    this._liquidityService\r\n      .updateCreditLine(this.orgId, this.prcId, tempRow)\r\n      .subscribe(\r\n        (res) => {\r\n          row.isEditable = false;\r\n          let numOfRecords = res.length > 0 ? res[0] : 0;\r\n\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`,\r\n          });\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(row: CreditLine) {\r\n    row.creditLineFromDate = this.originalCreditLineFromDate;\r\n    row.creditLineToDate = this.originalCreditLineToDate;\r\n    row.creditLine = this.originalCreditLine;\r\n    row.isEditable = false;\r\n  }\r\n\r\n  addRow(row: CreditLine) {\r\n    this.newRecord = new CreditLine();\r\n    this.newRecord.accountName = row.accountName;\r\n    this.newRecord.accountNumber = row.accountNumber;\r\n    this.newDialog = true;\r\n  }\r\n\r\n  deleteRow(row: CreditLine) {\r\n    this.searching = true;\r\n    this._liquidityService\r\n      .deleteCreditLine(this.orgId, this.prcId, row)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = this.data.filter((val) => val.id != row.id);\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is deleted successfully`,\r\n          });\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  hideDialog() {\r\n    this.newDialog = false;\r\n    this.newRecord = new CreditLine();\r\n  }\r\n\r\n  saveCreditLie() {\r\n    this.searching = true;\r\n    this._liquidityService\r\n      .updateCreditLine(this.orgId, this.prcId, this.newRecord)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data.push(this.newRecord);\r\n          this.data = [...this.data];\r\n          this.newDialog = false;\r\n          this.searching = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `Credit line is inserted successfully in the targeted posting data`,\r\n          });\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (key == 'creditLineFromDate' || key == 'creditLineToDate') {\r\n              // debugger;\r\n              this.data = this.tempData.filter(\r\n                (value) =>\r\n                  value[key]?.getDate() == element.getDate() &&\r\n                  value[key]?.getMonth() == element.getMonth() &&\r\n                  value[key]?.getFullYear() == element.getFullYear()\r\n              );\r\n            } else {\r\n              if (element.length < 3) {\r\n                this.data = this.tempData.filter(\r\n                  (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n                );\r\n              } else {\r\n                this.data = this.tempData.filter((value) =>\r\n                  value[key]?.toLowerCase().includes(element.toLowerCase())\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (key == 'creditLineFromDate' || key == 'creditLineToDate') {\r\n            // debugger;\r\n            this.data = this.tempData.filter(\r\n              (value) =>\r\n                value[key]?.getDate() == element.getDate() &&\r\n                value[key]?.getMonth() == element.getMonth() &&\r\n                value[key]?.getFullYear() == element.getFullYear()\r\n            );\r\n          } else {\r\n            if (element.length < 3) {\r\n              this.data = this.data.filter(\r\n                (value) =>\r\n                  value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.data.filter((value) =>\r\n                value[key]\r\n                  ?.toString()\r\n                  .toLowerCase()\r\n                  .includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">\r\n      {{ procedureName }}\r\n    </h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\">\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"data\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\" *ngIf=\"filtersNo > 0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n          <th>\r\n            {{ \"Liquidity.action\" | translate }}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" *ngIf=\"\r\n                col.field != 'creditLineFromDate' &&\r\n                col.field != 'creditLineToDate'\r\n              \" />\r\n            <p-calendar *ngIf=\"\r\n                col.field == 'creditLineFromDate' ||\r\n                col.field == 'creditLineToDate'\r\n              \" [(ngModel)]=\"criteria[col.field]\" (onSelect)=\"filterChange($event, col.field)\" [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\">\r\n            </p-calendar>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"\r\n                col.field != 'creditLine' &&\r\n                col.field != 'creditLineToDate' &&\r\n                col.field != 'creditLineFromDate'\r\n              \">\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'creditLine'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n\r\n            <span *ngIf=\"\r\n                !row.isEditable &&\r\n                (col.field == 'creditLineToDate' ||\r\n                  col.field == 'creditLineFromDate')\r\n              \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n\r\n            <p-inputNumber *ngIf=\"row.isEditable && col.field == 'creditLine'\" [(ngModel)]=\"row.creditLine\"\r\n              mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\" [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{ 'margin-left': '5%' }\"\r\n              size=\"10\">\r\n            </p-inputNumber>\r\n\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineFromDate'\" [(ngModel)]=\"row.creditLineFromDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n            <p-calendar *ngIf=\"row.isEditable && col.field == 'creditLineToDate'\" [(ngModel)]=\"row.creditLineToDate\"\r\n              [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2100\" appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"></p-calendar>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.edit' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.save' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.cancel' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.creditLine\"\r\n              pTooltip=\"{{ 'Liquidity.add' | translate }}\" tooltipPosition=\"bottom\"></button>&nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"deleteRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.creditLine\"\r\n              pTooltip=\"{{ 'Liquidity.delete' | translate }}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"newDialog\" [style]=\"{ width: '450px' }\" header=\"{{ 'Liquidity.creditLineLabel' | translate }}\"\r\n  [modal]=\"true\" styleClass=\"p-fluid\">\r\n  <ng-template pTemplate=\"content\">\r\n    <div class=\"p-field\">\r\n      <label for=\"number\">{{ \"Liquidity.accountNumber\" | translate }}:\r\n        {{ newRecord.accountNumber }}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"name\">{{ \"Liquidity.accountName\" | translate }}:\r\n        {{ newRecord.accountName }}</label>\r\n    </div>\r\n    <div class=\"p-field\">\r\n      <label for=\"CreditLine\">{{ \"Liquidity.creditLineLabel\" | translate }}:</label>\r\n      <p-inputNumber [(ngModel)]=\"newRecord.creditLine\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" [style]=\"{ width: '40%' }\" size=\"10\"\r\n        class=\"p-ml-4\">\r\n      </p-inputNumber>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineFromDate\">{{\r\n        \"Liquidity.creditLineFromDate\" | translate\r\n        }}</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineFromDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n\r\n    <div class=\"p-field\">\r\n      <label for=\"creditLineToDate\">{{\r\n        \"Liquidity.creditLineToDate\" | translate\r\n        }}</label>\r\n      <p-calendar [(ngModel)]=\"newRecord.creditLineToDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n        yearRange=\"1900:2100\" appendTo=\"body\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\">\r\n    <button pButton pRipple label=\"{{ 'Liquidity.cancel' | translate }}\" icon=\"pi pi-times\" class=\"p-button-text\"\r\n      (click)=\"hideDialog()\"></button>\r\n    <button pButton pRipple label=\"{{ 'Liquidity.save' | translate }}\" icon=\"pi pi-check\" class=\"p-button-text\"\r\n      (click)=\"saveCreditLie()\"></button>\r\n  </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.sass']\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{ name: 'Manager', value: 2 }, { name: 'User', value: 3 }];\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.OrganisationId = +localStorage.getItem('organisationId');\r\n  }\r\n  submitHandler() {\r\n    this._userService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\";\r\n\r\n          if (err.status === 400) {\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status === 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status === 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status === 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status === 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/users']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.header' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}}  </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                    <small *ngIf=\"role.invalid && role.untouched \"  class=\"spanCss\"> {{'User_Registration.roleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}}</small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstname' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}}  </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">  {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}} </small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","\r\n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Password_Reset.header' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandle()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n  \r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'Password_Reset.password' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                    <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Password_Reset.passwordConfirm' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                    <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n      \r\n                  <!-- <button pbutton pripple type=\"button\" label=\"cancel\"\r\n                    class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n                  </button> -->\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                  <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n                    <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n                  </button>\r\n                </div>\r\n      \r\n              </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.sass'],\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  passwordObj = {\r\n    selectedPassword: '',\r\n    confirmedPassword: '',\r\n  };\r\n  pass: string;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    public _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  submitHandle() {\r\n    // console.log(this.passwordObj)\r\n    if (\r\n      this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword\r\n    ) {\r\n      let password = this.passwordObj.selectedPassword;\r\n      this._authService.changePassword({ password: password }).subscribe(\r\n        (res) => {\r\n          this._router.navigate(['/']);\r\n        },\r\n        (err) => {}\r\n      );\r\n    } else {\r\n      this._translateService.get('ErrorHandler').subscribe((elem) => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n  }\r\n}\r\n","export class CreditLine {\r\n    id: number;\r\n    accountNumber: string | number;\r\n    accountName: string;\r\n    procedureId: number;\r\n    creditLineFromDate: Date;\r\n    creditLineToDate: Date;\r\n    creditLine: number;\r\n    isEditable: boolean;\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { AnalysisService } from '../../../service/analysis.service';\r\nimport { Bar } from '../../../model/bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TextAnalysis } from '../../../model/textAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../../service/procedure.service';\r\nimport { TableColumn } from '../../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-indexed',\r\n  templateUrl: './text-analysis-indexed.component.html',\r\n  styleUrls: ['./text-analysis-indexed.component.sass']\r\n})\r\nexport class TextAnalysisIndexedComponent implements OnInit {\r\n\r\n\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    this.waiting = true;\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysisIndex(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${(Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWordIndex(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => { }\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n      this.selectedOrganisation +\r\n      '/' +\r\n      this.selectedProcedure +\r\n      '/' +\r\n      row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n      row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n      <!-- <h1 class=\"p-text-center\">Text Analysis with full text index</h1>\r\n    <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n    <h4 class=\"p-text-right\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount? 'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n","<div id=\"prc\" [style]=\"prcStyle\">\r\n  {{prcName}}\r\n</div>\r\n<div>\r\n  <div>\r\n    <p-menubar [model]=\"menuItems\">\r\n      <ng-template pTemplate=\"start\">\r\n        <img src=\"assets/logo.jpg\" height=\"60\" width=\"75\" class=\"p-mr-6\" style=\"border: hidden\" />\r\n        <p-button icon=\"pi pi-bars\" styleClass=\"sidebar-button\" class=\"p-button-raised p-button-outlined\"\r\n          (click)=\"getSideBarItems()\"></p-button>\r\n      </ng-template>\r\n      <!-- <ng-template pTemplate=\"p-menubarsub\">\r\n        <div class=\"p-field\" style=\"margin-right: auto; color: #ffffff;\">\r\n          {{prcName}}\r\n        </div>\r\n      </ng-template> -->\r\n      <ng-template pTemplate=\"end\">\r\n        <div class=\"p-formgroup-inline\" >\r\n          <div class=\"p-field\">\r\n            <select #langSelect (change)=\"_translateService.use(langSelect.value)\" class=\"\r\n                layout-topbar-action\r\n                p-d-flex p-dir-row p-jc-center p-ai-center p-px-2\r\n                rounded-circle\r\n                ng-tns-c186-0\r\n                p-ripple\r\n              \" style=\"\r\n                height: 60px;\r\n                background-color: #58585a;\r\n                color: #ffffff;\r\n                border: none;\r\n              \" [(ngModel)]=\"browserLang\">\r\n              <option *ngFor=\"let lang of _translateService.getLangs(); index as i\" value=\"{{ lang }}\">\r\n                {{ lang | uppercase }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"p-field\">\r\n            <a pripple class=\"\r\n                layout-topbar-action\r\n                p-d-flex p-dir-row p-jc-center p-ai-center p-px-2\r\n                rounded-circle\r\n                ng-tns-c186-0\r\n                p-ripple\r\n              \">\r\n              <img src=\"assets/profile.png\" style=\"\r\n                  width: 60px;\r\n                  height: 60px;\r\n                  background-color: none;\r\n                  color: none;\r\n                \" class=\"p-mr-2\" (click)=\"menu.toggle($event)\" />\r\n              <span class=\"p-link\"></span>\r\n            </a>\r\n            <p-menu #menu [popup]=\"true\" [model]=\"userPages\"></p-menu>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      \r\n    </p-menubar>\r\n  </div>\r\n  <div>\r\n    <p-sidebar [(visible)]=\"sideBarShow\" class=\"sideBarWidth\" [showCloseIcon]=\"false\">\r\n      <h2 style=\"font-weight: lighter\" class=\"p-text-center\">{{ username }}</h2>\r\n      <p style=\"font-weight: lighter\" *ngIf=\"currentProcedureStatus\" class=\"p-text-center {{ currentProcedureStatus }}\">\r\n        {{ 'sideBarMenu.' + currentProcedureStatus | translate }}</p>\r\n      <p-menu #menu [model]=\"sidebarItems\" [style]=\"{ width: '300px', border: 'none' }\"></p-menu>\r\n    </p-sidebar>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, Injectable, OnInit, ViewChild } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\nimport { HostListener } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.sass'],\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  sideBarShow: boolean = false;\r\n  menuItems: MenuItem[] = [];\r\n  userPages: MenuItem[] = [];\r\n  sidebarItems: MenuItem[] = [];\r\n  username: string = localStorage.getItem('username');\r\n  role: string = localStorage.getItem('role');\r\n  browserLang: string = 'de';\r\n  orgId: number;\r\n  prcId: number;\r\n  @ViewChild('menu') menu: any;\r\n  currentProcedureStatus: string;\r\n  prcNameObserve: Observable<string>;\r\n  prcName: string = localStorage.getItem('currentProcedureName');\r\n  scrWidth: number;\r\n  prcStyle: string;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _router: Router\r\n  ) {\r\n    this._translateService.addLangs(['de', 'en']);\r\n    this._translateService.setDefaultLang('de');\r\n    this.browserLang = this._translateService.getBrowserLang();\r\n    this._translateService.use(this.browserLang.match(/de|en/) ? this.browserLang : 'de');\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    // this.scrHeight = window.innerHeight;\r\n    this.scrWidth = window.innerWidth;\r\n      this.prcStyle = 'position: fixed; z-index: 999; top: 30px; right:' + (this.scrWidth / 2 - 25) + 'px; color: #ffffff; height: 100px; font-size: x-large;';\r\n    // let elem: HTMLElement = document.getElementById('navbar-title');\r\n    // elem?.setAttribute(\"style\", `margin-left: ${this.scrWidth/3} !important`);\r\n  }\r\n\r\n\r\n  updateLocal() {\r\n    debugger;\r\n    this.prcName = localStorage.getItem('currentProcedureName');\r\n    let elem: HTMLElement = document.getElementById('prc');\r\n    elem.innerHTML = this.prcName;\r\n    this.prcStyle = 'position: fixed; z-index: 999; top: 30px; right:' + (this.scrWidth / 2 - this.prcName?.length) + 'px; color: #ffffff; height: 100px; font-size: x-large;';\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.username = localStorage.getItem('username');\r\n    this.role = localStorage.getItem('role');\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n\r\n\r\n    this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this._translateService.use(event.lang);\r\n      localStorage.setItem('lang', event.lang);\r\n    });\r\n    this.userPages = [\r\n      {\r\n        label: await this._translateService.get('setting').toPromise(),\r\n        icon: 'pi pi-globe',\r\n        visible:\r\n          localStorage.getItem('role') == 'Admin' ||\r\n          localStorage.getItem('role') == 'Manager',\r\n      },\r\n      {\r\n        label: await this._translateService.get('logout').toPromise(),\r\n        icon: 'pi pi-fw pi-power-off',\r\n        command: () => {\r\n          this.logout();\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  getSideBarItems() {\r\n    this.sideBarShow = true;\r\n    this.currentProcedureStatus = localStorage.getItem('currentProcedureStatus');\r\n    this._translateService.get('sideBarMenu').subscribe((elem) => {\r\n      if (this.role === 'Admin') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Administrator',\r\n            items: [\r\n              {\r\n                label: 'Import',\r\n                icon: 'pi pi-file',\r\n                routerLink: ['/dashboard/admin/import'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addUser,\r\n                icon: 'pi pi-user-plus',\r\n                routerLink: ['/dashboard/admin/admin/add'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addOrganisation,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/organisation/add'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addDocumentType,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/document-type'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.addAccountType,\r\n                icon: 'pi pi-plus-circle',\r\n                routerLink: ['/dashboard/admin/accountType'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.resetPassword,\r\n                icon: 'pi pi-lock',\r\n                routerLink: ['/dashboard/resetPassword'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n\r\n              {\r\n                label: elem.preCalculateAnalysis,\r\n                icon: 'pi pi-flag',\r\n                routerLink: ['/dashboard/admin/pre-calc'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n\r\n            ],\r\n          },\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.organisations,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/admin/dashboard'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.data,\r\n                icon: 'pi  pi-table',\r\n                routerLink: ['/dashboard/shared/data'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-file',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.dueDateAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/due-date'],\r\n                disabled: localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      } else if (this.role === 'Manager') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.procedures,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/shared/user/procedures'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.users,\r\n                icon: 'pi pi-users',\r\n                routerLink: ['/dashboard/shared/user/users'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.table,\r\n                icon: 'pi pi-table',\r\n                routerLink: ['/dashboard/data'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-inbox',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      } else if (this.role === 'User') {\r\n        this.sidebarItems = [\r\n          {\r\n            label: 'Dashboard',\r\n            items: [\r\n              {\r\n                label: elem.procedures,\r\n                icon: 'pi  pi-home',\r\n                routerLink: ['/dashboard/shared/user/procedures'],\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.data,\r\n            items: [\r\n              {\r\n                label: elem.table,\r\n                icon: 'pi pi-table',\r\n                routerLink: ['/dashboard/data'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureData') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n              },\r\n            ],\r\n          },\r\n\r\n          {\r\n            label: elem.analysis,\r\n            items: [\r\n              {\r\n                label: elem.amountAnalyisis,\r\n                icon: 'pi pi-euro',\r\n                routerLink: ['/dashboard/analysis/amount'],\r\n                disabled: localStorage.getItem('currentProcedureAmount') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.textAnalysis,\r\n                icon: 'pi pi-inbox',\r\n                routerLink: ['/dashboard/analysis/text'],\r\n                disabled: localStorage.getItem('currentProcedureText_word') != 'true' ||\r\n                  localStorage.getItem('currentProcedureText_account') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.paymentAnalyse,\r\n                icon: 'pi pi-credit-card',\r\n                routerLink: ['/dashboard/analysis/payment'],\r\n                disabled: localStorage.getItem('currentProcedurePayment') != 'true' ||\r\n                  localStorage.getItem('currentProcedureDueDate') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditorsAnalyse,\r\n                icon: 'pi pi-chart-bar',\r\n                routerLink: ['/dashboard/analysis/creditor'],\r\n                disabled: localStorage.getItem('currentProcedureCredit') != 'true' ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0,\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: elem.liquidity,\r\n            items: [\r\n              {\r\n                label: elem.openingBalance,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/openingBalance'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.creditLine,\r\n                icon: 'pi  pi-plus-circle',\r\n                routerLink: ['/dashboard/liquidity/creditLine'],\r\n                disabled:\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n              {\r\n                label: elem.freeLiquidity,\r\n                icon: 'pi  pi-chart-line',\r\n                routerLink: ['/dashboard/liquidity/freeLiquidity'],\r\n                disabled:\r\n                  localStorage.getItem('currentProcedureLiquidity') != 'true' ||\r\n                  +localStorage.getItem('organisationId') <= 0 ||\r\n                  +localStorage.getItem('currentProcedureId') <= 0 ||\r\n                  localStorage.getItem('currentProcedureAnalysis') != 'true' ||\r\n                  !(localStorage.getItem('currentProcedureStatus') === 'IMPORTED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'PARTIAL_CALCULATED' ||\r\n                    localStorage.getItem('currentProcedureStatus') === 'CALCULATED'),\r\n                command: () => {\r\n                  this.sideBarShow = false;\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ];\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this._router.navigate(['/']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostingDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getDataTable(companyCode:string, offset:number, limit: number) {\r\n    return this._http.get(this._thisURL + '/getPostingData/' + companyCode + '/' + offset + '/' + limit);\r\n  }\r\n\r\n  getDefaultSusaDateRange(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + `/susa/defaultDate/${orgId}/${prcId}`);\r\n  }\r\n\r\n  getSusa(orgId: number, prcId: number, fromDate: string, toDate: string, criteria: any) {\r\n    let url = this._thisURL + `/susa/${orgId}/${prcId}`;\r\n    if (fromDate && toDate) {\r\n      url += `/${fromDate}/${toDate}`\r\n    }\r\n    return this._http.get<any>(url, { params: criteria });\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AmountAnalysisDetails } from 'src/app/shared/model/amountAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'amount-analysis-details',\r\n  templateUrl: './amount-analysis-details.html',\r\n  styleUrls: ['./amount-analysis-details.sass'],\r\n})\r\nexport class AmountAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: AmountAnalysisDetails[] = new Array();\r\n  allRecordData: AmountAnalysisDetails[] = new Array();\r\n  waiting: boolean;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  baseBalance: number;\r\n  procedureName: any;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: AmountAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  accountName: string;\r\n  // for pagination ends\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _messageService: MessageService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _exportDataService: ExportDataService,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.baseBalance = +this._route.snapshot.paramMap.get('baseBalance');\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // {label: 'Analysis'},\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount/' + this.baseBalance },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'User Relevant', value: 2 },\r\n      { name: 'All', value: 3 },\r\n    ];\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'amountRelevant',\r\n        width: '6',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'amountRelevantComment',\r\n        width: '35',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          if (this.data.length > 0) {\r\n            this.accountName = this.data[0].accountName;\r\n          }\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/amount/' + this.baseBalance]);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { amount_analysis: worksheet },\r\n        SheetNames: ['amount_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'amount_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  selectRow(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.amountRelevant) {\r\n      row.amountRelevant = false;\r\n      row.amountRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['amountRelevant'] = false;\r\n        this.selected[index]['amountRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.amountRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['amountRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: AmountAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.amountRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['amountRelevant'] = true;\r\n      this.selected[index]['amountRelevantComment'] = row.amountRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantAmountAnalysis(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records updated successfully!',\r\n          });\r\n        },\r\n        (er) => {}\r\n      );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetails(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsRelevant(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getAmountAnalysisDetailsByAccount(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.prcId;\r\n    this._exportDataService\r\n      .exportXLSX('amount_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Amount_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (error) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n    this.filtersNo = 0;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h3 class=\"p-text-center\">{{accountName}}</h3>\r\n    <!-- <p-messages></p-messages> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton\r\n        [options]=\"detailsOptions\"\r\n        (onChange)=\"changeData($event.value)\"\r\n        optionLabel=\"name\"\r\n        optionValue=\"value\"\r\n        [(ngModel)]=\"detailsOption\"\r\n      >\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{'height': '5px'}\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"Xlsx\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{'width': (col.width? col.width : 200) +'px'}\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{col.field}}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{col.header | translate}}<p-sortIcon\r\n              field=\"{{col.field}}\"\r\n            ></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{col.align}}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.amountRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.amountRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.amountRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field] | currency:'EUR':'' }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\"\r\n            >\r\n              {{ row[col.field] | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <!-- All records table... back-end filter and pagination -->\r\n\r\n    <p-table\r\n      #dtall\r\n      [value]=\"allRecordData\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n      [lazy]=\"true\"\r\n      [customSort]=\"true\"\r\n      (onLazyLoad)=\"sort($event)\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'Analysis.back' | translate}} \"\r\n              pTooltip=\"{{ 'Analysis.back' | translate}} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"Xlsx\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate}}\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-7\">\r\n            <!-- Limit options -->\r\n            <p-dropdown\r\n              [options]=\"pageLimitSizes\"\r\n              optionValue=\"value\"\r\n              optionLabel=\"value\"\r\n              [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\"\r\n              class=\"p-mr-2\"\r\n            ></p-dropdown>\r\n            <!-- Go to First page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.firstPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go previous -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.previous' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Page number -->\r\n            <input\r\n              pInputText\r\n              type=\"number\"\r\n              min=\"1\"\r\n              class=\"pageNrInput p-mr-2\"\r\n              (input)=\"pageNrChange($any($event.target).value)\"\r\n              [value]=\"pageNr\"\r\n              [placeholder]=\"pageNr\"\r\n            />\r\n            <!-- Go to next Page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.next' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go to last page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{'Data_Table.lastPage' | translate}}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- dispalyed data of total count -->\r\n            {{displayedDataCount}} of {{totalCount}}\r\n            <!-- Clear filter -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-filter-slash\"\r\n              (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\"\r\n              pTooltip=\"{{'Data_Table.clearFilter' | translate}}\"\r\n              *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <!-- <col style=\"width:17px;\"> -->\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{'width': (col.width? col.width : 200) +'px'}\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{col.field}}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'amountRelevant' && col.field != 'accountNumber' && col.field != 'accountName'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"backCriteria[col.field]\"\r\n              [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChangeBack($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{col.align}}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'amountRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.amountRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.amountRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'amountRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.amountRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{row.amountRelevantComment}}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field=='balance'\">\r\n              {{ row[col.field] | currency:'EUR':'' }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"col.field=='documentDate' || col.field=='executionDate' || col.field=='dueDate'\"\r\n            >\r\n              {{ row[col.field] | date: 'dd.MM.yyyy' }}\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<p-table\r\n  #dtmaxb\r\n  dataKey=\"accountNumber\"\r\n  [value]=\"data\"\r\n  [resizableColumns]=\"true\"\r\n  styleClass=\"p-datatable-gridlines\"\r\n  [columns]=\"cols\"\r\n  responsive=\"true\"\r\n  [scrollable]=\"true\"\r\n  scrollHeight=\"350px\"\r\n  [reorderableColumns]=\"true\"\r\n  [loading]=\"waiting\"\r\n  [lazy]=\"true\"\r\n  [customSort]=\"true\"\r\n  (onLazyLoad)=\"sort($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Limit options -->\r\n      <p-dropdown\r\n        [options]=\"pageLimitSizes\"\r\n        optionValue=\"value\"\r\n        optionLabel=\"label\"\r\n        [(ngModel)]=\"limit\"\r\n        (onChange)=\"limitChange($event)\"\r\n        class=\"p-mr-2\"\r\n      ></p-dropdown>\r\n      <!-- Go to First page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-left\"\r\n        (click)=\"firstPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go previous -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-left\"\r\n        (click)=\"previousPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Page number -->\r\n      <input\r\n        pInputText\r\n        type=\"number\"\r\n        min=\"1\"\r\n        class=\"pageNrInput p-mr-2\"\r\n        (input)=\"pageNrChange($any($event.target).value)\"\r\n        [value]=\"pageNr\"\r\n        [placeholder]=\"pageNr\"\r\n      />\r\n      <!-- Go to next Page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-right\"\r\n        (click)=\"nextPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go to last page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-right\"\r\n        (click)=\"lastPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n\r\n      <!-- dispalyed data of total count -->\r\n      {{ displayedDataCount }} of {{ totalCount }}\r\n      <!-- Clear filter -->\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-filter-slash\"\r\n        (click)=\"clearFilter()\"\r\n        class=\"p-ml-6 clearFilter\"\r\n        pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n        *ngIf=\"filtersNo > 0\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\" let-columns>\r\n    <colgroup>\r\n      <col *ngFor=\"let col of columns\" />\r\n      <col />\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\" let-columns>\r\n    <tr>\r\n      <th\r\n        pSortableColumn=\"{{ col.field }}\"\r\n        pResizableColumn\r\n        pReorderableColumn\r\n        class=\"p-text-{{ col.align }}\"\r\n        *ngFor=\"let col of columns\"\r\n      >\r\n        <span pTooltip=\"{{ col.header | translate }}\">\r\n          {{ col.header | translate }}\r\n        </span>\r\n        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n      </th>\r\n      <th>Details</th>\r\n    </tr>\r\n    <tr>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountNumber']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountNumber')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountName']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountName')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n    <tr [pSelectableRow]=\"row\">\r\n      <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n        <span *ngIf=\"col.field == 'totalBalance'\">\r\n          {{ row.totalBalance | currency: \"EUR\":\"\" }}\r\n        </span>\r\n        <span\r\n          *ngIf=\"col.field != 'totalBalance'\"\r\n          pTooltip=\"{{ row[col.field] }}\"\r\n        >\r\n          {{ row[col.field] }}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-list\"\r\n          class=\"p-button-rounded p-button-warning\"\r\n          (click)=\"goToDetails(row)\"\r\n          pTooltip=\"Details\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis',\r\n  templateUrl: './creditor-analysis.component.html',\r\n  styleUrls: ['./creditor-analysis.component.sass'],\r\n})\r\nexport class CreditorAnalysisComponent implements OnInit {\r\n  cols: TableColumn[];\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: any;\r\n  data: any;\r\n  accountNumber: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  criteria: any = {\r\n    limit: 25,\r\n    offset: 0,\r\n    orderBy: 'accountNumber',\r\n    sortOrder: 1,\r\n  };\r\n  pageLimitSizes = [{ value: 25, label: '25' }, { value: 50, label: '50' }, { value: 100, label: '100' }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/creditor' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.cols = [\r\n        {\r\n          header: elem.accountNumber,\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.accountName,\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.count,\r\n          field: 'totlaCount',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.sum,\r\n          field: 'totalBalance',\r\n          align: 'right',\r\n        },\r\n      ];\r\n    });\r\n\r\n    // this.getData();\r\n  } // end of ng o0n init\r\n\r\n  filterChange(query, colName): void {\r\n    this.getData();\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/creditor/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key] && key != 'offset') {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length - 4;\r\n    this._analysisService\r\n      .getCreditorAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.data = res.data;\r\n          this.totalCount = res.count[0]['FOUND_ROWS()'];\r\n          this.displayedDataCount =\r\n            this.totalCount > this.limit ? this.limit : this.totalCount;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField? event.sortField : 'accountNumber';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.criteria.offset -= +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false\r\n  };\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private _authSrvc: AuthService,\r\n    private _messageService: MessageService,\r\n    private _translateService: TranslateService\r\n  ) { }\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    // return next.handle(request);\r\n    const token = this._authSrvc.getToken();\r\n    const tokenizedReq = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    return new Observable((observer) => {\r\n      next.handle(tokenizedReq).subscribe(\r\n        (res: HttpResponse<any>) => {\r\n          // debugger;\r\n          if (res instanceof HttpResponse) {\r\n            observer.next(res);\r\n          }\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          // debugger;\r\n          if (err.error instanceof ErrorEvent || err.error.fromImport) {\r\n            // console.log('this is client side error');\r\n            // errorMsg = `Error: ${error.error.message}`;\r\n          } else {\r\n            this._translateService\r\n              .get('ErrorHandler.' + err.error.msg)\r\n              .toPromise()\r\n              .then((errorMsg) => {\r\n                this._messageService.add({\r\n                  severity: 'error',\r\n                  summary: 'ERROR!',\r\n                  life: 10000,\r\n                  detail: errorMsg,\r\n                });\r\n              });\r\n          }\r\n          observer.error(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import {  TranslateService } from '@ngx-translate/core';\r\n\r\nexport class Choices {\r\n    name: string = 'Select Template';\r\n    value: number = 1;\r\n\r\n    constructor(name: string, value: number) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n\r\n    static getTemplates(): Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP_W-mobel\", 1));\r\n        result.push(new Choices(\"SAP_Cinram\", 2));\r\n        result.push(new Choices(\"Other\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getFileType() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Excel\", 1));\r\n        result.push(new Choices(\"Csv\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getFileClass() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Accounts\", 1));\r\n        result.push(new Choices(\"Posting\", 2));\r\n        result.push(new Choices(\"Helper\", 3));\r\n        return result;\r\n    }\r\n\r\n    static getLocalization() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"en_US\", 1));\r\n        result.push(new Choices(\"de_DE\", 2));\r\n        return result;\r\n    }\r\n\r\n    static getAccountTypes() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"Creditor\", 1));\r\n        result.push(new Choices(\"Debtor\", 2));\r\n        result.push(new Choices(\"GLA_Account\", 3));\r\n        result.push(new Choices(\"Other\", 4));\r\n        return result;\r\n    }\r\n    static getDataSources() : Choices[] {\r\n        let result: Choices[] = [];\r\n\r\n        result.push(new Choices(\"SAP\", 1));\r\n        result.push(new Choices(\"Datev\", 2));\r\n        result.push(new Choices(\"Lexware\", 3));\r\n        return result;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganisationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/organisation';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get() {\r\n    return this._http.get<any>(this._thisURL);\r\n  }\r\n\r\n  insert(p: FormData) {\r\n    return this._http.post<any>(this._thisURL, p);\r\n  }\r\n\r\n  getOne(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  update(p: FormData, id: number) {\r\n    return this._http.put<any>(this._thisURL + '/' + id, p);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this._http.delete<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  getProcedures(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id + '/procedures')\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  \r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  login(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/login', data);\r\n  }\r\n\r\n  resetPassword(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/resetPassword', data);\r\n  }\r\n\r\n  changePassword(data: {password: string}) {\r\n    return this._http.post<any>(this._thisURL + '/profile/resetPassword', data);\r\n  }\r\n\r\n\r\n  adminRegistration(data: any) {\r\n    return this._http.post<any>(this._thisURL + '/adminRegistration', data);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getRole() {\r\n    return localStorage.getItem('role');\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { TextAnalysisDetails } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-word-details',\r\n  templateUrl: './text-analysis-word-details.component.html',\r\n  styleUrls: ['./text-analysis-word-details.component.sass'],\r\n})\r\nexport class TextAnalysisWordDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  keyword: string;\r\n  data: TextAnalysisDetails[] = new Array();\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private _translateService: TranslateService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      {\r\n        label: 'Text Analysis',\r\n        routerLink: '/dashboard/analysis/text/true',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n      {\r\n        label: 'Details',\r\n        routerLink: this._router.url,\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: 'Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n    this.waiting = true;\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.keyword = this._route.snapshot.paramMap.get('key');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'textRelevant',\r\n        width: '6',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'textRelevantComment',\r\n        width: '35',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.reference',\r\n        field: 'reference',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textPosting',\r\n        field: 'textPosting',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textHeader',\r\n        field: 'textHeader',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n\r\n    this._analysisService\r\n      .getTextAnalysisWordDetails(this.orgId, this.prcId, this.keyword)\r\n      .subscribe(res => {\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.waiting = false;\r\n      }, er => {\r\n        this.waiting = false;\r\n      });\r\n\r\n\r\n  } // end of ng on init\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/text/true']);\r\n  }\r\n\r\n\r\n  async exportExcel() {\r\n\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key) && key != 'id' && key != 'procedureId') {\r\n          let translatedKey = await this._translateService.get('DataTableColumns.' + key).toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (element[key] &&\r\n            (key == 'balance' || key == 'debitAmount' || key == 'creditAmount' || key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' || key == 'taxAmountCredit' || key == 'StartingBalance')) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n              }\r\n\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (element[key] &&\r\n            (key == 'documentDate' || key == 'postingDate' || key == 'dueDate' || key == 'dueDateNew' ||\r\n              key == 'executionDate' || key == 'applicationDate' || key == 'StartingBalanceDate')) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString('de-DE', {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\",\r\n              });\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n          }\r\n          // end of formatting\r\n          \r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = { Sheets: { 'text_analysis': worksheet }, SheetNames: ['text_analysis'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"text_analysis\");\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(d, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n\r\n  filterChange(query, colName): void {\r\n    this.waiting = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.data = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.data = this.data.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.waiting = false;\r\n  }\r\n\r\n\r\n} // end of class\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h3 class=\"p-text-center\">{{ keyword }}</h3>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button> -->\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <!-- <th></th> -->\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"col.field != 'textRelevant'\"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <!-- <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor> -->\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Roles } from \"../../shared/model/roles\";\r\nimport { Titles } from \"../../shared/model/titles\";\r\nimport { Users } from \"../../shared/model/users\";\r\nimport { AdminRegistrationService } from \"../service/admin-registration.service\";\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-registration',\r\n  templateUrl: './admin-registration.component.html',\r\n  styleUrls: ['./admin-registration.component.sass']\r\n})\r\nexport class AdminRegistrationComponent implements OnInit {\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, public _translateService: TranslateService,\r\n      private _adminRegistrationService: AdminRegistrationService, private _orgService : OrganisationService) { }\r\n\r\n\r\n  orgs: [] = [];\r\n  titles: Titles[] = Titles.getTitles();\r\n  //roles: Roles[] = Roles.getRoles();\r\n  roles = [{name:'Admin', value: 1}];\r\n\r\n\r\n  userModel: Users;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.RoleId = 1;\r\n    \r\n    this._orgService.get()\r\n    .subscribe(\r\n      (data) => {\r\n        this.orgs = data;\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  submitHandler() {\r\n    this._adminRegistrationService.addUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/dashboard/admin/dashboard']); \r\n\r\n  }\r\n}\r\n"," <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'User_Registration.header' | translate}}</div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\" *ngIf=\"userModel.role==='Manager' || userModel.role==='User'\">\r\n                    <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\" > {{'User_Registration.organisation' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                      <p-dropdown placeholder=\"{{'User_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n                        #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n                        [showClear]=\"true\" [(ngModel)]=\"userModel.OrganisationId\">\r\n                        <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                          <span\r\n                            class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                          </span>\r\n                        </div>\r\n                      </p-dropdown>\r\n                      <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'User_Registration.organisationErrorMsg' | translate}} </small>\r\n          \r\n                    </div>\r\n                  </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0  fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.titlePlaceHolder' | translate}}\" name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n                        <small *ngIf=\"title1.invalid && title1.touched \" class=\"spanCss\"> {{'User_Registration.titleErrorMsg' | translate}} </small> \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #firstname=\"ngModel\"  name=\"firstname\" maxlength=\"25\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                    <small *ngIf=\"firstname.invalid && firstname.touched \" class=\"spanCss \">{{'User_Registration.firstnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                    <small *ngIf=\"lastname.invalid && lastname.touched\" class=\"spanCss \">{{'User_Registration.lastnameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #email=\"ngModel\"  name=\"email\" type=\"text\" maxlength=\"50\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \"> {{'User_Registration.emailErrorMsg' | translate}}</small>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #username=\"ngModel\"  name=\"username\" type=\"text\" maxlength=\"25\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                    <small *ngIf=\"username.invalid && username.touched \" class=\"spanCss \">{{'User_Registration.usernameErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                    <small *ngIf=\"mobileNumber.invalid && mobileNumber.touched\" class=\"spanCss \">{{'User_Registration.mobileNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                    <small *ngIf=\"street.invalid && street.touched\" class=\"spanCss \">{{'User_Registration.streetErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                    <small *ngIf=\"housenumber.invalid && housenumber.touched\" class=\"spanCss \">{{'User_Registration.houseNrErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                    <small *ngIf=\"city.invalid && city.touched\" class=\"spanCss \">{{'User_Registration.cityErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                    <small *ngIf=\"postCode.invalid && postCode.touched\" class=\"spanCss \">{{'User_Registration.postcodeErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                    <small *ngIf=\"country.invalid && country.touched\" class=\"spanCss \">{{'User_Registration.countryErrorMsg' | translate}}</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  addUser(user) {\r\n    // console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user/add', user);\r\n  }\r\n\r\n  editUser(user) {\r\n    // console.log(user)\r\n     return this._http.put<any>(this._thisURL + '/user/edit', user);\r\n  }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getUsers(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId );\r\n  }\r\n}\r\n","\r\nexport class Titles {\r\n\r\n    name: string = \"\"\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    static getTitles(): Titles[] {\r\n        let result: Titles[] = [];\r\n\r\n        result.push(new Titles(\"Frau\"));\r\n        result.push(new Titles(\"Herr\"));\r\n        return result;\r\n    }\r\n\r\n\r\n}","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport {\r\n  PaymentData,\r\n  PaymentDetailsRecord,\r\n} from 'src/app/shared/model/paymentAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport { PaymentAnalysisDetailsData } from 'src/app/shared/model/paymentAnalysis';\r\nimport * as FileSaver from 'file-saver';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-payment-analysis-details',\r\n  templateUrl: './payment-analysis-details.component.html',\r\n  styleUrls: ['./payment-analysis-details.component.sass'],\r\n})\r\nexport class PaymentAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  data: PaymentData[];\r\n  blueData: PaymentDetailsRecord[] = new Array();\r\n  redData: PaymentDetailsRecord[] = new Array();\r\n  greenData: PaymentDetailsRecord[] = new Array();\r\n  relevantData: PaymentAnalysisDetailsData[] = new Array();\r\n  allRecordData: PaymentAnalysisDetailsData[] = new Array();\r\n  basicOptions: any;\r\n  basicData: any;\r\n  blue: any[] = new Array();\r\n  red: any[] = new Array();\r\n  green: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  accountName: string = '';\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  accountNumber: string;\r\n  waiting: boolean = true;\r\n  procedureName: string;\r\n  displayData: number;\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  selected: PaymentAnalysisDetailsData[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  selectedDate: any;\r\n  // for pagination ends\r\n\r\n  @ViewChild('child') child: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _exportDataService: ExportDataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this._translateService.get('PaymentAnalysis').subscribe((elem) => {\r\n      this.waiting = true;\r\n      this.displayData = 1;\r\n      this.detailsOption = 1;\r\n\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        {\r\n          label: elem.label,\r\n          routerLink: '/dashboard/analysis/payment',\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              // debugger;\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 40,\r\n                maxRotation: 90,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 0,\r\n                maxRotation: 0,\r\n                callback: function (label, index, values) {\r\n                  let currencyPipe = new CurrencyPipe('de');\r\n                  label = currencyPipe.transform(label, 'EURO', '');\r\n                  return label;\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n      this.backCriteria = {\r\n        limit: 25,\r\n        offset: 0,\r\n        orderBy: 'id',\r\n        sortOrder: 1,\r\n      };\r\n\r\n      this.paymentOptions = [\r\n        { name: elem.blue, value: 1, color: 'blue !important' },\r\n        { name: elem.red, value: 2, color: 'red' },\r\n        { name: elem.green, value: 3, color: 'green' },\r\n      ];\r\n      this.detailsOptions = [\r\n        { name: elem.sysRelevant, value: 1 },\r\n        { name: elem.userRelevant, value: 2 },\r\n        { name: elem.allRelevant, value: 3 },\r\n      ];\r\n\r\n      this.frozenCols = [\r\n        {\r\n          header: '',\r\n          field: 'paymentRelevant',\r\n          width: '6',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.comment,\r\n          field: 'paymentRelevantComment',\r\n          width: '35',\r\n          align: 'left',\r\n        },\r\n      ];\r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.basicData.datasets.push(\r\n        {\r\n          label: elem.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.blue,\r\n        },\r\n        {\r\n          label: elem.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.red,\r\n        },\r\n        {\r\n          label: elem.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.green,\r\n        }\r\n      );\r\n    });\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center',\r\n      },\r\n      // {\r\n      //   header: 'DataTableColumns.ledgerId',\r\n      //   field: 'ledgerId',\r\n      //   align: 'center',\r\n      // },\r\n      // {\r\n      //   header: 'DataTableColumns.executionDate',\r\n      //   field: 'executionDate',\r\n      //   align: 'center',\r\n      // },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this._analysisService\r\n      .getPaymentAnalysisDetails(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res.data.data;\r\n          this.startDate = res.dateRange[0].mindate;\r\n          this.endDate = res.dateRange[0].maxdate;\r\n          this.blueData = res.data.blue;\r\n          this.redData = res.data.red;\r\n          this.greenData = res.data.green;\r\n          if (!this.accountName) {\r\n            if (this.blueData.length > 0) {\r\n              this.accountName = this.blueData[0].accountName;\r\n            } else if (this.redData.length > 0) {\r\n              this.accountName = this.redData[0].accountName;\r\n            } else if (this.greenData.length > 0) {\r\n              this.accountName = this.greenData[0].accountName;\r\n            }\r\n          }\r\n\r\n          if (!(this.labels.length > 0)) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n              const element = this.data[i];\r\n              this.labels.push(element.monthName + '-' + element.yearName);\r\n              this.blue.push(Math.abs(element.blue.value));\r\n              this.green.push(Math.abs(element.green.value));\r\n              this.red.push(Math.abs(element.red.value));\r\n            }\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  selectRow(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.paymentRelevant) {\r\n      row.paymentRelevant = false;\r\n      row.paymentRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['paymentRelevant'] = false;\r\n        this.selected[index]['paymentRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.paymentRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['paymentRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: PaymentAnalysisDetailsData): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.paymentRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['paymentRelevant'] = true;\r\n      this.selected[index]['paymentRelevantComment'] =\r\n        row.paymentRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantPaymentAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.getData();\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records set as relevant successfully!',\r\n          });\r\n        },\r\n        (er) => {}\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/payment/']);\r\n  }\r\n\r\n  async exportExcel(data) {\r\n    let translatedData = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n      let element = data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { payment_analysis: worksheet },\r\n        SheetNames: ['payment_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'payment_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getData();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getData();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsRelevant(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.relevantData = res;\r\n          // this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getPaymentAnalysisDetailsByAccount(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.selectedProcedure;\r\n    this._exportDataService\r\n      .exportXLSX(\r\n        'payment_analysis',\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        criteriaWithLang\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Payment_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (err) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n\r\n  selectBarData(e) {\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    this.child.updateData(this.selectedDate);\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n    <!-- <p-messages></p-messages> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!waiting\"\r\n        (onDataSelect)=\"selectBarData($event)\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-7\" *ngIf=\"selectedDate\">\r\n      <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n    </div>\r\n    <div class=\"p-col-5 p-text-right\" *ngIf=\"selectedDate\">\r\n      <button type=\"button\" pButton pRipple label=\"All\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\" style=\"margin-top: 20px;\"></button>\r\n    </div>\r\n    <div class=\"p-col-12\">\r\n      <app-payment-details-month  [hidden]=\"!selectedDate\" [month]=\"selectedDate\" [blue]=\"blueData\" [red]=\"redData\" [green]=\"greenData\" #child>\r\n      </app-payment-details-month>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-grid\" *ngIf=\"!selectedDate\" >\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"detailsOptions\" (onChange)=\"changeData($event.value)\" optionLabel=\"name\"\r\n        optionValue=\"value\" [(ngModel)]=\"detailsOption\">\r\n      </p-selectButton>\r\n    </span>\r\n    <div *ngIf=\"detailsOption == 1\">\r\n      <span class=\"p-text-center\">\r\n        <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"displayData\" optionLabel=\"name\" optionValue=\"value\">\r\n        </p-selectButton>\r\n      </span>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"blueData\" *ngIf=\"displayData == 1\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\" class=\"p-button-primary\"\r\n                label=\"{{ 'Analysis.back' | translate }} \" pTooltip=\"{{ 'Analysis.back' | translate }} \"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(blueData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"redData\" *ngIf=\"displayData == 2\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(redData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }} \" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }} \"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtmaxb dataKey=\"id\" [value]=\"greenData\" *ngIf=\"displayData == 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(greenData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\" let-columns>\r\n          <tr>\r\n            <td [attr.colspan]=\"columns.length\">No records found</td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"detailsOption != 1\">\r\n      <p-table #dtrelevant dataKey=\"id\" [value]=\"relevantData\" *ngIf=\"detailsOption != 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel(relevantData)\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"col.field != 'paymentRelevant'\" pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\" (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row[col.field] }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <p-table #dtall dataKey=\"id\" [value]=\"allRecordData\" *ngIf=\"detailsOption == 3\" [resizableColumns]=\"true\"\r\n        styleClass=\"p-datatable-gridlines\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\" [frozenColumns]=\"frozenCols\" frozenWidth=\"500px\" [(selection)]=\"selected\"\r\n        [lazy]=\"true\" [customSort]=\"true\" (onLazyLoad)=\"sort($event)\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-1\" *ngIf=\"!details\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n                class=\"p-button-rounded p-button-primary\" label=\"{{ 'Analysis.back' | translate }} \"\r\n                pTooltip=\"{{ 'Analysis.back' | translate }} \" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n            <div class=\"p-col-4\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportXLSX()\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n              <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n                tooltipPosition=\"bottom\"></button> -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-check\" (click)=\"saveRelevant()\"\r\n                class=\"p-button-primary p-mr-2\" pTooltip=\"{{ 'Analysis.save' | translate }}\" tooltipPosition=\"bottom\"\r\n                label=\"{{ 'Analysis.saveRelevant' | translate }}\"></button>\r\n            </div>\r\n            <div class=\"p-col-7\">\r\n              <!-- Limit options -->\r\n              <p-dropdown [options]=\"pageLimitSizes\" optionValue=\"value\" optionLabel=\"value\" [(ngModel)]=\"limit\"\r\n                (onChange)=\"limitChange($event)\" class=\"p-mr-2\"></p-dropdown>\r\n              <!-- Go to First page -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-double-left\"\r\n                (click)=\"firstPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go previous -->\r\n              <button type=\"button\" [disabled]=\"pageNr === 1\" pButton pRipple icon=\"pi pi-angle-left\"\r\n                (click)=\"previousPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Page number -->\r\n              <input pInputText type=\"number\" min=\"1\" class=\"pageNrInput p-mr-2\"\r\n                (input)=\"pageNrChange($any($event.target).value)\" [value]=\"pageNr\" [placeholder]=\"pageNr\" />\r\n              <!-- Go to next Page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-right\"\r\n                (click)=\"nextPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n              <!-- Go to last page -->\r\n              <button type=\"button\" [disabled]=\"pageNr >= maxPageNr\" pButton pRipple icon=\"pi pi-angle-double-right\"\r\n                (click)=\"lastPage()\" class=\"p-mr-2\" pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n                tooltipPosition=\"bottom\"></button>\r\n\r\n              <!-- dispalyed data of total count -->\r\n              {{ displayedDataCount }} of {{ totalCount }}\r\n              <!-- Clear filter -->\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n                class=\"p-ml-6 clearFilter\" pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\" *ngIf=\"filtersNo > 0\"\r\n                tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n              <input *ngIf=\"\r\n                  col.field != 'paymentRelevant' &&\r\n                  col.field != 'accountNumber' &&\r\n                  col.field != 'accountName'\r\n                \" pInputText type=\"text\" [(ngModel)]=\"backCriteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeBack($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td pEditableColumn pReorderableRowHandle *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'paymentRelevant'\">\r\n                <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.paymentRelevant\"></i>\r\n                <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.paymentRelevant\"></i>\r\n              </span>\r\n              <p-cellEditor *ngIf=\"col.field == 'paymentRelevantComment'\" pTooltip=\"{{ row.paymentRelevantComment }}\">\r\n                <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"row.paymentRelevantComment\"\r\n                    style=\"width: 100%; padding: 5px\" (change)=\"commentChanged(row)\" />\r\n                </ng-template>\r\n                <ng-template pTemplate=\"output\">\r\n                  {{ row.paymentRelevantComment }}\r\n                </ng-template>\r\n              </p-cellEditor>\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row.balance | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                  col.field == 'documentDate' ||\r\n                  col.field == 'dueDate' ||\r\n                  col.field == 'applicationDate'\r\n                \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                  col.field != 'balance' &&\r\n                  col.field != 'documentDate' &&\r\n                  col.field != 'dueDate' &&\r\n                  col.field != 'applicationDate' &&\r\n                  col.field != 'paymentRelevantComment' &&\r\n                  col.field != 'paymentRelevant'\r\n                \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <br /><br /><br />\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.sass']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{'Notfound.errorMsg' | translate}}</p>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../service/procedure.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.sass']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId');\r\n  role = localStorage.getItem('role');\r\n  procedures: [] = [];\r\n  cols: { header, field, align }[] = new Array();\r\n  check = '<i class=\"pi pi-check checkIcon\"></i>';\r\n\r\n  constructor(private _translateService: TranslateService, private _router: Router, private _procedureService: ProcedureService,\r\n    private _confirmationService: ConfirmationService, private _messageService: MessageService,\r\n    private navbar: NavBarComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this._procedureService\r\n      .getProcedures(this.organisationId)\r\n      .subscribe(\r\n        (data) => {\r\n          this.procedures = data;\r\n\r\n        },\r\n        (error) => console.log(error),\r\n        () => { }\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Procedure_Registration.name',\r\n        field: 'name',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.datasource',\r\n        field: 'dataSource',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.data',\r\n        field: 'data',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.analysis',\r\n        field: 'analysis',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'Procedure_Registration.status',\r\n        field: 'status',\r\n        align: 'center'\r\n      },\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n\r\n  dataTable(prc) {\r\n    localStorage.setItem('currentProcedureId', prc.id);\r\n    localStorage.setItem('currentProcedureName', prc.name);\r\n    localStorage.setItem('currentProcedureData', prc.data);\r\n    localStorage.setItem('currentProcedureAnalysis', prc.analysis);\r\n    localStorage.setItem('currentProcedureStatus', prc.status);\r\n    localStorage.setItem('currentProcedureAmount', prc.amount);\r\n    localStorage.setItem('currentProcedureText_word', prc.text_word);\r\n    localStorage.setItem('currentProcedureText_account', prc.text_account);\r\n    localStorage.setItem('currentProcedureCredit', prc.credit);\r\n    localStorage.setItem('currentProcedurePayment', prc.payment);\r\n    localStorage.setItem('currentProcedureDueDate', prc.due_date);\r\n    localStorage.setItem('currentProcedureLiquidity', prc.liquidity);\r\n    localStorage.setItem('currentProcedureDocType', prc.docType);\r\n    this.navbar.updateLocal();\r\n    this._router.navigate(['/dashboard/shared/data']);\r\n\r\n  }\r\n  editProcedure(prc) {\r\n    localStorage.setItem('currentProcedureId', prc.id);\r\n    localStorage.setItem('currentProcedureName', prc.name);\r\n    localStorage.setItem('currentProcedureData', prc.data);\r\n    localStorage.setItem('currentProcedureAnalysis', prc.analysis);\r\n    localStorage.setItem('currentProcedureStatus', prc.status);\r\n    localStorage.setItem('currentProcedureAmount', prc.amount);\r\n    localStorage.setItem('currentProcedureText_word', prc.text_word);\r\n    localStorage.setItem('currentProcedureText_account', prc.text_account);\r\n    localStorage.setItem('currentProcedureCredit', prc.credit);\r\n    localStorage.setItem('currentProcedurePayment', prc.payment);\r\n    localStorage.setItem('currentProcedureDueDate', prc.due_date);\r\n    localStorage.setItem('currentProcedureLiquidity', prc.liquidity);\r\n    localStorage.setItem('currentProcedureDocType', prc.docType);\r\n    this.navbar.updateLocal();\r\n    this._router.navigate(['/dashboard/admin/procedure/edit']);\r\n\r\n  }\r\n  addProcedure() {\r\n    this._router.navigate(['/dashboard/admin/procedure/add']);\r\n  }\r\n\r\n  async reset(prc) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        this._procedureService.reset(this.organisationId, prc.id)\r\n          .subscribe(async (res) => {\r\n            prc.status = 'NOT_IMPORTED';\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.delete_success').toPromise(),\r\n              detail: await this._translateService.get('general_messages.delete_success').toPromise()\r\n            });\r\n          });\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<p-table [value]=\"procedures\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n  responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Add Procedure -->\r\n      <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addProcedure()\"\r\n        class=\"p-button-rounded p-button-primary\"\r\n        pTooltip=\"{{'Procedure_Registration.addProedurePlaceHolder' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\">\r\n    <colgroup>\r\n      <col *ngFor=\"let col of cols\">\r\n      <col>\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n        {{ col.header | translate}}\r\n      </th>\r\n      <th *ngIf=\"role!=='User'\" style=\"width: 10em\"> </th>\r\n\r\n    </tr>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"body\" let-procedure>\r\n    <tr>\r\n      <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n        <i *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'true'\" class=\"pi pi-check checkIcon\"></i> <i\r\n          *ngIf=\"procedure[col.field]?.toString().toLowerCase().trim() == 'false'\" class=\"pi pi-times closeIcon\"></i>\r\n        {{ (procedure[col.field]?.toString().toLowerCase().trim() != 'true' &&\r\n        procedure[col.field]?.toString().toLowerCase().trim() != 'false') ? procedure[col.field] : ''}}\r\n      </td>\r\n      <td style=\"width: 10em\" class=\"p-text-right\">\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" [disabled]=\"procedure.status=='NOT_IMPORTED' || !procedure.data\"\r\n          class=\"p-button-rounded p-button-warning headerColor\" pTooltip=\"{{'Admin_Dashboard.show' | translate}}\"\r\n          tooltipPosition=\"bottom\" (click)=\"dataTable(procedure)\"></button> &nbsp;\r\n        <button  *ngIf=\"role ==='Admin'\" pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'Procedure_Registration.editProedurePlaceHolder' | translate}}\" tooltipPosition=\"bottom\"\r\n          (click)=\"editProcedure(procedure)\"></button> &nbsp;\r\n        <button  *ngIf=\"role ==='Admin'\" pButton (click)=\"reset(procedure)\" icon=\"pi pi-times\" pRipple class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'Admin_Dashboard.delete' | translate}}\"  tooltipPosition=\"bottom\" [disabled]=\"procedure.status=='NOT_IMPORTED'\"></button>\r\n      </td>\r\n\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"4\">{{'Procedure_Registration.NoProceduresFound' | translate}}</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>","import { CurrencyPipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { LiquidityService } from 'src/app/shared/service/liquidity.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity-details',\r\n  templateUrl: './free-liquidity-details.component.html',\r\n  styleUrls: ['./free-liquidity-details.component.sass'],\r\n})\r\nexport class FreeLiquidityDetailsComponent implements OnInit {\r\n  accountNumber: string;\r\n  accountName: string;\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  selectedDateData: any[];\r\n  selectedDate: string;\r\n  cols: TableColumn[];\r\n  tempData: any;\r\n  searching: boolean = true;\r\n  criteria: any = {};\r\n  creditLinesTotal: number;\r\n  bankBalancesTotal: number;\r\n  freeLiquidityTotal: number;\r\n  /// for slider\r\n  baseFromDate: Date;\r\n  baseToDate: Date;\r\n  maxRange: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  rangeValues: number[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    let baseFromDateTemp = this._route.snapshot.paramMap.get('baseFromDate');\r\n    this.baseFromDate = new Date(baseFromDateTemp);\r\n    let baseToDateTemp = this._route.snapshot.paramMap.get('baseToDate');\r\n    this.baseToDate = new Date(baseToDateTemp);\r\n    let fromDateTemp = this._route.snapshot.paramMap.get('fromDate');\r\n    this.fromDate = new Date(fromDateTemp);\r\n    let toDateTemp = this._route.snapshot.paramMap.get('toDate');\r\n    this.toDate = new Date(toDateTemp);\r\n    this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n    this.rangeValues = [\r\n      this.dayDiff(this.baseFromDate, this.fromDate),\r\n      this.dayDiff(this.baseFromDate, this.toDate)\r\n    ];\r\n    this._translateService.get('Liquidity').subscribe((elem) => {\r\n\r\n      this.items = [\r\n        {\r\n          label: elem.freeLiquidity,\r\n          routerLink: '/dashboard/liquidity/freeLiquidity/' +\r\n            baseFromDateTemp + '/' + baseToDateTemp + '/' +\r\n            fromDateTemp + '/' + toDateTemp,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    })\r\n\r\n\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                // debugger;\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.getData();\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.fromDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n  \r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  getData() {\r\n    this.searching = true;\r\n    let start = this.fromDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    this._liquidityService\r\n      .getFreeLiquidityDetails(this.orgId, this.prcId, this.accountNumber, start, end)\r\n      .subscribe(\r\n        (res) => {\r\n          this.accountName = res.bankBalances.accountName;\r\n          this.labels = res.bankBalances.labels;\r\n          this.basicData = {\r\n            labels: res.bankBalances.labels,\r\n            datasets: [\r\n              {\r\n                type: 'line',\r\n                label: 'Credit Lines',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: res.creditLines,\r\n              },\r\n              {\r\n                type: 'line',\r\n                label: 'Free Liquidity',\r\n                fill: false,\r\n                data: res.freeLiquidity,\r\n                borderColor: '#E5A58B',\r\n                borderWidth: 2,\r\n              },\r\n              {\r\n                type: 'bar',\r\n                label: 'Bank Balances',\r\n                backgroundColor: '#88FF88',\r\n                borderColor: '#58dF58',\r\n                data: res.bankBalances.bankBalances,\r\n              },\r\n            ],\r\n          };\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  // on clock on a bar in the chart\r\n  selectBarData(e) {\r\n    this.searching = true;\r\n    this.selectedDateData = new Array();\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    let tempDate =\r\n      this.selectedDate.slice(this.selectedDate.length - 4) +\r\n      '-' +\r\n      this.selectedDate.slice(3, 5) +\r\n      '-' +\r\n      this.selectedDate.slice(0, 2);\r\n    // debugger;\r\n    this._liquidityService\r\n      .getFreeLiquidityDetailsRecords(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        tempDate\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.selectedDateData = res;\r\n          this.tempData = res;\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n    // this.calculateTotals();\r\n  }\r\n\r\n  // calculateTotals() {\r\n  //   this.creditLinesTotal = 0;\r\n  //   this.bankBalancesTotal = 0;\r\n  //   this.freeLiquidityTotal = 0;\r\n  //   for(let data of this.selectedDateData) {\r\n  //     this.bankBalancesTotal += data.bankBalance;\r\n  //     this.creditLinesTotal += data.creditLine;\r\n  //     this.freeLiquidityTotal += data.bankBalance + data.creditLine;\r\n  // }\r\n  // }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.selectedDateData = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.selectedDateData = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.selectedDateData = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.selectedDateData = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.selectedDateData = this.selectedDateData.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.selectedDateData = this.selectedDateData.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{ accountName }}</h4>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{fromDate | date}} - {{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-3\"></div>\r\n  <div class=\"p-col-1 p-text-right\">{{baseFromDate | date}}</div>\r\n  <div class=\"p-col-4\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\" [min]=\"0\"\r\n      [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\">{{baseToDate | date}}</div>\r\n  <div class=\"p-col-1\">\r\n    <button pButton pRipple type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\" style=\"margin-top: -18px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"\r\n        (onDataSelect)=\"selectBarData($event)\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\" *ngIf=\"selectedDate\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"selectedDateData\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" [style]=\"{'width': (col.width? col.width : 200) +'px'}\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'accountNumber' || col.field != 'accountName'\" />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"col.field!='balance' && col.field !='documentDate' && col.field !='executionDate' && col.field!='dueDate' && col.field!='amountRelevantComment' && col.field!='amountRelevant'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <!-- <ng-template pTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"p-text-right\">Totals</td>\r\n          <td class=\"p-text-right\">\r\n            {{ bankBalancesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ creditLinesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ freeLiquidityTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </ng-template> -->\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<br /><br />","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostingDataService } from '../../service/posting-data.service';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as FileSaver from 'file-saver';\r\nimport { Word } from '../../model/word';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-susa',\r\n  templateUrl: './susa.component.html',\r\n  styleUrls: ['./susa.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class SusaComponent implements OnInit {\r\n  organisationId: number = +localStorage.getItem('organisationId');\r\n  procedureId: number = +localStorage.getItem('currentProcedureId');\r\n  fromDate: Date = new Date();\r\n  toDate: Date = new Date();\r\n  procedureName: string = '';\r\n  cols: TableColumn[] = new Array();\r\n  data: any[] = new Array();\r\n  waiting: boolean = false;\r\n  criteria: any = {};\r\n  completeWords: Word[] = new Array();\r\n  filtersNo: number = 0;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  tempData: any;\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _postingDataService: PostingDataService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private datepipe: DatePipe,\r\n    private _translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.waiting = true;\r\n    this.items = [\r\n      {\r\n        label: 'SUSA',\r\n        routerLink: '/dashboard/shared/data/susa',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n      routerLinkActiveOptions: { exact: true },\r\n    };\r\n\r\n    this.organisationId = +localStorage.getItem('organisationId');\r\n    this.procedureId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._postingDataService\r\n      .getDefaultSusaDateRange(this.organisationId, this.procedureId)\r\n      .subscribe(\r\n        (res) => {\r\n          this.fromDate = new Date(Date.parse(res[0].mindate));\r\n          this.toDate = new Date(Date.parse(res[0].maxdate));\r\n          // let minYear = this.fromDate.getFullYear();\r\n          // debugger;\r\n          // if (isNaN(minYear)) {\r\n          //   this.fromDate = this.toDate = new Date();\r\n          //   this.waiting = false;\r\n          //   this._messageService.add({\r\n          //     severity: 'error',\r\n          //     summary: 'ERROR',\r\n          //     life: 10000,\r\n          //     detail: 'There is no dates in this procedure',\r\n          //   });\r\n          // } else {\r\n            this.getData();\r\n          // }\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Susa.accountType',\r\n        field: 'accountType',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.accountnumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Susa.startingBalance',\r\n        field: 'famount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.sumDebit',\r\n        field: 'debitAmount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.sumCredit',\r\n        field: 'creditAmount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.balance',\r\n        field: 'inamount',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Susa.endingBalance',\r\n        field: 'outamount',\r\n        align: 'right',\r\n      },\r\n    ];\r\n  } // end of ng on init\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    let fdate = this.datepipe.transform(this.fromDate, 'yyyy-MM-dd');\r\n    let tdate = this.datepipe.transform(this.toDate, 'yyyy-MM-dd');\r\n    this._postingDataService\r\n      .getSusa(\r\n        this.organisationId,\r\n        this.procedureId,\r\n        fdate,\r\n        tdate,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          if (res && res.length) {\r\n            res.forEach((element) => {\r\n              element.accountNumber = Number.parseInt(element.accountNumber, 10)\r\n                ? Number.parseInt(element.accountNumber, 10)\r\n                : element.accountNumber;\r\n              element.famount = Number.parseFloat(element.famount)\r\n                ? Number.parseFloat(element.famount)\r\n                : 0;\r\n              element.debitAmount = Number.parseFloat(element.debitAmount)\r\n                ? Number.parseFloat(element.debitAmount)\r\n                : 0;\r\n              element.creditAmount = Number.parseFloat(element.creditAmount)\r\n                ? Number.parseFloat(element.creditAmount)\r\n                : 0;\r\n              element.inamount = Number.parseFloat(element.inamount)\r\n                ? Number.parseFloat(element.inamount)\r\n                : 0;\r\n              element.outamount = element.famount + element.inamount;\r\n            });\r\n          }\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField;\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    // this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.waiting) this.getData();\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/shared/data']);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      // debugger;\r\n      for (const key in element) {\r\n        if (Object.prototype.hasOwnProperty.call(element, key)) {\r\n          let translatedKey = await this._translateService\r\n            .get('Susa.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'famount' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'inamount' ||\r\n              key == 'outamount')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { Susa: worksheet },\r\n        SheetNames: ['Susa'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'Susa');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key]) {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length;\r\n    if (!query) {\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element && element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toString().toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.waiting = false;\r\n  }\r\n}\r\n","<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<!-- <div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{procedureName}}</h2>\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-8 p-mb-4 p-text-right\">\r\n    <p-toast></p-toast>\r\n    <label>{{ 'Susa.from' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"fromDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <label>{{ 'Susa.to' | translate}} : </label>\r\n    <p-calendar [(ngModel)]=\"toDate\" [minDate]=\"fromDate\" [maxDate]=\"toDate\" [monthNavigator]=\"true\"\r\n      [yearNavigator]=\"true\" yearRange=\"{{fromDate.getFullYear()+':'+toDate.getFullYear()}}\"\r\n      dateFormat=\"dd.mm.yy\"></p-calendar>\r\n    &nbsp;\r\n    <button type=\"button\" pButton pRipple icon=\"pi pi-filter\" [disabled]=\"waiting\"\r\n      class=\" p-button-primary\" label=\"{{'Susa.search' | translate}}\" (click)=\"getData();\"\r\n      pTooltip=\"{{ 'Susa.search' | translate}} \" tooltipPosition=\"bottom\">\r\n      <i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i>\r\n    </button>\r\n  </div>\r\n  <!-- <div class=\"p-sm-4\">\r\n    <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n  </div> -->\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\" *ngIf=\"waiting\"></p-progressBar>\r\n\r\n    <p-table #dt [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\" >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\">\r\n            <!-- Add Procedure -->\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-arrow-left\" (click)=\"goBack()\"\r\n              class=\"p-button-primary\" label=\"{{ 'Susa.daten' | translate}} \"\r\n              pTooltip=\"{{ 'Susa.datenToolTip' | translate}} \" tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n          <div class=\"p-col-2\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n              tooltipPosition=\"bottom\"></button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" [style]=\"{'width': (col.width? col.width : 150) +'px'}\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th  pSortableColumn=\"{{col.field}}\"  pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n           *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">{{col.header | translate}}</span>\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon></th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n              *ngIf=\"col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName'\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" />\r\n\r\n            <!-- <p-autoComplete [suggestions]=\"completeWords\" (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\" (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\" [minLength]=\"1\" [inputStyle]=\"{width:'90%'}\" [style]=\"{width:'90%'}\" appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"></p-autoComplete> -->\r\n\r\n            <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <div\r\n              *ngIf=\"(col.field == 'accountType' || col.field == 'accountNumber' || col.field == 'accountName');then withoutFilter else withFilter\">\r\n            </div>\r\n            <ng-template #withoutFilter>\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n              </span>\r\n            </ng-template>\r\n            <ng-template #withFilter>\r\n              {{ +row[col.field] | currency:'EUR':''}}\r\n            </ng-template>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"4\">{{'not Found' | translate}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RoleServiceService } from \"../service/role-service.service\";\r\nimport { UsersService } from \"../service/users.service\";\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-procedure-registration',\r\n  templateUrl: './procedure-registration.component.html',\r\n  styleUrls: ['./procedure-registration.component.sass']\r\n})\r\nexport class ProcedureRegistrationComponent implements OnInit {\r\n\r\n  orgs: [] = [];\r\n  dataSources: Choices[] = Choices.getDataSources();\r\n  organisationId = localStorage.getItem('organisationId')\r\n\r\n  procedureModel: Procedures = new Procedures();\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _roleServiceService: RoleServiceService,\r\n     private _usersService: UsersService, private _orgService : OrganisationService, public _translateService: TranslateService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n  }\r\n\r\n\r\n  submitHandler() {\r\n    this._roleServiceService.addProcedure(this.procedureModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Registered successfully!',\r\n          detail: 'Registered successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'Procedure_Registration.registrationHeader' | translate}} </div>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.organisation' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.organisationPlaceHolder' | translate}}\" name=\"client\" optionValue=\"id\" optionLabel=\"name\"\r\n              #client=\"ngModel\" [options]=\"orgs\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.OrganisationId\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"client.invalid && client.touched \"> {{'Procedure_Registration.organisationErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.datasource' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-dropdown placeholder=\"{{'Procedure_Registration.datasourcePlaceHolder' | translate}}\" name=\"dataSource\" optionValue=\"name\" optionLabel=\"name\"\r\n              #dataSource=\"ngModel\" [options]=\"dataSources\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\"\r\n              [showClear]=\"true\" [(ngModel)]=\"procedureModel.dataSource\">\r\n              <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                <span\r\n                  class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\">\r\n                </span>\r\n              </div>\r\n            </p-dropdown>\r\n            <small class=\"spanCss\" *ngIf=\"dataSource.invalid && dataSource.touched \"> {{'Procedure_Registration.datasourceErrorMsg' | translate}} </small>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"procedureModel.name\">\r\n            <small *ngIf=\"procedureName.invalid && procedureName.touched \" class=\"spanCss \">{{'Procedure_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.data' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"data\" binary=\"true\" [(ngModel)]=\"procedureModel.data\" inputId=\"data\"></p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle\"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n            <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\">\r\n            </p-checkbox>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Choices } from \"../../shared/model/choices\";\r\nimport { ImportService } from \"../service/import.service\";\r\nimport { FileToImport } from \"../../shared/model/file-import\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.sass']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n\r\n\r\n  items: MenuItem[] = [];\r\n  activeIndex: number = 0;\r\n  uploadedFiles: any[] = [];\r\n  templates: Choices[] = Choices.getTemplates();\r\n  fileTypes: Choices[] = Choices.getFileType();\r\n  fileClass: Choices[] = Choices.getFileClass();\r\n  locals: Choices[] = Choices.getLocalization();\r\n  accountTypes: Choices[] = Choices.getAccountTypes();\r\n  selectedTemplate: any;\r\n  waiting: boolean = false;\r\n  filesList: FileToImport[] = new Array();\r\n  currentFileIndex: number = -1;\r\n  accountsCustomTemplate: any = {};\r\n  postingCustomTemplate: any = {};\r\n  headCustomTemplate: any = {};\r\n  orgs: Organisation[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  procedures: Procedures[] = new Array();\r\n  selectedProcedureId: number = -1;\r\n  tempheader: any = {};\r\n\r\n\r\n  constructor(public _translateService: TranslateService ,private _messageService: MessageService, private _importService: ImportService, private _orgService: OrganisationService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._translateService.get('Admin_Import').subscribe(elem => {\r\n\r\n      this.items = [\r\n        {\r\n          label: elem.firstStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 0;\r\n            // this._messageService.add({severity:'info', summary:'First Step', detail: event.item.label});\r\n          }\r\n        },\r\n        {\r\n          label: elem.secondStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 1;\r\n          }\r\n        },\r\n        {\r\n          label: elem.thirdStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 2;\r\n          }\r\n        },\r\n        {\r\n          label: elem.firthStepLabel,\r\n          command: (event: any) => {\r\n            this.activeIndex = 3;\r\n          }\r\n        }\r\n      ];\r\n  \r\n  \r\n      this._orgService.get()\r\n        .subscribe(\r\n          (data) => {\r\n            this.orgs = data;\r\n          },\r\n          (error) => console.log(error)\r\n        );\r\n    })\r\n\r\n\r\n\r\n  } \r\n  // end of ngOnInit\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  selectTemplatHandler(e) {\r\n    this.filesList = [];\r\n    this.addFormData();\r\n  }\r\n\r\n  removeFormData(index: number) {\r\n    this.filesList.splice(index, 1);\r\n  }\r\n\r\n  addFormData() {\r\n    let f = new FileToImport();\r\n    f.OrganisationId = this.selectedOrgId;\r\n    f.procedureId = this.selectedProcedureId;\r\n    f.defaultTemplate = this.selectedTemplate;\r\n    this.filesList.push(f);\r\n  }\r\n\r\n  goToImport(wizardIndex, fileIndex) {\r\n    this.currentFileIndex = fileIndex;\r\n    this.activeIndex = ++wizardIndex;\r\n  }\r\n\r\n  goNext(index) {\r\n    this.activeIndex = ++index;\r\n  }\r\n\r\n  goPrev(index) {\r\n    this.activeIndex = --index;\r\n  }\r\n\r\n  setTemplate() {\r\n    this.filesList[this.currentFileIndex].defaultTemplate = this.postingCustomTemplate;\r\n  }\r\n\r\n  deleteFileFromServer(f: FileToImport, index) {\r\n    this.waiting = true;\r\n\r\n    const nameOnServer = f?.nameOnServer;\r\n    if (nameOnServer) {\r\n      this._importService\r\n        .deleteFile({nameOnServer: nameOnServer})\r\n        .subscribe(res => {\r\n          this.waiting = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'File Deleted!',\r\n            detail: 'the file ' + this.filesList[index].orginalName + ' deleted successfuly!'\r\n          });\r\n          this.removeFormData(index);\r\n\r\n        },\r\n          err => {\r\n            this.waiting = false;\r\n            this._messageService.add({\r\n              severity: 'warning',\r\n              summary: 'File not Deleted!',\r\n              detail: 'the file ' + this.filesList[index].orginalName + ' not found on the server!'\r\n            });\r\n          });\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'File not Deleted!',\r\n        detail: 'There is no file selected!'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // upload step 1\r\n  uploadFirstStep(f: FileToImport, index) {\r\n    this.waiting = true;\r\n    // send to back-end\r\n    // if type excel to excel-head\r\n    // else if type csv to csv-head\r\n    // else warn user to select type\r\n    // get headers orginal name  and name on the server and set them to f\r\n    const file: File = f?.file;\r\n    const fileType: number = f?.fileType?.value;\r\n    const local: number = f?.local?.value;\r\n    const fileClass: number = f?.fileClass?.value;\r\n    const temmplate: number = this.selectedTemplate;\r\n    const formData: FormData = new FormData();\r\n    if (!!file) {\r\n      formData.append('excel', file);\r\n    } else {\r\n      this._messageService.add({\r\n        severity: 'warning',\r\n        summary: 'Please choose a file',\r\n        detail: 'You should chose a posting file!'\r\n      });\r\n      return;\r\n    }\r\n\r\n    formData.append('data', JSON.stringify({\r\n      template: temmplate,\r\n      fileType: fileType,\r\n      fileClass: fileClass,\r\n      local: local\r\n    }));\r\n\r\n    this._importService\r\n      .uploadFile(formData)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.tempheader = res.headers;\r\n        f.fileHeader = new Array();\r\n        for (let index = 0; index < res.headers.length; index++) {\r\n          const element = res.headers[index];\r\n          f.fileHeader.push({name: element});\r\n        }\r\n        // f.fileHeader = res.headers;\r\n        f.nameOnServer = res.fileName;\r\n        f.orginalName = res.orginalName;\r\n        f.defaultTemplate = res.defaultTemplate;\r\n        if (fileClass === 1) {\r\n          this.accountsCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 2) {\r\n          this.postingCustomTemplate = res.defaultTemplate;\r\n        } else if (fileClass === 3) {\r\n          this.headCustomTemplate = res.defaultTemplate;\r\n        }\r\n        f.uploaded = true;\r\n        this.currentFileIndex = index;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File uploaded!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' uploaded successfuly! you can upload another file now'\r\n        });\r\n      }, err => {\r\n        // console.log('error: ' + err);\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: err.error.msg\r\n        });\r\n      });\r\n\r\n  }\r\n  // upload step 1 ends\r\n\r\n\r\n  UploadHandler(event, f: FileToImport, index: number) {\r\n    const selectedFiles: FileList = event.files;\r\n    f.file = selectedFiles[0];\r\n    f.index = index;\r\n  }\r\n\r\n\r\n  importThisFile() {\r\n    this.waiting = true;\r\n\r\n    const theFile = this.filesList[this.currentFileIndex];\r\n\r\n    const filePath = theFile.nameOnServer;\r\n    const fileType = theFile.fileType?.value;\r\n    const fileClass = theFile.fileClass?.value;\r\n    const local = theFile.local?.value;\r\n    const accountType = theFile.accountType?.value;\r\n    const template = theFile.defaultTemplate;\r\n    const OrganisationId = theFile.OrganisationId;\r\n    const procedureId = theFile.procedureId;\r\n\r\n    const data = {\r\n      data: {\r\n        template: template,\r\n        fileType: fileType,\r\n        fileClass: fileClass,\r\n        local: local,\r\n        filePath: filePath,\r\n        accountType: accountType,\r\n        OrganisationId: OrganisationId,\r\n        procedureId: procedureId\r\n      }\r\n    }\r\n\r\n    this._importService\r\n      .importFile(data)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n\r\n        this.waiting = false;\r\n        this.filesList[this.currentFileIndex].imported = true;\r\n        // console.dir(this.filesList);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'File imported!',\r\n          detail: 'the file ' + this.filesList[this.currentFileIndex].orginalName + ' imported successfuly! you can import another file now'\r\n        });\r\n      }, err => {\r\n        this.waiting = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: err.error.msg\r\n        });\r\n      });\r\n\r\n  } // end of import this file function\r\n\r\n\r\n  filterMapping(event) {\r\n    \r\n    let filtered : any[] = [];\r\n    let query = event.query;\r\n\r\n    for(let i = 0; i < this.filesList[this.currentFileIndex].fileHeader.length; i++) {\r\n        let header = this.filesList[this.currentFileIndex].fileHeader[i];\r\n        if (header.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n            filtered.push(header);\r\n        }\r\n    }\r\n    \r\n    this.filesList[this.currentFileIndex].fileHeader = filtered;\r\n} // end of filter mapping function\r\n\r\n\r\nrestoreFileHeaders() {\r\n  this.filesList[this.currentFileIndex].fileHeader = this.tempheader;\r\n}\r\n\r\n\r\n}\r\n","<p-card>\r\n  <p-toast></p-toast>\r\n  <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\" [readonly]=\"true\"></p-steps>\r\n  <!-- {{filesList[currentFileIndex]?.orginalName}} -->\r\n</p-card>\r\n<br />\r\n\r\n<p-card>\r\n  <!-- ********************** Step 1 satrts ******************** -->\r\n  <!-- <div class=\"p-grid\"> -->\r\n  <!-- \r\n    <div class=\"p-col-1\">\r\n    </div> -->\r\n  <div [hidden]=\"activeIndex != 0\" class=\"p-sm-12\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h2 >{{'Admin_Import.firstStepHeader' | translate}}</h2>\r\n      </div>\r\n      <!-- <div class=\"p-col-4\" *ngIf=\"waiting\">\r\n        <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n      </div> -->\r\n      <div class=\"p-col-4 fontStyle\">\r\n        <h3>{{filesList[currentFileIndex]?.orginalName}}</h3>\r\n      </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-10\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n              placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n              (onChange)=\"orgChangedHandler($event)\" [disabled]=\"selectedProcedureId > 0\" [style]=\"{width:'300px'}\">\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedOrgId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedProcedureId\"\r\n              placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required [disabled]=\"selectedTemplate\"\r\n              [style]=\"{width:'300px'}\"></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"p-col-10\" *ngIf=\"selectedProcedureId>0\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-2\">\r\n            <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectTemplate' | translate}} </label>\r\n          </div>\r\n          <div class=\"p-col-5\">\r\n            <p-dropdown [options]=\"templates\" [(ngModel)]=\"selectedTemplate\"\r\n              placeholder=\"{{'Admin_Import.selectTemplatePlaceholder' | translate}}\" optionLabel=\"name\"\r\n              optionValue=\"value\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\"\r\n              (onChange)=\"selectTemplatHandler($event)\" [style]=\"{width:'300px'}\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"p-grid\">\r\n        <p-messages></p-messages>\r\n      </div>\r\n      <div class=\"p-sm-12\" *ngFor=\"let f of filesList; let i = index;\" [hidden]=\"!selectedTemplate\">\r\n        <!-- {{f | json}} -->\r\n        <br><br>\r\n\r\n        <div class=\"p-grid\" *ngIf=\"f.imported!==true\">\r\n          <div class=\"p-sm-12\">\r\n            <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <!-- maxFileSize=\"100000000\" -->\r\n            <p-fileUpload name=\"excel\" mode=\"advanced\" [showUploadButton]=\"false\" customUpload=\"true\"\r\n              (uploadHandler)=\"UploadHandler($event, f, i)\" uploadLabel=\"Set File\" [auto]=\"true\"\r\n              chooseLabel=\"{{'Admin_Import.searchLabel' | translate}}\"\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, .csv, text/plain\">\r\n              <ng-template pTemplate=\"content\">\r\n\r\n              </ng-template>\r\n            </p-fileUpload>\r\n            <span *ngIf=\"f.file\">{{f?.file?.name}} - {{ (f?.file?.size / 1024) | number: '1.0-2' }} KB</span>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileTypes\" [(ngModel)]=\"f.fileType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileFormat' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <p-dropdown [options]=\"fileClass\" [(ngModel)]=\"f.fileClass\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectFileType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==1\">\r\n            <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"f.accountType\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectAccountType' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\" *ngIf=\"f.fileClass?.value==2 && f.fileType?.value==2\">\r\n            <p-dropdown [options]=\"locals\" [(ngModel)]=\"f.local\" [style]=\"{width:'200px'}\"\r\n              placeholder=\"{{'Admin_Import.selectLocalization' | translate}}\" optionLabel=\"name\" [showClear]=\"true\"\r\n              [filter]=\"true\" filterBy=\"name\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Admin_Import.'+item.name | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-3\">\r\n            <span class=\"p-buttonset\">\r\n              <button pButton type=\"button\" icon=\"pi pi-upload\" iconPos=\"left\"\r\n                label=\"{{'Admin_Import.uploadLabel' | translate}}\" (click)=\"uploadFirstStep(f, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || f.uploaded || waiting\"\r\n                class=\"p-button-raised p-button-rounded\"><i class=\"pi pi-spinner pi-spin\" *ngIf=\"waiting\"></i></button>\r\n              <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n                class=\"p-button-raised p-button-rounded\" (click)=\"goToImport(0, i)\"\r\n                [disabled]=\"!f.file || !f.fileType || !f.fileClass || !f.uploaded || f.imported\"></button>\r\n            </span>\r\n            &nbsp;\r\n            <button pButton pRipple [disabled]=\"!f.uploaded || waiting\" type=\"button\" icon=\"pi pi-times\"\r\n              class=\"p-button-rounded p-button-danger\" (click)=\"deleteFileFromServer(f, i)\"></button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div class=\"p-grid\" *ngIf=\"selectedTemplate\">\r\n      <div class=\"p-col-10\">\r\n        <br><br>\r\n        <button pButton type=\"button\" icon=\"pi pi-plus\" iconPos=\"left\"\r\n          label=\"{{'Admin_Import.anotherFile' | translate}}\" (click)=\"addFormData()\"></button>\r\n      </div>\r\n      <div class=\"p-col-2\"></div>\r\n    </div>\r\n\r\n\r\n    <br><br>\r\n    <!-- <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(0)\"></button> -->\r\n  </div>\r\n  <!-- </div> -->\r\n\r\n\r\n  <!-- ********************** Step 2 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 1\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n    {{'Admin_Import.secondStepHeader' | translate}}\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(1)\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.nextLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goNext(1)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n  <!-- ********************** Step 3 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 2\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n    <br>\r\n    <p-accordion *ngIf=\"filesList[currentFileIndex]\">\r\n      <p-accordionTab header=\"{{'Admin_Import.thirdStepHeader' | translate}}\"\r\n        *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 1\" [selected]=\"true\">\r\n        <div class=\"p-grid\">\r\n          <!-- p-sm-12 p-lg-8 -->\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.databaseField' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.dataType' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> {{'Admin_Import.mappingField' | translate}} </b></h2>\r\n          </div>\r\n\r\n          <!-- <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.client' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div> -->\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b> {{'Admin_Import.companyCode' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountNumber' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountName' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.accountTypeIdInternal' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountTypeIdInternal']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.nameAffix1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['nameAffix1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.nameAffix2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['nameAffix2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.VATId' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['VATId']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.taxNumber' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.street' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['street']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.postCode' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.city' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['city']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.country' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['country']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.contactPerson' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contactPerson']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.phone' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['phone']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.email' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['email']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankSortCode1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankSortCode1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder1' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankSortCode2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankSortCode2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder2' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankName3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankName3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.bankAccountNo3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['bankAccountNo3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.countryCode3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['countryCode3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.iBAN_No3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['iBAN_No3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.swift_code3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['swift_code3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.differentAccountHolder3' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-6 p-lg-2\"><h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4></div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['differentAccountHolder3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </p-accordionTab>\r\n      <p-accordionTab header=\"Posting Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 2\"\r\n        [selected]=\"true\">\r\n\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.databaseField' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h2><b> {{'Admin_Import.dataType' | translate}} </b></h2>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <h2><b> {{'Admin_Import.mappingField' | translate}} </b></h2>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.client' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <!-- <p-autoComplete [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [suggestions]=\"filesList[currentFileIndex].fileHeader\" (completeMethod)=\"filterMapping($event)\"\r\n              [forceSelection]=\"true\" [dropdown]=\"true\" [virtualScroll]=\"true\"\r\n              (onBlur)=\"restoreFileHeaders()\" (onKeyUp)=\"restoreFileHeaders()\"\r\n              (onSelect)=\"restoreFileHeaders()\"></p-autoComplete> -->\r\n\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['client']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.executionDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['executionDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.assignment' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['assignment']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.recordNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['recordNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debtorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debtorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditorNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditorNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.transactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['transactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDocument' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDocument']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textPosting' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textPosting']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.applicationDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['applicationDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.companyCode' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['companyCode']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.fiscalYear' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['fiscalYear']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingPeriod' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingPeriod']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.reference' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['reference']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.GLAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['GLAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountType']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountGLAccountNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountGLAccountNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountCreditorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountCreditorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountDebtorNo' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountDebtorNo']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dueDate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.dateDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['dueDate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textHeader' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['textHeader']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.accountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['accountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contraAccountName' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contraAccountName']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balance' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balance']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.balanceTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['balanceTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.debitAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['debitAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.creditAmountTransactionCurrency' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.numberDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['creditAmountTransactionCurrency']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.exchangeRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['exchangeRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.cashDiscount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['cashDiscount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.postingKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['postingKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.salesTaxKey' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['salesTaxKey']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.euTaxRate' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['euTaxRate']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmount' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmount']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountDebit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountDebit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.taxAmountCredit' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['taxAmountCredit']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.stackNumber' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['stackNumber']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.costCenter1' | translate}}</div>\r\n          <div class=\"p-sm-6 p-lg-2\">{{'Admin_Import.textDataType' | translate}}</div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['constCenter1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.costCenter2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['CostCenter2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.identifierBalanceCarryforward' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['identifierBalanceCarryforward']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.generalReversal' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['generalReversal']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.ledgerId' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['ledgerId']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.documentLink' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['documentLink']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation1' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation1']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation2' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation2']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation3' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation3']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation4' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation4']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation5' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation5']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation6' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation6']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation7' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation7']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.typeDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['typeDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.contentDocumentInformation8' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-6 p-lg-2\">\r\n            <h4><b>{{'Admin_Import.textDataType' | translate}}</b></h4>\r\n          </div>\r\n          <div class=\"p-sm-12 p-lg-8\">\r\n            <p-dropdown [(ngModel)]=\"filesList[currentFileIndex]?.defaultTemplate['contentDocumentInformation8']\"\r\n              [options]=\"filesList[currentFileIndex].fileHeader\" [filter]=\"true\" [virtualScroll]=\"true\"\r\n              [style]=\"{width:'400px'}\" [autoDisplayFirst]=\"false\" optionLabel=\"name\" optionValue=\"name\"\r\n              filterBy=\"name\"></p-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </p-accordionTab>\r\n\r\n      <p-accordionTab header=\"Head Mapping\" *ngIf=\"filesList[currentFileIndex]?.fileClass?.value === 3\"\r\n        [selected]=\"true\">\r\n        Head Mapping is hear\r\n      </p-accordionTab>\r\n    </p-accordion>\r\n\r\n    <br><br>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"Previous\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"goPrev(2)\"></button>\r\n      <button pButton type=\"button\" label=\"Next\" class=\"p-button-raised p-button-rounded\" (click)=\"goNext(2)\"></button>\r\n    </span>\r\n  </div>\r\n\r\n\r\n\r\n  <!-- ********************** Step 4 satrts ******************** -->\r\n  <div [hidden]=\"activeIndex != 3\" class=\"card\">\r\n    <div class=\"p-grid\">\r\n      <div class=\"p-col-4\"></div>\r\n      <div class=\"p-col-4\">\r\n        <h3> {{filesList[currentFileIndex]?.orginalName}}</h3>\r\n        <br><br>\r\n      </div>\r\n      <div class=\"p-col-4\"></div>\r\n    </div>\r\n\r\n\r\n    <p-messages></p-messages>\r\n\r\n    <br><br>\r\n    <div class=\"p-col-8\">\r\n      <p-progressSpinner *ngIf=\"waiting\"></p-progressSpinner>\r\n    </div>\r\n    <span class=\"p-buttonset\">\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.previousLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" (click)=\"goPrev(3)\"></button>\r\n      <button pButton type=\"button\" label=\"Import\" class=\"p-button-raised p-button-rounded\"\r\n        (click)=\"importThisFile()\"></button>\r\n      <button pButton type=\"button\" label=\"{{'Admin_Import.continueLabel' | translate}}\"\r\n        class=\"p-button-raised p-button-rounded\" [disabled]=\"!filesList[currentFileIndex]?.imported\"\r\n        (click)=\"goPrev(1)\"></button>\r\n    </span>\r\n  </div>\r\n</p-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Procedures } from \"../../shared/model/procedures\";\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ProcedureService } from '../service/procedure.service';\r\n\r\n@Component({\r\n  selector: 'app-procedure-edit',\r\n  templateUrl: './procedure-edit.component.html',\r\n  styleUrls: ['./procedure-edit.component.sass']\r\n})\r\nexport class ProcedureEditComponent implements OnInit {\r\n\r\n  procedureModel: Procedures;\r\n  role: string;\r\n\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService,\r\n    private _confirmationService: ConfirmationService, public _translateService: TranslateService,\r\n    private _procedureService: ProcedureService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.role = localStorage.getItem('role');\r\n    this.procedureModel = new Procedures();\r\n    this.procedureModel.id = +localStorage.getItem('currentProcedureId');\r\n    this._procedureService.getOne(this.procedureModel.id)\r\n      .subscribe(procedure => this.procedureModel = procedure);\r\n  }\r\n\r\n  async submitHandler() {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_update').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.update').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        if (this.procedureModel.amount && this.procedureModel.credit &&\r\n          this.procedureModel.text_account && this.procedureModel.text_word &&\r\n          this.procedureModel.payment && this.procedureModel.due_date)\r\n          this.procedureModel.status = \"CALCULATED\";\r\n        else if (this.procedureModel.amount || this.procedureModel.credit ||\r\n          this.procedureModel.text_account || this.procedureModel.text_word ||\r\n          this.procedureModel.payment || this.procedureModel.due_date)\r\n          this.procedureModel.status = \"PARTIAL_CALCULATED\";\r\n        else if (!this.procedureModel.amount && !this.procedureModel.credit &&\r\n          !this.procedureModel.text_account && !this.procedureModel.text_word &&\r\n          !this.procedureModel.payment && !this.procedureModel.due_date)\r\n          this.procedureModel.status = \"IMPORTED\";\r\n        localStorage.setItem('currentProcedureStatus', this.procedureModel.status);\r\n        localStorage.setItem('currentProcedureAmount', '' + this.procedureModel.amount);\r\n        localStorage.setItem('currentProcedureCredit', '' + this.procedureModel.credit);\r\n        localStorage.setItem('currentProcedurePayment', '' + this.procedureModel.payment);\r\n        localStorage.setItem('currentProcedureText_word', '' + this.procedureModel.text_word);\r\n        localStorage.setItem('currentProcedureText_account', '' + this.procedureModel.text_account);\r\n        localStorage.setItem('currentProcedureDueDate', '' + this.procedureModel.due_date);\r\n        localStorage.setItem('currentProcedureLiquidity', '' + this.procedureModel.liquidity);\r\n        localStorage.setItem('currentProcedureDocType', '' + this.procedureModel.docType);\r\n        localStorage.setItem('currentProcedureData', '' + this.procedureModel.data);\r\n        localStorage.setItem('currentProcedureAnalysis', '' + this.procedureModel.analysis);\r\n        this._procedureService.update(this.procedureModel)\r\n          .subscribe(async (res) => {\r\n            // console.dir('done: ' + res);\r\n            this._messageService.add({\r\n              severity: 'success',\r\n              summary: await this._translateService.get('general_messages.update_success').toPromise(),\r\n              detail: await this._translateService.get('general_messages.update_success').toPromise()\r\n            });\r\n          }, err => {\r\n          });\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({ severity: 'info', \r\n            summary: await this._translateService.get('general_messages.canceled').toPromise(), \r\n            // detail: 'Action cancelled'\r\n           });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({ severity: 'info', \r\n            summary: await this._translateService.get('general_messages.canceled').toPromise(), \r\n            // detail: 'Action cancelled' \r\n          });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/shared/user/procedures']);\r\n    // localStorage.removeItem(\"currentProcedureId\");\r\n    // localStorage.removeItem(\"currentProcedureName\");\r\n    // localStorage.removeItem(\"currentProcedureData\");\r\n    // localStorage.removeItem(\"currentProcedureAnalysis\");\r\n\r\n  }\r\n\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <div class=\"p-text-center titleFontStyle p-mb-4\"> {{'Procedure_Registration.editHeader' | translate}} </div>\r\n        <h3 class=\"p-text-center\">{{'sideBarMenu.' + procedureModel.status | translate}}</h3>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"procedureName\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'Procedure_Registration.name' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input required #procedureName=\"ngModel\" name=\"procedureName\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"procedureModel.name\" > \r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"data\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.data' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"data\" binary=\"true\"[(ngModel)]=\"procedureModel.data\" inputId=\"data\" [value]=\"procedureModel.data\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n            \r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"analysis\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.analysis' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <p-checkbox name=\"analysis\" binary=\"true\" [(ngModel)]=\"procedureModel.analysis\" inputId=\"analysis\" [value]=\"procedureModel.analysis\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <h3>{{'precalc.precalc'| translate}}</h3>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"amount\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.amount' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.amount\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.amount\" name=\"amount\" binary=\"true\" [(ngModel)]=\"procedureModel.amount\" inputId=\"amount\" [value]=\"procedureModel.amount\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"text_account\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.text_account' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.text_account\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.text_account\" name=\"text_account\" binary=\"true\" [(ngModel)]=\"procedureModel.text_account\" inputId=\"text_account\" [value]=\"procedureModel.text_account\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"text_word\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.text_word' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.text_word\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.text_word\" name=\"text_word\" binary=\"true\" [(ngModel)]=\"procedureModel.text_word\" inputId=\"text_word\" [value]=\"procedureModel.text_word\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"credit\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.credit' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.credit\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.credit\" name=\"credit\" binary=\"true\" [(ngModel)]=\"procedureModel.credit\" inputId=\"credit\" [value]=\"procedureModel.credit\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"payment\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.payment' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.payment\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.payment\" name=\"payment\" binary=\"true\" [(ngModel)]=\"procedureModel.payment\" inputId=\"payment\" [value]=\"procedureModel.payment\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"due_date\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.due_date' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.due_date\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.due_date\" name=\"due_date\" binary=\"true\" [(ngModel)]=\"procedureModel.due_date\" inputId=\"due_date\" [value]=\"procedureModel.due_date\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <label for=\"docType\" class=\"p-col-12  p-md-2 fontStyle \"> {{'Procedure_Registration.docType' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10 p-field-checkbox\">\r\n                    <i *ngIf=\"!procedureModel.docType\" class=\"pi pi-times closeIcon\"></i>\r\n                    <p-checkbox *ngIf=\"procedureModel.docType\" name=\"docType\" binary=\"true\" [(ngModel)]=\"procedureModel.docType\" inputId=\"docType\" [value]=\"procedureModel.docType\"></p-checkbox>\r\n                </div>\r\n            </div> \r\n\r\n\r\n            <div class=\"p-field p-grid\" *ngIf=\"role ==='Admin'\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \" *ngIf=\"role ==='Admin'\">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'Procedure_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{accountName}}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n  <div class=\"p-col-12 \">\r\n    <p-card class=\"p-text-center\">\r\n      <p-chart type=\"pie\" [data]=\"chartData\" height= \"350px\"></p-chart>\r\n    </p-card>\r\n  </div>\r\n\r\n  <div class=\"p-col-4\">\r\n      <p-card class=\"p-text-center\">\r\n        <ng-template pTemplate=\"header\">\r\n            {{ 'CreditorsAnalysis.amountTotalBalance' | translate}}\r\n        </ng-template>\r\n          <h1>{{totalAmount | currency:'EUR':'symbol' }}</h1>\r\n          <h3>{{ 'CreditorsAnalysis.amountTotalCount' | translate}}</h3>\r\n          <h1>  {{totalAmountCount}} </h1>\r\n          <br>\r\n          <p class=\"amountColor\" (click)=\"setDetails(2)\"><i class=\"pi pi-arrow-down\"></i>{{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n      </p-card>\r\n  </div>\r\n  <div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.textTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalText | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.textTotalCount' | translate}}</h3>\r\n        <h1>  {{totalTextCount}}</h1>\r\n        <br>\r\n        <p class=\"textColor\" (click)=\"setDetails(1)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}} </p>\r\n    </p-card>\r\n</div>\r\n<div class=\"p-col-4\">\r\n    <p-card class=\"p-text-center\">\r\n      <ng-template pTemplate=\"header\">\r\n        {{ 'CreditorsAnalysis.paymentTotalBalance' | translate}}\r\n      </ng-template>\r\n        <h1>{{totalPayment | currency:'EUR':'symbol' }}</h1>\r\n        <h3>{{ 'CreditorsAnalysis.paymentTotalCount' | translate}}</h3>\r\n        <h1>  {{totalPaymentCount}}</h1>\r\n        <br>\r\n        <p class=\"paymentColor\" (click)=\"setDetails(3)\"><i class=\"pi pi-arrow-down\"></i> {{ 'CreditorsAnalysis.showDetails' | translate}}  </p>\r\n\r\n    </p-card>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <app-text-analysis-details details=\"true\" *ngIf=\"displayDetails==1\"></app-text-analysis-details>\r\n        <amount-analysis-details details=\"true\" *ngIf=\"displayDetails==2\"></amount-analysis-details>\r\n        <app-payment-analysis-details details=\"true\" *ngIf=\"displayDetails==3\"></app-payment-analysis-details>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis-details',\r\n  templateUrl: './creditor-analysis-details.component.html',\r\n  styleUrls: ['./creditor-analysis-details.component.sass'],\r\n})\r\nexport class CreditorAnalysisDetailsComponent implements OnInit {\r\n  accountNumber: string;\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  accountName: string;\r\n  totalAmount: number;\r\n  totalText: number;\r\n  totalPayment: number;\r\n  displayDetails: number;\r\n  chartData: any;\r\n  totalAmountCount: any;\r\n  totalPaymentCount: any;\r\n  totalTextCount: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  waiting: boolean = true;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // { label: 'Analysis' },\r\n        {\r\n          label: elem.label,\r\n          routerLink: '/dashboard/analysis/creditor',\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n        {\r\n          label: 'Details',\r\n          routerLink: this._router.url,\r\n          routerLinkActiveOptions: { exact: true },\r\n        },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n      this.waiting = true;\r\n      this._analysisService\r\n        .getCreditorAnalysisDetails(\r\n          this.selectedOrganisation,\r\n          this.selectedProcedure,\r\n          this.accountNumber\r\n        )\r\n        .subscribe(\r\n          (res) => {\r\n            this.totalAmount =\r\n              res.amount.length > 0 ? res.amount[0].totalBalance : 0;\r\n            this.totalAmountCount =\r\n              res.amount.length > 0 ? res.amount[0].totlaCount : 0;\r\n            this.totalPayment =\r\n              res.payment.length > 0 ? res.payment[0].totalBalance : 0;\r\n            this.totalPaymentCount =\r\n              res.payment.length > 0 ? res.payment[0].totlaCount : 0;\r\n            this.totalText = res.text.length > 0 ? res.text[0].totalBalance : 0;\r\n            this.totalTextCount =\r\n              res.text.length > 0 ? res.text[0].totlaCount : 0;\r\n            this.accountName =\r\n              res.text.length > 0\r\n                ? res.text[0].accountName\r\n                : res.amount.length > 0\r\n                ? res.amount[0].accountName\r\n                : res.payment[0]?.accountName;\r\n            this.chartData = {\r\n              labels: [elem.amountLabel, elem.textLabel, elem.paymentLabel],\r\n              datasets: [\r\n                {\r\n                  data: [this.totalAmount, this.totalText, this.totalPayment],\r\n                  backgroundColor: ['#95ca14', '#587bc7', '#fc6521'],\r\n                  hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n                },\r\n              ],\r\n            };\r\n            this.waiting = false;\r\n          },\r\n          (er) => {\r\n            this.waiting = false;\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  setDetails(option: number) {\r\n    this.displayDetails = option;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { DocumentTypes, PostingDocTypes } from 'src/app/shared/model/document-type';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-document-type',\r\n  templateUrl: './document-type.component.html',\r\n  styleUrls: ['./document-type.component.sass']\r\n})\r\nexport class DocumentTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingDocTypes: PostingDocTypes[];\r\n  docTypes: DocumentTypes[] = new Array();\r\n  docTypesFilter: DocumentTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field }[] = new Array();\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, private _docTypesService: PostingService,\r\n    private _confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.docTypes.push({\r\n      id: 0,\r\n      documentTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._docTypesService\r\n      .getDocTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.docTypes.push(...data);\r\n          this.docTypesFilter = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Document_Type.documentType',\r\n        field: 'documentType'\r\n      },\r\n      {\r\n        header: 'Document_Type.documentTypeNewName',\r\n        field: 'documentTypeNewName'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n  editRow(row) {\r\n    this.postingDocTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalVal = row.documentTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.documentTypeNewId = this.originalVal;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == this.originalVal)[0]?.documentTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row, update = true) {\r\n    this.searching = true;\r\n    this._docTypesService\r\n      .updateNewDocType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        if(res == 1) localStorage.setItem('currentProcedureDocType', 'true');\r\n        else if(res == 0) {\r\n          let currentPrcID = localStorage.getItem('currentProcedureId');\r\n          if(this.selectedPrcId == +currentPrcID) {\r\n            localStorage.setItem('currentProcedureDueDate', 'false');\r\n            localStorage.setItem('currentProcedurePayment', 'false');\r\n            localStorage.setItem('currentProcedureCredit', 'false');\r\n            localStorage.setItem('currentProcedureDocType', 'false');\r\n            let prcStatus = localStorage.getItem('currentProcedureStatus');\r\n            if(prcStatus === 'CALCULATED') localStorage.setItem('currentProcedureStatus', 'PARTIAL_CALCULATED');\r\n          }\r\n        }\r\n        row.isEditable = false;\r\n        localStorage.setItem('currentProcedureDocType', 'true');\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Document new type is ${update ? 'updated' : 'Deleted'} successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this.searching = true;\r\n      this._docTypesService\r\n        .getPostingDocTypes(this.selectedOrgId, e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.postingDocTypes = data;\r\n            this.tempData = data;\r\n            this.searching = false;\r\n          },\r\n          error => this.searching = false\r\n        );\r\n    }\r\n  }\r\n\r\n\r\n  async reset(row) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        row.documentTypeNewId = null;\r\n        row.documentTypeNewName = null;\r\n        this.save(row, false);\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled'\r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  docTypeChangedHandler(e, row) {\r\n    row.documentTypeNewId = e.value;\r\n    row.documentTypeNewName = this.docTypes.filter(row => row.id == e.value)[0].documentTypeName;\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.postingDocTypes = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n\r\n  async filterChange(query, colName) {\r\n    this.searching = true;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.postingDocTypes = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.postingDocTypes = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.postingDocTypes = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.postingDocTypes = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.postingDocTypes = this.postingDocTypes.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.postingDocTypes = this.postingDocTypes.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-4 fontStyle\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n        <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n          placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\"\r\n          optionValue=\"id\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required\r\n          (onChange)=\"orgChangedHandler($event)\" [style]=\"{width:'300px'}\">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-grid\">\r\n\r\n      <div class=\"p-col-6 p-sm-offset-3\">\r\n        <label class=\"p-mr-6 fontStyle\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n        <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n          placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n          [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n          [style]=\"{width:'300px'}\"></p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingDocTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n          class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n          tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'Document_Type.Action' | translate}}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'documentTypeNewName'\"/>\r\n\r\n              <p-dropdown [options]=\"docTypesFilter\" [(ngModel)]=\"criteria[col.field]\" optionValue=\"documentTypeName\" appendTo=\"body\"\r\n                placeholder=\"Document Type new\" optionLabel=\"documentTypeName\" [showClear]=\"true\"\r\n                filterBy=\"documentTypeName\" (onChange)=\"filterChange($event.value, col.field)\" [style]=\"{width:'100%'}\"\r\n                *ngIf=\"col.field == 'documentTypeNewName'\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n            {{ col.field != 'documentTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <span\r\n                *ngIf=\"row.documentTypeNewName && (row.documentTypeNewName.toLowerCase() == 'zahlung' || row.documentTypeNewName.toLowerCase() == 'rechnung')\">\r\n                {{'Document_Type.'+row.documentTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'documentTypeNewName'\">\r\n              <p-dropdown [options]=\"docTypes\" [(ngModel)]=\"row.documentTypeNewId\" optionValue=\"id\" appendTo=\"body\"\r\n                placeholder=\"Document Type new\" optionLabel=\"documentTypeName\" [showClear]=\"true\" [filter]=\"true\"\r\n                filterBy=\"documentTypeName\" (onChange)=\"docTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Document_Type.'+item.documentTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Document_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"reset(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.documentTypeNewId\"\r\n              pTooltip=\"{{'general_actions.delete' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { AccountTypes, PostingAccountTypes } from 'src/app/shared/model/accountType';\r\nimport { Organisation } from 'src/app/shared/model/organisation';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { PostingService } from '../service/posting.service';\r\n\r\n@Component({\r\n  selector: 'app-account-type',\r\n  templateUrl: './account-type.component.html',\r\n  styleUrls: ['./account-type.component.sass']\r\n})\r\nexport class AccountTypeComponent implements OnInit {\r\n\r\n  orgs: Organisation[] = new Array();\r\n  procedures: Procedures[] = new Array();\r\n  selectedOrgId: number = -1;\r\n  selectedPrcId: number = -1;\r\n  postingAccountTypes: PostingAccountTypes[];\r\n  accountTypes: AccountTypes[] = new Array();\r\n  accountTypesFilter: AccountTypes[] = new Array();\r\n  originalVal: number = -1;\r\n  cols: { header, field, align }[] = new Array();\r\n  procedureName: string;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(public _translateService: TranslateService, private _messageService: MessageService,\r\n    private _postingService: PostingService, private _orgService: OrganisationService,\r\n    private _confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.accountTypes.push({\r\n      id: 0,\r\n      AccountTypeName: 'null'\r\n    });\r\n\r\n    this._orgService.get()\r\n      .subscribe(\r\n        (data) => {\r\n          this.orgs = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this._postingService\r\n      .getAccountTypesEnum()\r\n      .subscribe(\r\n        (data) => {\r\n          this.accountTypes.push(...data);\r\n          this.accountTypesFilter = data;\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Account_Type.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountType',\r\n        field: 'accountType',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'Account_Type.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  orgChangedHandler(e) {\r\n    this.selectedPrcId = 0;\r\n    if (e.value > 0) {\r\n      this._orgService.getProcedures(e.value)\r\n        .subscribe(\r\n          data => {\r\n            this.procedures = data;\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  prcChangedHandler(e) {\r\n    if (e.value > 0) {\r\n      this.searching = true;\r\n      this._postingService\r\n        .getPostingAccountTypes(this.selectedOrgId, this.selectedPrcId)\r\n        .subscribe(\r\n          data => {\r\n            data.forEach(account => {\r\n              let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n              account.accountNumber = isNaN(accountNumber) ? account.accountNumber : accountNumber;\r\n            });\r\n            this.postingAccountTypes = data;\r\n            this.tempData = data;\r\n            this.searching = false;\r\n          },\r\n          error => this.searching = false\r\n        );\r\n    }\r\n  }\r\n\r\n  editRow(row) {\r\n    this.postingAccountTypes.filter(row => row.isEditable).map(r => { r.isEditable = false; return r });\r\n    row.isEditable = true;\r\n    this.originalVal = row.accountTypeNewId;\r\n  }\r\n\r\n  cancel(row) {\r\n    row.accountTypeNewId = this.originalVal;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == this.originalVal)[0]?.AccountTypeName;\r\n    row.isEditable = false;\r\n  }\r\n\r\n\r\n  save(row, update = true) {\r\n    this.searching = true;\r\n    this._postingService\r\n      .updateNewAccountType(this.selectedOrgId, this.selectedPrcId, row)\r\n      .subscribe(res => {\r\n        row.isEditable = false;\r\n        let numOfRecords = res.length > 0 ? res[0] : 0;\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'DONE!',\r\n          detail: `Account new type is ${update? 'updated' : 'Deleted'} successfully in the targeted posting data, \\n ${numOfRecords} updated.`\r\n        });\r\n      }, er => {\r\n        this.searching = false;\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: er.error.error\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  accountTypeChangedHandler(e, row) {\r\n    row.accountTypeNewId = e.value;\r\n    row.accountTypeNewName = this.accountTypes.filter(row => row.id == e.value)[0].AccountTypeName;\r\n  }\r\n\r\n\r\n  async reset(row) {\r\n    this._confirmationService.confirm({\r\n      message: await this._translateService.get('confirm_messages.body_delete').toPromise(),\r\n      header: await this._translateService.get('confirm_messages.delete').toPromise(),\r\n      icon: 'pi pi-info-circle',\r\n      acceptLabel: await this._translateService.get('confirm_messages.yes').toPromise(),\r\n      rejectLabel: await this._translateService.get('confirm_messages.cancel').toPromise(),\r\n      accept: () => {\r\n        row.accountTypeNewId = null;\r\n        row.accountTypeNewName = null;\r\n        this.save(row, false);\r\n      },\r\n      reject: async (type) => {\r\n        switch (type) {\r\n          case ConfirmEventType.REJECT:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled'\r\n            });\r\n            break;\r\n          case ConfirmEventType.CANCEL:\r\n            this._messageService.add({\r\n              severity: 'info',\r\n              summary: await this._translateService.get('general_messages.canceled').toPromise(),\r\n              // detail: 'Action cancelled' \r\n            });\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.postingAccountTypes = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      this.filtersNo--;\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.postingAccountTypes = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.postingAccountTypes = this.tempData.filter(value => value[key]?.toLowerCase() == element.toLowerCase());\r\n            } else {\r\n              this.postingAccountTypes = this.tempData.filter(value => value[key]?.toLowerCase().includes(element.toLowerCase()));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.postingAccountTypes = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.postingAccountTypes = this.postingAccountTypes.filter(value => value[key]?.toString().toLowerCase() == element.toLowerCase());\r\n          } else {\r\n            this.postingAccountTypes = this.postingAccountTypes.filter(value => value[key]?.toString().toLowerCase().includes(element.toLowerCase()));\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n}\r\n","<p-confirmDialog [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n\r\n  <div class=\"p-col-12\">\r\n\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-4\"> {{'Admin_Import.selectOrganisation' | translate}} </label>\r\n\r\n      <p-dropdown [options]=\"orgs\" [(ngModel)]=\"selectedOrgId\"\r\n        placeholder=\" {{'Admin_Import.selectOrganisationPlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"orgChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\">\r\n      </p-dropdown>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12\" *ngIf=\"selectedOrgId>0\">\r\n    <div class=\"p-col-6 p-sm-offset-3\">\r\n      <label class=\"p-mr-6\"> {{'Admin_Import.selectProcedure' | translate}} </label>\r\n      <p-dropdown [options]=\"procedures\" [(ngModel)]=\"selectedPrcId\"\r\n        placeholder=\"{{'Admin_Import.selectProcedurePlaceholder' | translate}}\" optionLabel=\"name\" optionValue=\"id\"\r\n        [showClear]=\"true\" [filter]=\"true\" filterBy=\"name\" required (onChange)=\"prcChangedHandler($event)\"\r\n        [style]=\"{width:'300px'}\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-12\" *ngIf=\"selectedPrcId>0\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n\r\n    <p-table #dt dataKey=\"id\" [value]=\"postingAccountTypes\" [columns]=\"cols\" styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button type=\"button\" pButton pRipple icon=\"pi pi-filter-slash\" (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\" pTooltip=\"{{'Data_Table.clearFilter' | translate}}\" *ngIf=\"filtersNo>0\"\r\n            tooltipPosition=\"bottom\"></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of cols\">\r\n            {{col.header | translate}}\r\n            <p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'Account_Type.Action' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'accountTypeNewName'\" />\r\n\r\n            <p-dropdown [options]=\"accountTypesFilter\" [(ngModel)]=\"criteria[col.field]\" optionValue=\"AccountTypeName\"\r\n              appendTo=\"body\" placeholder=\"{{'Account_Type.accountTypeNewName' | translate}}\"\r\n              optionLabel=\"AccountTypeName\" [showClear]=\"true\" [filter]=\"true\" filterBy=\"AccountTypeName\"\r\n              *ngIf=\"col.field == 'accountTypeNewName'\" (onChange)=\"filterChange($event.value, col.field)\"\r\n              [style]=\"{width:'300px'}\">\r\n              <ng-template pTemplate=\"item\" let-item>\r\n                {{'Account_Type.'+item.AccountTypeName | translate}}\r\n              </ng-template>\r\n              <ng-template pTemplate=\"selectedItem\" let-item>\r\n                {{'Account_Type.'+item.AccountTypeName | translate}}\r\n              </ng-template>\r\n            </p-dropdown>\r\n\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            {{ col.field != 'accountTypeNewName' ? row[col.field] : '' }}\r\n            <div *ngIf=\"!row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <span *ngIf=\"row.accountTypeNewName\">\r\n                {{'Account_Type.'+row.accountTypeNewName | translate}}\r\n              </span>\r\n            </div>\r\n            <div *ngIf=\"row.isEditable && col.field == 'accountTypeNewName'\">\r\n              <p-dropdown [options]=\"accountTypes\" [(ngModel)]=\"row.accountTypeNewId\" optionValue=\"id\" appendTo=\"body\"\r\n                placeholder=\"{{'Account_Type.accountTypeNewName' | translate}}\" optionLabel=\"AccountTypeName\"\r\n                [showClear]=\"true\" [filter]=\"true\" filterBy=\"AccountTypeName\"\r\n                (onChange)=\"accountTypeChangedHandler($event, row)\" [style]=\"{width:'300px'}\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"selectedItem\" let-item>\r\n                  {{'Account_Type.'+item.AccountTypeName | translate}}\r\n                </ng-template>\r\n              </p-dropdown>\r\n            </div>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Edit' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-save\" (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Save' | translate}}\" tooltipPosition=\"bottom\"></button> &nbsp;\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-times\" (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{'Account_Type.Cancel' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-trash\" (click)=\"reset(row)\"\r\n              class=\"p-button-rounded p-button-warning\" *ngIf=\"!row.isEditable && row.accountTypeNewId\"\r\n              pTooltip=\"{{'general_actions.delete' | translate}}\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n</div>","<p-table [value]=\"users\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n  responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"400px\" [reorderableColumns]=\"true\">\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"role==='Admin'\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Add User -->\r\n      <button type=\"button\" pButton pRipple icon=\"pi pi-plus\" (click)=\"addUser()\"\r\n        class=\"p-button-rounded p-button-primary\" pTooltip=\"{{'general_actions.add' | translate }}\"\r\n        tooltipPosition=\"bottom\"></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\">\r\n    <colgroup>\r\n      <col *ngFor=\"let col of cols\">\r\n      <col>\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\">\r\n    <tr>\r\n      <th pResizableColumn pReorderableColumn class=\"p-text-center\" *ngFor=\"let col of cols\">\r\n        {{col.header | translate}}</th>\r\n      <th *ngIf=\"role!=='User'\" style=\"width: 10em\"> </th>\r\n    </tr>\r\n  </ng-template>\r\n\r\n\r\n  <ng-template pTemplate=\"body\" let-user>\r\n    <tr>\r\n\r\n      <td pReorderableRowHandle *ngFor=\"let col of cols\">\r\n        <div *ngIf=\"col.subField;then nested_object_content else normal_content\"></div>\r\n        <ng-template #nested_object_content>\r\n          {{user[col.field][col.subField]}}\r\n        </ng-template>\r\n        <ng-template #normal_content>\r\n          {{user[col.field]}}\r\n        </ng-template>\r\n      <td *ngIf=\"role!=='User'\" style=\"width: 10em\">\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-warning headerColor\"\r\n          pTooltip=\"{{'general_actions.edit' | translate }}\" tooltipPosition=\"bottom\" (click)=\"edituser(user)\"></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n      <td colspan=\"12\">{{'User_Registration.NoUsersFound' | translate}}</td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from \"../service/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-organisation-users',\r\n  templateUrl: './organisation-users.component.html',\r\n  styleUrls: ['./organisation-users.component.sass']\r\n})\r\nexport class OrganisationUsersComponent implements OnInit {\r\n\r\n  organisationId = localStorage.getItem('organisationId')\r\n  role = localStorage.getItem('role')\r\n  users  : [] = [];\r\n  cols = [];\r\n  constructor(private _userService : UserService, private _router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._userService\r\n    .getUsers(this.organisationId)\r\n    .subscribe(\r\n      (data) => { \r\n        this.users = data;\r\n        // console.log(data)\r\n        },\r\n      (err) =>  { }\r\n    );\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'User_Registration.role',\r\n        field: \"Role\",\r\n        subField: 'name'\r\n      },\r\n      {\r\n        header: 'User_Registration.username',\r\n        field: 'username'\r\n      },\r\n      {\r\n        header: 'User_Registration.email',\r\n        field: 'email'\r\n      },\r\n      {\r\n        header: 'User_Registration.title',\r\n        field: 'title'\r\n      },\r\n      {\r\n        header: 'User_Registration.firstname',\r\n        field: 'firstname'\r\n      },\r\n      {\r\n        header: 'User_Registration.lastname',\r\n        field: 'lastname'\r\n      },\r\n      {\r\n        header: 'User_Registration.mobileNr',\r\n        field: 'mobileNumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.street',\r\n        field: 'street'\r\n      },\r\n      {\r\n        header: 'User_Registration.houseNr',\r\n        field: 'housenumber'\r\n      },\r\n      {\r\n        header: 'User_Registration.postcode',\r\n        field: 'postCode'\r\n      },\r\n      {\r\n        header: 'User_Registration.city',\r\n        field: 'city'\r\n      },\r\n      {\r\n        header: 'User_Registration.country',\r\n        field: 'country'\r\n      }\r\n    ];\r\n\r\n\r\n  } // end of ng on init\r\n\r\n\r\n  edituser(user) {\r\n    localStorage.setItem('selectedUser_userId', user.id);\r\n    localStorage.setItem('selectedUser_roleId', user.RoleId);\r\n    localStorage.setItem('selectedUser_username', user.username);\r\n    localStorage.setItem('selectedUser_email', user.email);\r\n    localStorage.setItem('selectedUser_title', user.title);\r\n    localStorage.setItem('selectedUser_firstname', user.firstname);\r\n    localStorage.setItem('selectedUser_lastname', user.lastname);\r\n    localStorage.setItem('selectedUser_mobileNr', user.mobileNumber);\r\n    localStorage.setItem('selectedUser_street', user.street);\r\n    localStorage.setItem('selectedUser_houseNr', user.housenumber);\r\n    localStorage.setItem('selectedUser_postcode', user.postCode);\r\n    localStorage.setItem('selectedUser_city', user.city);\r\n    localStorage.setItem('selectedUser_country', user.country);\r\n\r\n    this._router.navigate(['/dashboard/shared/user/edit']); \r\n  }\r\n  addUser(){\r\n    this._router.navigate(['/dashboard/shared/user/add']); \r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  uploadFile(formdata) {\r\n    return this._http.post<any>(this._thisURL + '/header', formdata);\r\n  }\r\n\r\n  importFile(formData) {\r\n    return this._http.post<any>(this._thisURL + '/import', formData);\r\n  }\r\n\r\n  deleteFile(data) {\r\n    return this._http.post<any>(this._thisURL + '/delete-file', data);\r\n  }\r\n\r\n  addProcedure(procedure) {\r\n    console.log(procedure)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Procedures } from '../model/procedures';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcedureService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  _adminURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getProcedures(organisationId) {\r\n    return this._http.get<any>(this._thisURL + '/users/' + organisationId + '/procedures');\r\n  }\r\n\r\n  getById(prcId: number): Observable<Procedures[]> {\r\n    return this._http.get<Procedures[]>(this._thisURL + '/procedure/' + prcId);\r\n  }\r\n\r\n  reset(orgId, prcId) {\r\n    return this._http.delete<any>(this._adminURL + '/procedures/' + orgId + '/' + prcId);\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { ElementRef, Pipe, PipeTransform, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n\r\n  private readonly _nativeElement: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private sanitizer: DomSanitizer) {\r\n    this._nativeElement = el.nativeElement;\r\n  }\r\n\r\n  transform(value: string): SafeHtml | null {\r\n    if (!value)\r\n      return null;\r\n\r\n    let temp: string = '';\r\n    this.keywords.forEach(word => {\r\n      const regEx = new RegExp(word, 'ig');\r\n      let wordList = value.split(\" \").filter((elem, index) => {\r\n        return regEx.test(elem);\r\n      });\r\n      wordList.forEach(w => {\r\n        temp = value.replace(w, `<span class=\"highlight\"><b>${w}</b></span>`);\r\n      });\r\n    });\r\n    return this.sanitizer.sanitize(SecurityContext.HTML, temp) || ''\r\n    // return this.sanitizer.bypassSecurityTrustHtml(value);\r\n    // return null;\r\n  } // end of transform function\r\n\r\n\r\n  keywords = [\r\n    'Pfändung',\r\n    'Pfaendung',\r\n    'Vollstreckung',\r\n    'Rechtskräftig',\r\n    'Rechtskraeftig',\r\n    'vollzieher',\r\n    'Obergericht',\r\n    'gericht',\r\n    '(\\\\b|[^a-zA-Z]+)OGV([^a-zA-Z]+|\\\\s*)',\r\n    'Stundung',\r\n    'nsolvenz',\r\n    'Aufrechnung',\r\n    'Vollstreckung',\r\n    'Vollstreckungsbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)VB([^a-zA-Z]+|\\\\s*)',\r\n    'Zwangsvollstreckung',\r\n    '(\\\\b|[^a-zA-Z]+)ZV([^a-zA-Z]+|\\\\s*)',\r\n    'Teilzahlung',\r\n    'Ratenzahlung',\r\n    'Drittschuldner',\r\n    'Abtretung',\r\n    'berweisungsbeschluss',\r\n    'PFÜB',\r\n    'Verjährung',\r\n    '(\\\\b|[^a-zA-Z]+)ZPO([^a-zA-Z]+|\\\\s*)',\r\n    'Inkasso',\r\n    'Eidesstattliche',\r\n    'Urteil',\r\n    'Haftung',\r\n    'Kostenfestsetzungsbeschluss',\r\n    '(\\\\b|[^a-zA-Z]+)KFB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnbescheid',\r\n    '(\\\\b|[^a-zA-Z]+)MB([^a-zA-Z]+|\\\\s*)',\r\n    'Mahnverfahren',\r\n    'Rechtskr',\r\n    'Umschuldung',\r\n    'Eidesstattliche Erklärung',\r\n    'Eidesstattliche Erklaerung',\r\n    '(\\\\b|[^a-zA-Z]+)EE([^a-zA-Z]+|\\\\s*)',\r\n    'Rest',\r\n    'Restzahlung',\r\n    'Vereinbarung',\r\n    'Schulden',\r\n    'Urteil',\r\n    'Rate',\r\n    'Vergleich',\r\n\r\n    'Verjaehrung',\r\n    'Lieferstop',\r\n    'Leistungsstopp',\r\n    'Leistungsstop',\r\n    'Lieferstopp',\r\n    'Mahnung',\r\n    'Mahngebühr',\r\n    'Mahngeb',\r\n    'Limit',\r\n    'Überschreitung',\r\n    'Ueberschreitung',\r\n    'Androhung',\r\n    'Drohung',\r\n    'Vorfällig',\r\n    'Vorfaellig',\r\n    'Vorkasse',\r\n    'Proforma',\r\n    'Creditreform',\r\n    'Säumnis',\r\n    'Saeumnis',\r\n    'Anruf',\r\n    'Erinnerung',\r\n    '1.M.',\r\n    '2.M.',\r\n    '3.M.',\r\n    'Letzte',\r\n    'Verzug',\r\n    'Sicherheit',\r\n    'Klage',\r\n    'Aktenzeichen',\r\n    'Nachzahlung',\r\n    'Nachz',\r\n    'Zahlungsplan',\r\n    'Bescheid',\r\n    'Abschlag',\r\n    'Rechtsanwaltsgebühr',\r\n    'Rechtsanwaltsgebuehr',\r\n    'Ra -Gebühr',\r\n    'Ra -Gebuehr',\r\n    'Geschäftszeichen',\r\n    'Geschaeftszeichen',\r\n    'Beistand',\r\n    'Verrechnung',\r\n    'Außergerichtlich',\r\n    'außergerichtl',\r\n    'aussergerichtl',\r\n    'Abtretung',\r\n    'Ablöse',\r\n    'Abloese',\r\n    'Vorschuss',\r\n    'Vorschuß',\r\n\r\n  ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportDataService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  exportXLSX(tableName, OrganisationId, ProcedureId, criteria: any) {\r\n    // return this._http.get<Observable<Blob>>(this._thisURL + '/export/' + tableName + '/' + OrganisationId + '/' + ProcedureId, { params: criteria, responseType: 'arraybuffer' });\r\n    return this._http.get<Blob>(this._thisURL + '/export/' + tableName + '/' + OrganisationId + '/' + ProcedureId, { params: criteria, responseType: 'blob' as 'json' })\r\n  }\r\n\r\n  exportPDF(data) {\r\n    return this._http.get(this._thisURL + '/exportPDF/' + data);\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataFilterService } from '../service/data-filter.service';\r\nimport { ExportDataService } from '../service/export-data.service';\r\nimport { dataTableColumns } from '../model/dataTableColumns';\r\nimport { LazyLoadEvent, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\n// import { AutocompleteService } from '../service/autocomplete.service';\r\nimport { Word } from '../model/word';\r\nimport { DictionaryService } from '../service/dictionary.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-sap-data-table',\r\n  templateUrl: './sap-data-table.component.html',\r\n  styleUrls: ['./sap-data-table.component.sass'],\r\n  providers: [DatePipe]\r\n})\r\nexport class SAPDataTableComponent implements OnInit {\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _dataFilterService: DataFilterService,\r\n    private _exportDataService: ExportDataService,\r\n    private _router: Router,\r\n    private _translateService: TranslateService,\r\n    private _autocompleteService: DictionaryService,\r\n    private datepipe: DatePipe,\r\n  ) { }\r\n\r\n  organisationId = localStorage.getItem('organisationId');\r\n  procedureId = localStorage.getItem('currentProcedureId');\r\n  procedureName: string = '';\r\n  filtersNo: number = 0;\r\n  loading: boolean = false;\r\n  selectLastPage: boolean = false;\r\n  data: any;\r\n  postings: [] = [];\r\n  cols: dataTableColumns[];\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  displayedDataCount = 0;\r\n  criteria: any = {\r\n    OrganisationId: this.organisationId,\r\n    procedureId: this.procedureId,\r\n    limit: this.limit,\r\n    offset: 0,\r\n    orderBy: 'id',\r\n    sortOrder: 1,\r\n  };\r\n  totalCount: number = 0;\r\n  completeWords: Word[] = new Array();\r\n\r\n  ngOnInit(): void {\r\n    dataTableColumns\r\n      .getDataTableColumns(this._translateService)\r\n      .then((cols) => {\r\n        this.cols = cols;\r\n      });\r\n\r\n    this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      dataTableColumns\r\n        .getDataTableColumns(this._translateService)\r\n        .then((cols) => {\r\n          this.cols = cols;\r\n        });\r\n    });\r\n\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n  }\r\n\r\n  async getData() {\r\n\r\n    this.loading = true;\r\n    let tempCriteria = { ...this.criteria };\r\n    for (const key in tempCriteria) {\r\n      if (!tempCriteria[key] && key != 'offset') {\r\n        delete tempCriteria[key];\r\n      }\r\n      if (key.includes('Date'))\r\n        tempCriteria[key] = this.datepipe.transform(tempCriteria[key], 'yyyy.MM.dd');\r\n    }\r\n    this.filtersNo = Object.keys(tempCriteria).length - 6;\r\n    this._dataFilterService.get(tempCriteria).subscribe(\r\n      (data) => {\r\n        this.data = data;\r\n        this.postings = this.data.rows;\r\n        this.totalCount = this.data.count;\r\n        this.displayedDataCount =\r\n          this.totalCount > this.limit ? this.limit : this.totalCount;\r\n        this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        this.loading = false;\r\n      },\r\n      (err) => {\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  sort(event: LazyLoadEvent) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField ? event.sortField : 'id';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    if (!this.loading) this.getData();\r\n  }\r\n\r\n  filterChange(value, field) {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.autoComplete(value);\r\n    this.getData();\r\n  }\r\n\r\n  autoComplete(word: string) {\r\n    // if (word && word.length > 2) {\r\n    //   this._autocompleteService\r\n    //     .complete(word)\r\n    //     .subscribe(res => {\r\n    //       console.log(res);\r\n    //       this.completeWords = res;\r\n    //     });\r\n    // } else {\r\n    this.completeWords = new Array();\r\n    // }\r\n  }\r\n\r\n  submitFilter() {\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      OrganisationId: this.organisationId,\r\n      procedureId: this.procedureId,\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.filtersNo = 0;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.loading = true;\r\n    if (!this.criteria.offset) {\r\n      this.criteria.offset = 0;\r\n    }\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.loading = true;\r\n    this.criteria.offset -= +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.criteria.offset = 0;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.loading = true;\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.loading = true;\r\n    this.getData();\r\n  }\r\n\r\n  exportXLSX() {\r\n    this.loading = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.criteria };\r\n    // criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['lang'] = lang ?? 'de';\r\n    this._exportDataService\r\n      .exportXLSX(\r\n        'posting',\r\n        this.organisationId,\r\n        this.procedureId,\r\n        criteriaWithLang\r\n      )\r\n      .subscribe((res) => {\r\n        this.loading = false;\r\n        this.saveAsExcelFile(res, 'data_table');\r\n        // window.open(url.toString(), '_blank');\r\n      },\r\n        (err) => { this.loading = false; }\r\n      );\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  exportPDF() {\r\n    this._exportDataService.exportPDF(this.postings).subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n      },\r\n      (err) => { },\r\n      () => { }\r\n    );\r\n  }\r\n\r\n  susa() {\r\n    this._router.navigate(['/dashboard/shared/data/susa']);\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<!-- <div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <h2 class=\"p-text-center\">{{ procedureName }}</h2>\r\n  </div>\r\n</div> -->\r\n<div class=\"card\">\r\n  <p-progressBar\r\n    mode=\"indeterminate\"\r\n    [style]=\"{ height: '5px' }\"\r\n    *ngIf=\"loading\"\r\n  ></p-progressBar>\r\n  <p-table\r\n    [value]=\"postings\"\r\n    [columns]=\"cols\"\r\n    [scrollable]=\"true\"\r\n    scrollHeight=\"350px\"\r\n    [style]=\"{ width: '100%' }\"\r\n    [resizableColumns]=\"true\"\r\n    styleClass=\"p-datatable-gridlines\"\r\n    [reorderableColumns]=\"true\"\r\n    [loading]=\"loading\"\r\n    [lazy]=\"true\"\r\n    [customSort]=\"true\"\r\n    (onLazyLoad)=\"sort($event)\"\r\n  >\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"p-mb-4\">\r\n        <!-- Export as excel -->\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-file-excel\"\r\n          (click)=\"exportXLSX()\"\r\n          class=\"p-mr-2 p-button-warning\"\r\n          pTooltip=\"Xlsx\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Limit options -->\r\n        <p-dropdown\r\n          [options]=\"pageLimitSizes\"\r\n          optionValue=\"value\"\r\n          optionLabel=\"value\"\r\n          [(ngModel)]=\"limit\"\r\n          (onChange)=\"limitChange($event)\"\r\n          class=\"p-mr-2\"\r\n        ></p-dropdown>\r\n        <!-- Go to First page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr === 1\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-double-left\"\r\n          (click)=\"firstPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Go previous -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr === 1\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-left\"\r\n          (click)=\"previousPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Page number -->\r\n        <input\r\n          pInputText\r\n          type=\"number\"\r\n          min=\"1\"\r\n          class=\"pageNrInput p-mr-2\"\r\n          (input)=\"pageNrChange($any($event.target).value)\"\r\n          [value]=\"pageNr\"\r\n          [placeholder]=\"pageNr\"\r\n        />\r\n        <!-- Go to next Page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr >= maxPageNr\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-right\"\r\n          (click)=\"nextPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n        <!-- Go to last page -->\r\n        <button\r\n          type=\"button\"\r\n          [disabled]=\"pageNr >= maxPageNr\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-angle-double-right\"\r\n          (click)=\"lastPage()\"\r\n          class=\"p-mr-2\"\r\n          pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n\r\n        <!-- dispalyed data of total count -->\r\n        {{ displayedDataCount }} of {{ totalCount }}\r\n        <!-- Clear filter -->\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-filter-slash\"\r\n          (click)=\"clearFilter()\"\r\n          class=\"p-ml-6 clearFilter\"\r\n          pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n          *ngIf=\"filtersNo > 0\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-info-circle\"\r\n          (click)=\"susa()\"\r\n          class=\"p-ml-6\"\r\n          pTooltip=\"Susa\"\r\n          tooltipPosition=\"bottom\"\r\n          label=\"Susa\"\r\n        ></button>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"colgroup\">\r\n      <colgroup>\r\n        <col\r\n          *ngFor=\"let col of cols\"\r\n          [style]=\"{ width: (col.width ? col.width : 150) + 'px' }\"\r\n        />\r\n      </colgroup>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th\r\n          pSortableColumn=\"{{ col.field }}\"\r\n          pResizableColumn\r\n          pReorderableColumn\r\n          *ngFor=\"let col of cols\"\r\n          class=\"p-text-center\"\r\n          pTooltip=\"{{ col.header }}\"\r\n          tooltipPosition=\"bottom\"\r\n        >\r\n          {{ col.header }}\r\n          <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n          <!-- <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\"\r\n            (change)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\" /> -->\r\n\r\n          <p-autoComplete\r\n            [suggestions]=\"completeWords\"\r\n            (completeMethod)=\"filterChange($event.query, col.field)\"\r\n            (onClear)=\"filterChange($event.query, col.field)\"\r\n            (onSelect)=\"filterChange($event.word, col.field)\"\r\n            field=\"word\"\r\n            [minLength]=\"1\"\r\n            [inputStyle]=\"{ width: '90%' }\"\r\n            [style]=\"{ width: '90%' }\"\r\n            appendTo=\"body\"\r\n            [(ngModel)]=\"criteria[col.field]\"\r\n            *ngIf=\"\r\n              col.field != 'documentDate' &&\r\n              col.field != 'dueDate' &&\r\n              col.field != 'applicationDate' &&\r\n              col.field != 'postingDate' &&\r\n              col.field != 'executionDate'\r\n            \"\r\n          >\r\n          </p-autoComplete>\r\n\r\n          <p-calendar\r\n            *ngIf=\"\r\n              col.field == 'documentDate' ||\r\n              col.field == 'dueDate' ||\r\n              col.field == 'applicationDate' ||\r\n              col.field == 'postingDate' ||\r\n              col.field == 'executionDate'\r\n            \"\r\n            [(ngModel)]=\"criteria[col.field]\"\r\n            (onSelect)=\"filterChange($event, col.field)\"\r\n            [monthNavigator]=\"true\"\r\n            [yearNavigator]=\"true\"\r\n            yearRange=\"1900:2100\"\r\n            appendTo=\"body\"\r\n            dateFormat=\"dd.mm.yy\"\r\n          >\r\n          </p-calendar>\r\n\r\n          <!-- <i class=\"pi pi-filter p-ml-2 iconColor\" (click)=\"submitFilter()\"\r\n            pTooltip=\"{{'Data_Table.filter' | translate}}\" tooltipPosition=\"bottom\"></i> -->\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-rowData>\r\n      <tr>\r\n        <td\r\n          pReorderableRowHandle\r\n          *ngFor=\"let col of cols\"\r\n          class=\"p-text-{{ col.align }}\"\r\n        >\r\n          <div\r\n            *ngIf=\"\r\n              col.field == 'balance' ||\r\n                col.field == 'debitAmount' ||\r\n                col.field == 'creditAmount' ||\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate' ||\r\n                col.field == 'postingDate' ||\r\n                col.field == 'applicationDate';\r\n              then withFilter;\r\n              else withoutFilter\r\n            \"\r\n          ></div>\r\n          <ng-template #withoutFilter>\r\n            <span pTooltip=\"{{ rowData[col.field] }}\">\r\n              {{ rowData[col.field] }}\r\n            </span>\r\n          </ng-template>\r\n          <ng-template #withFilter>\r\n            {{\r\n              col.field == \"balance\" ||\r\n              col.field == \"debitAmount\" ||\r\n              col.field == \"creditAmount\"\r\n                ? (rowData[col.field] | currency: \"EUR\":\"\")\r\n                : (rowData[col.field] | date: \"dd.MM.yyyy\")\r\n            }}\r\n          </ng-template>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td colspan=\"7\">No postings found.</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  constructor(private primengConfig: PrimeNGConfig, private bnIdle: BnNgIdleService, private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n\r\n    this.bnIdle.startWatching(900).subscribe((isTimedOut: boolean) => {\r\n        console.log('session expired');\r\n        localStorage.clear();\r\n        this._router.navigate(['/']);\r\n    });\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","<!-- <app-layout></app-layout> -->\r\n<router-outlet></router-outlet>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminRegistrationService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  addUser(user) {\r\n    console.log(user)\r\n     return this._http.post<any>(this._thisURL + '/user', user);\r\n  }\r\n\r\n}\r\n","\r\n\r\nexport class Users {\r\n    id: number;\r\n    title: string =  '';\r\n    OrganisationId: number;\r\n    email: string ='';\r\n    // role:  string ='';\r\n    RoleId: number = 3;\r\n    role: string = '';\r\n    firstname: string ='';\r\n    lastname: string ='';\r\n    username: string ='';\r\n    mobileNumber: string ='';\r\n    // contactPerson: string ='';\r\n    street: string ='';\r\n    housenumber: number = null;\r\n    city: string ='';\r\n    postCode: string ='';\r\n    country: string ='';\r\n\r\n}","<p-toast></p-toast>\r\n<h1  class=\"p-text-center\">{{'precalc.precalc'| translate}}</h1>\r\n<!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n\r\n<p-progressBar *ngIf=\"waiting\" mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar>\r\n\r\n<h3>{{'precalc.text_word'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"textByWordStart()\" [disabled]=\"disabletextWord\"></button>\r\n<br><br>\r\n\r\n<h3>{{'precalc.text_account'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"textByAccountStart()\" [disabled]=\"disableText_account\"></button>\r\n\r\n<h3>{{'precalc.amount'| translate}}</h3>\r\n<button pButton label=\"{{'precalc.start'| translate}}\" (click)=\"amountStart()\" [disabled]=\"disableAmount\"></button>\r\n\r\n<h3>{{'precalc.credit'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"creditorStart()\" [disabled]=\"disableCredit\"></button>\r\n\r\n<h3>{{'precalc.payment'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"paymentStart()\" [disabled]=\"disablePayment\"></button>\r\n\r\n<h3>{{'precalc.due_date'| translate}}</h3>\r\n<p *ngIf=\"disableDocType\"> Please Set Document type for this procedure to enable calculation</p>\r\n<button *ngIf=\"!disableDocType\" pButton label=\"{{'precalc.start'| translate}}\" (click)=\"dueDateStart()\" [disabled]=\"disableDueDate\"></button>","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../service/procedure.service';\r\nimport { PreCalculateService } from '../service/pre-calculate.service';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-pre-calculate',\r\n  templateUrl: './pre-calculate.component.html',\r\n  styleUrls: ['./pre-calculate.component.sass']\r\n})\r\nexport class PreCalculateComponent implements OnInit {\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  waiting: boolean;\r\n  disableAmount: boolean;\r\n  disableCredit: boolean;\r\n  disabletextWord: boolean;\r\n  disableText_account: boolean;\r\n  disablePayment: boolean;\r\n  disableDueDate: boolean;\r\n  disableDocType: boolean;\r\n\r\n  constructor(private _preCalcService: PreCalculateService, private _messageService: MessageService,\r\n    private _procedureService: ProcedureService, private _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.disableDocType = (localStorage.getItem('currentProcedureDocType') !== 'true');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.disableAmount = (localStorage.getItem('currentProcedureAmount') === 'true');\r\n    this.disableCredit = (localStorage.getItem('currentProcedureCredit') === 'true');\r\n    this.disabletextWord = (localStorage.getItem('currentProcedureText_word') === 'true');\r\n    this.disableText_account = (localStorage.getItem('currentProcedureText_account') === 'true');\r\n    this.disablePayment = (localStorage.getItem('currentProcedurePayment') === 'true');\r\n    this.disableDueDate = (localStorage.getItem('currentProcedureDueDate') === 'true');\r\n  }\r\n\r\n  updateProcedureStatus() {\r\n    if (this.disableAmount && this.disableCredit && this.disableDueDate &&\r\n      this.disablePayment && this.disableText_account && this.disabletextWord) {\r\n      this._procedureService.patch({ id: this.prcId, status: 'CALCULATED' })\r\n        .subscribe(res => localStorage.setItem('currentProcedureStatus', 'CALCULATED'));\r\n    }\r\n  }\r\n\r\n  textByWordStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.textAnalysisByWord(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureText_word', 'true');\r\n        this.disabletextWord = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  textByAccountStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.textAnalysisByAccount(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureText_account', 'true');\r\n        this.disableText_account = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n\r\n  amountStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.amountAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureAmount', 'true');\r\n        this.disableAmount = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  creditorStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.creditorAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureCredit', 'true');\r\n        this.disableCredit = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  paymentStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.paymentAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedurePayment', 'true');\r\n        this.disablePayment = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n  dueDateStart() {\r\n    this.waiting = true;\r\n    this._preCalcService.dueDateAnalysis(this.orgId, this.prcId)\r\n      .subscribe(async (res) => {\r\n        this.waiting = false;\r\n        localStorage.setItem('currentProcedureDueDate', 'true');\r\n        this.disableDueDate = true;\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'SUCCESS',\r\n          life: 10000,\r\n          detail: await this._translateService.get('general_messages.update_success').toPromise(),\r\n        });\r\n        this.updateProcedureStatus();\r\n      }, er => this.waiting = false);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport * as FileSaver from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-due-date',\r\n  templateUrl: './due-date.component.html',\r\n  styleUrls: ['./due-date.component.sass'],\r\n})\r\nexport class DueDateComponent implements OnInit {\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: boolean;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  labels: any[] = new Array();\r\n  docDateOptions: any;\r\n  // docDateData: any;\r\n  // docDateLabels: any[] = new Array();\r\n  // docPositiveData: any[] = new Array();\r\n  // docNegativeData: any[] = new Array();\r\n  docData: any[] = new Array();\r\n  docDataTable: any[] = new Array();\r\n  // notPaidLabels: any[] = new Array();\r\n  // notPaidData: any[] = new Array();\r\n  // notPaidDataTable: any[] = new Array();\r\n  // notPaidChartData: any;\r\n  secondChartData: any;\r\n  secondChartLabels: any[] = new Array();\r\n  secondChartOptions: any;\r\n\r\n  data: any[] = new Array();\r\n  @ViewChild('chart') chart: any;\r\n  // docCols: { header: string; field: string; }[];\r\n  // notPaidCols: TableColumn[];\r\n  delayCols: TableColumn[];\r\n  detailsCols: TableColumn[];\r\n  delayData: any;\r\n  detailsData: any[] = new Array();\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  //for second chart\r\n  maxDate: Date;\r\n  // for second chart and slider\r\n  minDate: Date;\r\n  // for slider\r\n  toDate: Date;\r\n  // for second chart\r\n  rangeDays: number;\r\n  // for slider\r\n  maxRange: number;\r\n  // for slider\r\n  rangeValues: number[];\r\n  // for slider\r\n  baseFromDate: Date;\r\n  // for slider\r\n  baseToDate: Date;\r\n  secondChartDataRecords: any;\r\n\r\n  selectedAccount: { accountNumber: string; accountName: string };\r\n  maxDelay: number;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    let prcId = +localStorage.getItem('dueDatePrcId');\r\n    if (prcId == this.selectedProcedure) {\r\n      this.baseFromDate = new Date(localStorage.getItem('dueDateBaseMin'));\r\n      this.baseToDate = new Date(localStorage.getItem('dueDateBaseMax'));\r\n      this.minDate = new Date(localStorage.getItem('dueDateMinDate'));\r\n      this.toDate = new Date(localStorage.getItem('dueDateToDate'));\r\n    }\r\n\r\n\r\n    this._translateService.get('DueDateAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        // { label: elem.paymentLabel, routerLink: '/dashboard/analysis/payment' },\r\n        { label: elem.label, routerLink: '/dashboard/analysis/due-date' },\r\n      ];\r\n\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.getData();\r\n\r\n    this.basicOptions = {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              stepSize: 50,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    this.detailsCols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center'\r\n      },\r\n\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNewName',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.applicationDate',\r\n        field: 'applicationDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center'\r\n      },\r\n      {\r\n        header: 'DueDateAnalysis.delay',\r\n        field: 'delay',\r\n        align: 'center'\r\n      }\r\n    ];\r\n\r\n    // this.delayCols = [\r\n    //   {\r\n    //     header: 'DueDateAnalysis.accountNumber',\r\n    //     field: 'accountNumber',\r\n    //     align: 'left',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.accountName',\r\n    //     field: 'accountName',\r\n    //     align: 'left',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.positiveDelay',\r\n    //     field: 'delayPos',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.negativeDelay',\r\n    //     field: 'delayNeg',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.count',\r\n    //     field: 'count',\r\n    //     align: 'center',\r\n    //   },\r\n    // ];\r\n\r\n    // this.notPaidCols = [\r\n    //   {\r\n    //     header: 'DueDateAnalysis.date',\r\n    //     field: 'date',\r\n    //     align: 'center',\r\n    //   },\r\n    //   {\r\n    //     header: 'DueDateAnalysis.notPaid',\r\n    //     field: 'notPaid',\r\n    //     align: 'center',\r\n    //   },\r\n    // ];\r\n  } // end of ng on init\r\n\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    let start = this.minDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    let parmas = { maxDelay: this.maxDelay, accountNumber: this.selectedAccount?.accountNumber ?? null };\r\n    this._analysisService\r\n      .getDueDateAnalysis(this.selectedOrganisation, this.selectedProcedure, start, end, parmas)\r\n      .subscribe(\r\n        async (res) => {\r\n          // debugger;\r\n          if (!this.maxDelay) this.maxDelay = res.data.maxDelay;\r\n          this.data = res.data.dueDateReference.data;\r\n          this.labels = res.data.dueDateReference.labels;\r\n          this.secondChartDataRecords = res.data.dueDateReference.recordsDelay;\r\n          this.secondChartLabels = res.data.dueDateReference.secondChartLabels;\r\n          if (!this.baseFromDate) this.baseFromDate = new Date(res.dateRange[0].mindate);\r\n          if (!this.baseToDate) this.baseToDate = new Date(res.dateRange[0].maxappdate);\r\n          if (!this.minDate) this.minDate = new Date(res.dateRange[0].mindate);\r\n          if (!this.toDate) this.toDate = new Date(res.dateRange[0].maxappdate);\r\n          if (!this.rangeValues) this.rangeValues = [0, this.dayDiff(this.minDate, this.toDate)];\r\n          if (!this.maxRange) this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n          localStorage.setItem('dueDateBaseMin', this.baseFromDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateBaseMax', this.baseToDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateMinDate', this.minDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDateToDate', this.toDate?.toISOString().split('T')[0]);\r\n          localStorage.setItem('dueDatePrcId', '' + this.selectedProcedure);\r\n          this.maxDate = this.toDate;\r\n          // let lastChartDateTemp = this.secondChartLabels[this.secondChartLabels.length - 1].split('.');\r\n          // this.maxDate = new Date(lastChartDateTemp[2], lastChartDateTemp[1], lastChartDateTemp[0]);\r\n          // this.maxDate.setMonth(this.maxDate.getMonth() +1);\r\n          // let firstChartDateTemp = this.secondChartLabels[0].split('.');\r\n          // this.minDate = new Date(firstChartDateTemp[2], firstChartDateTemp[1], firstChartDateTemp[0]);\r\n          // this.minDate.setMonth(this.minDate.getMonth() +1);\r\n          this.rangeDays = Math.ceil((this.maxDate.getTime() - this.minDate.getTime()) / (1000 * 60 * 60 * 24));\r\n          this.rangeValues = [\r\n            this.dayDiff(this.baseFromDate, this.minDate),\r\n            this.dayDiff(this.baseFromDate, this.maxDate)\r\n          ];\r\n          this.waiting = false;\r\n          this.basicData = {\r\n            labels: this.labels,\r\n            datasets: new Array(),\r\n          };\r\n          this.basicData.datasets.push({\r\n            label: await this._translateService.get('DueDateAnalysis.firstChartLabel').toPromise(),\r\n            borderColor: `rgb(100,100,255)`,\r\n            data: this.data,\r\n            fill: false,\r\n          });\r\n          this.secondChartOptions = {\r\n            tooltips: {\r\n              callbacks: {\r\n                label: (tooltipItem, data) => {\r\n                  debugger;\r\n                  let value = tooltipItem.value;\r\n                  let point = this.secondChartDataRecords[tooltipItem.index];\r\n                  let label = point.label;\r\n                  let accountNumber = point?.accountNumber;\r\n                  let accountName = point?.accountName;\r\n                  return label + ' :' + value +  '  - ' + accountNumber + '/' + accountName;\r\n                },\r\n              },\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,99,132,0.2)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,99,132,0.2)\"\r\n                },\r\n                ticks: {\r\n                  minRotation: 40,\r\n                  maxRotation: 90,\r\n                  callback: (label, index, values) => {\r\n                    // debugger;\r\n                    // let temp = label * this.rangeDays / values.length;\r\n                    let tempDate = new Date(this.minDate);\r\n                    tempDate.setDate(tempDate.getDate() + label);\r\n                    label = tempDate.toLocaleString(\"de-DE\", {\r\n                      year: \"numeric\",\r\n                      month: \"2-digit\",\r\n                      day: \"2-digit\",\r\n                    });\r\n                    return label;\r\n                  },\r\n                },\r\n              }]\r\n            },\r\n          };\r\n          this.secondChartData = {\r\n            labels: this.labels,\r\n            datasets: [{\r\n              label: await this._translateService.get('DueDateAnalysis.secondChartLabel').toPromise(),\r\n              borderColor: `rgb(100,100,255)`,\r\n              data: this.secondChartDataRecords,\r\n              fill: false,\r\n            }]\r\n          };\r\n\r\n\r\n          // this.chart.refresh();\r\n          // this.chart.reinit();\r\n          this.docDataTable = res.data.docDateReference;\r\n          // this.notPaidDataTable = res.data.docDateReference;\r\n          if (!this.delayData) {\r\n            this.delayData = res.data.dueDateRefAccounts;\r\n\r\n            this.delayData.forEach((account) => {\r\n              // let accountNumber = parseInt(account.accountNumber, 10);\r\n              // account.accountNumber = isNaN(accountNumber)\r\n              //   ? account.accountNumber\r\n              //   : accountNumber;\r\n              account.accountName = account.accountName ?? 'No Name';\r\n            });\r\n          }\r\n\r\n          if (this.selectedAccount && this.selectedAccount.accountNumber) {\r\n            this._analysisService\r\n              .getDueDateAnalysisDetails(this.selectedOrganisation, this.selectedProcedure, this.selectedAccount.accountNumber, start, end, this.maxDelay)\r\n              .subscribe(res => {\r\n                this.waiting = false;\r\n                this.detailsData = res.data.records;\r\n              });\r\n          }\r\n\r\n          // this.docDataTable.forEach((element) => {\r\n          //   this.docDateLabels.push(\r\n          //     element.monthName + '-' + element.yearName\r\n          //   );\r\n          //   this.notPaidLabels.push(\r\n          //     element.monthName + '-' + element.yearName\r\n          //   );\r\n          //   this.docPositiveData.push(element.positive);\r\n          //   this.docNegativeData.push(element.negative);\r\n          //   this.docData.push(+element.positive + +element.negative);\r\n          //   this.notPaidData.push(+element.notPaid);\r\n          // });\r\n\r\n          // this.docDateData = {\r\n          //   labels: this.docDateLabels,\r\n          //   datasets: [\r\n          //     {\r\n          //       type: 'line',\r\n          //       label: elem.average,\r\n          //       borderColor: '#42A5F5',\r\n          //       borderWidth: 2,\r\n          //       fill: false,\r\n          //       data: this.docData,\r\n          //     },\r\n          //     {\r\n          //       type: 'bar',\r\n          //       label: elem.positive,\r\n          //       backgroundColor: '#F5B59B',\r\n          //       data: this.docPositiveData,\r\n          //       borderColor: '#E5A58B',\r\n          //       borderWidth: 2,\r\n          //     },\r\n          //     {\r\n          //       type: 'bar',\r\n          //       label: elem.negative,\r\n          //       backgroundColor: '#FFD795',\r\n          //       borderColor: '#EFC785',\r\n          //       data: this.docNegativeData,\r\n          //     },\r\n          //   ],\r\n          // };\r\n\r\n          // this.notPaidChartData = {\r\n          //   labels: this.notPaidLabels,\r\n          //   datasets: [\r\n          //     {\r\n          //       label: elem.notPaid,\r\n          //       backgroundColor: '#42A5F5',\r\n          //       data: this.notPaidData,\r\n          //     },\r\n          //   ],\r\n          // };\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.minDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  backToPayment() {\r\n    this._router.navigate(['/dashboard/analysis/payment/']);\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/due-date/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.detailsData.length; index++) {\r\n      let element = this.detailsData[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { due_date_analysis: worksheet },\r\n        SheetNames: ['due_date_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'due_date_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <!-- <button type=\"button\" pButton pRipple label=\"{{ 'DueDateAnalysis.backToPayment' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"backToPayment()\"\r\n      pTooltip=\"{{ 'PaymentAnalysis.backToPayment' | translate }}\" tooltipPosition=\"bottom\"></button> -->\r\n  </div>\r\n  <!-- <div class=\"p-col-12\">\r\n    <p class=\"p-text-left\" style=\"margin-left: -25px;\">{{minDate | date}} - {{toDate | date}}</p>\r\n  </div> -->\r\n  <!-- <div class=\"p-col-1\">\r\n    <p class=\"p-text-right\">{{minDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-2\"></div>\r\n  <div class=\"p-col-1\">\r\n    <p class=\"p-text-left\">{{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-8\"></div> -->\r\n  <!-- <div class=\"p-col-3\"></div> -->\r\n  <div class=\"p-col-1 p-text-right\" style=\"margin-top: 5px;\">{{minDate | date}}</div>\r\n  <!-- [style]=\"{width:'300px'}\" -->\r\n  <div class=\"p-col-4\" style=\"text-align: center;margin-top: 5px;\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\" [min]=\"0\"\r\n      [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\" style=\"margin-top: 5px;\">{{toDate | date}}</div>\r\n\r\n  <!-- [(ngModel)]=\"selectedAccount\"  (onChange)=\"accountChangedHandler($event)\" \r\n      [style]=\"{width:'300px'}\"-->\r\n  <div class=\"p-col-3 p-text-center\">\r\n    <p-dropdown [options]=\"delayData\" placeholder=\" {{'DueDateAnalysis.selectAccount' | translate}}\"\r\n      optionLabel=\"accountName\" [showClear]=\"true\" [filter]=\"true\" [(ngModel)]=\"selectedAccount\" filterBy=\"accountName\"\r\n      [style]=\"{width:'100%'}\">\r\n      <ng-template pTemplate=\"selectedItem\">\r\n        <div class=\"account-item account-item-value\" *ngIf=\"selectedAccount\">\r\n          <div>{{selectedAccount.accountNumber + ' - ' + selectedAccount.accountName}}</div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template let-account pTemplate=\"item\">\r\n        <div>{{account.accountNumber + ' - ' + account.accountName}}</div>\r\n      </ng-template>\r\n    </p-dropdown>\r\n  </div>\r\n  <div class=\"p-col-2\">\r\n    <p-inputNumber [(ngModel)]=\"maxDelay\" mode=\"decimal\" [min]=\"0\" [useGrouping]=\"false\" [showButtons]=\"true\"\r\n      buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"10\"\r\n      decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n      incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\" size=\"6\" [style]=\"{width:'100%'}\">\r\n    </p-inputNumber>\r\n  </div>\r\n  <!-- <div class=\"p-col-6\"></div> -->\r\n  <div class=\"p-col-1 p-text-left\">\r\n    <button pButton pRipple type=\"button\" label=\"{{'DueDateAnalysis.search' | translate}}\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\"></button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart type=\"line\" height=\"350\" [data]=\"basicData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"scatter\" height=\"350\" [data]=\"secondChartData\" [options]=\"secondChartOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"p-col-12\">\r\n    <h4 class=\"p-text-center\">All Accounts</h4>\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"docDateData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"delayData\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"delayCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n            <col />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>Details</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-chart #chart2 type=\"bar\" height=\"350\" [data]=\"notPaidChartData\" [options]=\"basicOptions\">\r\n      </p-chart>\r\n    </div>\r\n  </div> -->\r\n\r\n  <!-- <div class=\"p-col-10\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"notPaidDataTable\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"notPaidCols\"\r\n        responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\">\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\">\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of columns\">\r\n              {{col.header | translate}}\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-right\">\r\n              <span *ngIf=\"col.field=='date'\">\r\n                {{ row.monthName + '-' + row.yearName }}\r\n              </span>\r\n              <span *ngIf=\"col.field=='notPaid'\">\r\n                {{ +row.notPaid | currency:'EUR':'' }}\r\n              </span>\r\n              <span *ngIf=\"col.field!='date' && col.field!='notPaid'\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div> -->\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"selectedAccount && selectedAccount.accountNumber\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card p-text-center\">\r\n      <p-table [value]=\"detailsData\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\"\r\n        [columns]=\"detailsCols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\"\r\n        [loading]=\"waiting\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"p-grid\">\r\n            <div class=\"p-col-4 p-text-left\">\r\n              <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"\r\n                class=\"p-button-warning p-mr-2\" pTooltip=\"Xlsx\" tooltipPosition=\"bottom\"></button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"colgroup\" let-columns>\r\n          <colgroup>\r\n            <col *ngFor=\"let col of columns\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n          <tr>\r\n            <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\"\r\n              *ngFor=\"let col of columns\">\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n          <tr [pSelectableRow]=\"row\">\r\n            <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n              <span *ngIf=\"col.field == 'balance'\">\r\n                {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n              </span>\r\n              <span *ngIf=\"\r\n                col.field == 'dueDate' ||\r\n                col.field == 'applicationDate' ||\r\n                col.field == 'documentDate'\r\n              \">\r\n                {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n              </span>\r\n              <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'applicationDate'\r\n              \">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Word } from '../model/word';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DictionaryService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  complete(word: string): Observable<Word[]> {\r\n    return this._http.get<Word[]>(this._thisURL + 'complete/' + word);\r\n  }\r\n\r\n \r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavBarComponent } from './shared/nav-bar/nav-bar.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { ImportComponent } from './admin/import/import.component';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { UnauthComponent } from './shared/unauth/unauth.component';\r\nimport { NotfoundComponent } from './shared/notfound/notfound.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { LayoutComponent } from './shared/layout/layout.component'\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { AmountAnalysisComponent } from './shared/analysis/amount-analysis/amount-analysis.component';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { UserRegistrationComponent } from './shared/user-registration/user-registration.component';\r\nimport { UserEditComponent } from './shared/user-edit/user-edit.component';\r\nimport { UserDashboardComponent } from './shared/user-dashboard/user-dashboard.component';\r\nimport { OrganisationUsersComponent } from './shared/organisation-users/organisation-users.component';\r\nimport { ProcedureEditComponent } from './admin/procedure-edit/procedure-edit.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { DocumentTypeComponent } from './admin/document-type/document-type.component';\r\nimport { AmountAnalysisDetailsComponent } from './shared/analysis/amount-analysis/details/amount-analysis-details.component';\r\nimport { TextAnalysisComponent } from './shared/analysis/text-analysis/text-analysis.component';\r\nimport { TextAnalysisDetailsComponent } from './shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component';\r\nregisterLocaleData(localeDe, 'de');\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { SusaComponent } from './shared/sap-data-table/susa/susa.component';\r\nimport { PaymentAnalysisComponent } from './shared/analysis/payment-analysis/payment-analysis.component';\r\nimport { HighlightPipe } from './shared/pipes/highlight.pipe';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport { PaymentAnalysisDetailsComponent } from './shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component';\r\nimport { DueDateComponent } from './shared/analysis/payment-analysis/due-date/due-date.component';\r\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {SliderModule} from 'primeng/slider';\r\n\r\nimport { BnNgIdleService } from 'bn-ng-idle';\r\nimport { DueDateDetailsComponent } from './shared/analysis/payment-analysis/due-date-details/due-date-details.component';\r\nimport { CreditorAnalysisComponent } from './shared/analysis/creditor-analysis/creditor-analysis.component';\r\nimport { CreditorAnalysisDetailsComponent } from './shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component';\r\nimport { AccountTypeComponent } from './admin/account-type/account-type.component';\r\nimport { OpeningBalanceComponent } from './shared/liquidity/opening-balance/opening-balance.component';\r\nimport { CreditLineComponent } from './shared/liquidity/credit-line/credit-line.component';\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from './shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component';\r\nimport { TextAnalysisWordDetailsComponent } from './shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component';\r\nimport { TextAnalysisIndexedComponent } from './shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component';\r\nimport { TextAnalysisPreComponent } from './shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component';\r\nimport { PreCalculateComponent } from './admin/pre-calculate/pre-calculate.component';\r\nimport { AmountAnalysisPreComponent } from './shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component';\r\nimport { CreditorAnalysisCalcComponent } from './shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component';\r\nimport { PaymentDetailsMonthComponent } from './shared/analysis/payment-analysis/payment-details-month/payment-details-month.component';\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    FooterComponent,\r\n    ImportComponent,\r\n    UnauthComponent,\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    AdminRegistrationComponent,\r\n    ResetPasswordComponent,\r\n    LayoutComponent,\r\n    SAPDataTableComponent,\r\n    ResetPasswordNewUserComponent,\r\n    ProcedureRegistrationComponent,\r\n    AmountAnalysisComponent,\r\n    OrganisationRegistrationComponent,\r\n    UserRegistrationComponent,\r\n    UserEditComponent,\r\n    UserDashboardComponent,\r\n    OrganisationUsersComponent,\r\n    ProcedureEditComponent,\r\n    AdminDashboardComponent,\r\n    DocumentTypeComponent,\r\n    AmountAnalysisDetailsComponent,\r\n    TextAnalysisComponent,\r\n    TextAnalysisDetailsComponent,\r\n    SusaComponent,\r\n    PaymentAnalysisComponent,\r\n    HighlightPipe,\r\n    PaymentAnalysisDetailsComponent,\r\n    DueDateComponent,\r\n    DueDateDetailsComponent,\r\n    CreditorAnalysisComponent,\r\n    CreditorAnalysisDetailsComponent,\r\n    AccountTypeComponent,\r\n    OpeningBalanceComponent,\r\n    CreditLineComponent,\r\n    FreeLiquidityComponent,\r\n    FreeLiquidityDetailsComponent,\r\n    TextAnalysisWordDetailsComponent,\r\n    TextAnalysisIndexedComponent,\r\n    TextAnalysisPreComponent,\r\n    PreCalculateComponent,\r\n    AmountAnalysisPreComponent,\r\n    CreditorAnalysisCalcComponent,\r\n    PaymentDetailsMonthComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MenubarModule,\r\n    DividerModule,\r\n    StepsModule,\r\n    ChartModule,\r\n    CheckboxModule,\r\n    ToastModule,\r\n    MenubarModule,\r\n    TableModule,\r\n    FileUploadModule,\r\n    CalendarModule,\r\n    MultiSelectModule,\r\n    TooltipModule,\r\n    TreeModule,\r\n    SelectButtonModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    DropdownModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    SidebarModule,\r\n    ListboxModule,\r\n    PanelMenuModule,\r\n    MenuModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    ProgressSpinnerModule,\r\n    DialogModule,\r\n    DynamicDialogModule,\r\n    ContextMenuModule,\r\n    AccordionModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    PasswordModule,\r\n    MegaMenuModule,\r\n    AutoCompleteModule,\r\n    InputNumberModule,\r\n    BreadcrumbModule,\r\n    ConfirmDialogModule,\r\n    SliderModule\r\n  ],\r\n  providers: [MessageService, ConfirmationService, AuthGuard, {\r\n    provide: LOCALE_ID,\r\n    useValue: 'de'\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptor,\r\n    multi: true\r\n  },\r\n  BnNgIdleService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleServiceService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getRoles() {\r\n     return this._http.get<any>(this._thisURL + '/roles');\r\n  }\r\n  getmanagerRoleId() {\r\n    return this._http.get<any>(this._thisURL + '/roles/getManagerId');\r\n }\r\n\r\n addProcedure(procedure) {\r\n   return this._http.post<any>(this._thisURL + '/procedures', procedure);\r\n}\r\n\r\neditProcedure(procedure) {\r\n   return this._http.put<any>(this._thisURL + '/procedures/edit', procedure);\r\n}\r\n}\r\n","import { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\nexport class dataTableColumns {\r\n\r\n  field?: string;\r\n  header?: string;\r\n  align?: string;\r\n  width?: number;\r\n\r\n  constructor(field: string, header: string, align: string = 'center', width: number = 150) {\r\n    this.field = field;\r\n    this.header = header;\r\n    this.align = align;\r\n    this.width = width;\r\n  }\r\n\r\n  static async getDataTableColumns(translateService: TranslateService): Promise<dataTableColumns[]> {\r\n    let result: dataTableColumns[] = [];\r\n    result.push(new dataTableColumns(\"client\", await translateService.get(\"DataTableColumns.client\").toPromise()));\r\n    result.push(new dataTableColumns(\"companyCode\", await translateService.get(\"DataTableColumns.companyCode\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber\", await translateService.get(\"DataTableColumns.documentNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentDate\", await translateService.get(\"DataTableColumns.documentDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountType\", await translateService.get(\"DataTableColumns.accountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountType\", await translateService.get(\"DataTableColumns.contraAccountType\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountNumber\", await translateService.get(\"DataTableColumns.accountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"accountName\", await translateService.get(\"DataTableColumns.accountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountNumber\", await translateService.get(\"DataTableColumns.contraAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountName\", await translateService.get(\"DataTableColumns.contraAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"balance\", await translateService.get(\"DataTableColumns.balance\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"debitAmount\", await translateService.get(\"DataTableColumns.debitAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"creditAmount\", await translateService.get(\"DataTableColumns.creditAmount\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"stackNumber\", await translateService.get(\"DataTableColumns.stackNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"recordNumber\", await translateService.get(\"DataTableColumns.recordNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"fiscalYear\", await translateService.get(\"DataTableColumns.fiscalYear\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmount\", await translateService.get(\"DataTableColumns.taxAmount\").toPromise(), 'right'));\r\n    //result.push(new dataTableColumns(\"identificationNumber\", await translateService.get(\"DataTableColumns.identificationNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"executionDate\", await translateService.get(\"DataTableColumns.executionDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"dueDate\", await translateService.get(\"DataTableColumns.dueDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"ledgerId\", await translateService.get(\"DataTableColumns.ledgerId\").toPromise()));\r\n    result.push(new dataTableColumns(\"assignment\", await translateService.get(\"DataTableColumns.assignment\").toPromise()));\r\n    result.push(new dataTableColumns(\"reference\", await translateService.get(\"DataTableColumns.reference\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentType\", await translateService.get(\"DataTableColumns.documentType\").toPromise()));\r\n   // result.push(new dataTableColumns(\"documentTypeNew\", await translateService.get(\"DataTableColumns.documentTypeNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingDate\", await translateService.get(\"DataTableColumns.postingDate\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountNumber\", await translateService.get(\"DataTableColumns.GLAccountNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"GLAccountName\", await translateService.get(\"DataTableColumns.GLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debtorNumber\", await translateService.get(\"DataTableColumns.debtorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"debtorName\", await translateService.get(\"DataTableColumns.debtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"creditorNumber\", await translateService.get(\"DataTableColumns.creditorNumber\").toPromise()));\r\n    result.push(new dataTableColumns(\"creditorName\", await translateService.get(\"DataTableColumns.creditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountNo\", await translateService.get(\"DataTableColumns.contraAccountGLAccountNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountGLAccountName\", await translateService.get(\"DataTableColumns.contraAccountGLAccountName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorNo\", await translateService.get(\"DataTableColumns.contraAccountDebtorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountDebtorName\", await translateService.get(\"DataTableColumns.contraAccountDebtorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorNo\", await translateService.get(\"DataTableColumns.contraAccountCreditorNo\").toPromise()));\r\n    result.push(new dataTableColumns(\"contraAccountCreditorName\", await translateService.get(\"DataTableColumns.contraAccountCreditorName\").toPromise(), 'left'));\r\n    result.push(new dataTableColumns(\"debitCredit\", await translateService.get(\"DataTableColumns.debitCredit\").toPromise()));\r\n    result.push(new dataTableColumns(\"balanceTransactionCurrency\", await translateService.get(\"DataTableColumns.balanceTransactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentNumber2\", await translateService.get(\"DataTableColumns.documentNumber2\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"bookingAmount\", await translateService.get(\"DataTableColumns.bookingAmount\").toPromise()));\r\n    result.push(new dataTableColumns(\"exchangeRate\", await translateService.get(\"DataTableColumns.exchangeRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"transactionCurrency\", await translateService.get(\"DataTableColumns.transactionCurrency\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter1\", await translateService.get(\"DataTableColumns.costCenter1\").toPromise()));\r\n    result.push(new dataTableColumns(\"costCenter2\", await translateService.get(\"DataTableColumns.costCenter2\").toPromise()));\r\n    result.push(new dataTableColumns(\"salesTaxKey\", await translateService.get(\"DataTableColumns.salesTaxKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"textPosting\", await translateService.get(\"DataTableColumns.textPosting\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxRate\", await translateService.get(\"DataTableColumns.taxRate\").toPromise()));\r\n    result.push(new dataTableColumns(\"euTaxRate\", await translateService.get(\"DataTableColumns.euTaxRate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"costQuantityField\", await translateService.get(\"DataTableColumns.costQuantityField\").toPromise()));\r\n    result.push(new dataTableColumns(\"identifierBalanceCarryforward\", await translateService.get(\"DataTableColumns.identifierBalanceCarryforward\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingPeriod\", await translateService.get(\"DataTableColumns.postingPeriod\").toPromise()));\r\n  //  result.push(new dataTableColumns(\"differentTaxationType\", await translateService.get(\"DataTableColumns.differentTaxationType\").toPromise()));\r\n    result.push(new dataTableColumns(\"documentLink\", await translateService.get(\"DataTableColumns.documentLink\").toPromise()));\r\n    result.push(new dataTableColumns(\"cashDiscount\", await translateService.get(\"DataTableColumns.cashDiscount\").toPromise()));\r\n    result.push(new dataTableColumns(\"textHeader\", await translateService.get(\"DataTableColumns.textHeader\").toPromise()));\r\n    result.push(new dataTableColumns(\"postingKey\", await translateService.get(\"DataTableColumns.postingKey\").toPromise()));\r\n    result.push(new dataTableColumns(\"taxAmountDebit\", await translateService.get(\"DataTableColumns.taxAmountDebit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"taxAmountCredit\", await translateService.get(\"DataTableColumns.taxAmountCredit\").toPromise(), 'right'));\r\n    result.push(new dataTableColumns(\"applicationDocument\", await translateService.get(\"DataTableColumns.applicationDocument\").toPromise()));\r\n    result.push(new dataTableColumns(\"applicationDate\", await translateService.get(\"DataTableColumns.applicationDate\").toPromise()));\r\n   // result.push(new dataTableColumns(\"applicationDateNew\", await translateService.get(\"DataTableColumns.applicationDateNew\").toPromise()));\r\n    result.push(new dataTableColumns(\"generalReversal\", await translateService.get(\"DataTableColumns.generalReversal\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation1\", await translateService.get(\"DataTableColumns.typeDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation1\", await translateService.get(\"DataTableColumns.contentDocumentInformation1\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation2\", await translateService.get(\"DataTableColumns.typeDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation2\", await translateService.get(\"DataTableColumns.contentDocumentInformation2\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation3\", await translateService.get(\"DataTableColumns.typeDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation3\", await translateService.get(\"DataTableColumns.contentDocumentInformation3\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation4\", await translateService.get(\"DataTableColumns.typeDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation4\", await translateService.get(\"DataTableColumns.contentDocumentInformation4\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation5\", await translateService.get(\"DataTableColumns.typeDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation5\", await translateService.get(\"DataTableColumns.contentDocumentInformation5\").toPromise()));\r\n    result.push(new dataTableColumns(\"typeDocumentInformation6\", await translateService.get(\"DataTableColumns.typeDocumentInformation6\").toPromise()));\r\n    result.push(new dataTableColumns(\"contentDocumentInformation6\", await translateService.get(\"DataTableColumns.contentDocumentInformation6\").toPromise()));\r\n    return result;\r\n    \r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../service/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private _messageService: MessageService, private _authService: AuthService, private _router: Router, public _translateService: TranslateService) {\r\n    _translateService.addLangs(['de','en']);\r\n    _translateService.setDefaultLang('de');\r\n    const browserLang = _translateService.getBrowserLang();\r\n    _translateService.use(browserLang.match(/de|en/) ? browserLang : 'de');\r\n    localStorage.setItem('lang', browserLang);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n   this._translateService.get('LOGIN.welcomeMsg').subscribe(elem => {\r\n      // console.log(elem)\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const data = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    this._authService\r\n      .login(data)\r\n      .subscribe(res => {\r\n\r\n        if (res && res.user.userinfo) {\r\n          const userInfo = res.user.userinfo;\r\n          const fullName = userInfo.firstname + ' ' + userInfo.lastname;\r\n          const role = userInfo.Role;\r\n          const username = userInfo.username;\r\n          const OrganisationId = userInfo.OrganisationId\r\n        \r\n          localStorage.setItem('username', username);\r\n          localStorage.setItem('role', role);\r\n          localStorage.setItem('full_name', fullName);\r\n          localStorage.setItem('organisationId', OrganisationId);\r\n          localStorage.setItem('token', res.token);\r\n        }\r\n\r\n        if(localStorage.getItem('role') === \"Admin\") {\r\n          this._router.navigate(['/dashboard/admin/dashboard']);\r\n        } else {\r\n          this._router.navigate(['/dashboard/shared/user/procedures']);\r\n        }\r\n\r\n      }, err => {\r\n        // this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n        //   let errorMsg = \"\" ; \r\n\r\n        //   if(err.status=== 400){\r\n        //     errorMsg = elem.badRequest_400\r\n        //   }\r\n        //   else if (err.status=== 401) {\r\n        //     errorMsg = elem.unauthorized_401\r\n        //   }\r\n        //   else if (err.status=== 403) {\r\n        //     errorMsg = elem.forbidden_403\r\n        //   }\r\n        //   else if (err.status=== 404) {\r\n        //     errorMsg = elem.NotFound_404\r\n        //   }\r\n        //   else if (err.status=== 500) {\r\n        //     errorMsg = elem.internalServerError_500\r\n        //   }\r\n        //   this._messageService.add({\r\n        //     severity: 'error',\r\n        //     summary: 'ERROR',\r\n        //     life: 10000,\r\n        //     detail: errorMsg\r\n        //   });\r\n        // })\r\n\r\n      });\r\n\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","<div class=\"cardBody\">\r\n  <p-toast></p-toast>\r\n\r\n  <div class=\"p-grid p-mt-6 \">\r\n\r\n    <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\">\r\n      <div class=\"pages-body login-page p-d-flex p-flex-column\">\r\n        <div class=\"p-as-center p-mt-auto p-mb-auto\">\r\n          <div class=\"pages-panel card p-d-flex p-flex-column\">\r\n            <div class=\"pages-header p-px-3 p-py-1 loginLogoCss\">\r\n              <img src=\"assets/logo.jpg\" height=\"100\" width=\"100\">\r\n            </div>\r\n            <h3 class=\"fontStyle\"> {{'LOGIN.welcomeWord' | translate}} </h3>\r\n            <div class=\"pages-detail p-mb-6 p-px-6 fontStyle\"> {{'LOGIN.welcomeMsg' | translate}}</div>\r\n            <div class=\"input-panel p-d-flex p-flex-column p-px-3\">\r\n              <form (ngSubmit)=\"login()\">\r\n                <div class=\"p-inputgroup \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-envelope\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"username\" id=\"email\" type=\"text\" pinputText [(ngModel)]=\"username\"\r\n                      class=\"p-inputtext p-component p-filled\" placeholder=\"Email\" autofocus>\r\n                  </span>\r\n                </div>\r\n                <div class=\"p-inputgroup p-mt-5 p-mb-6 \">\r\n                  <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-lock\"></i>\r\n                  </span>\r\n                  <span class=\"p-float-label\">\r\n                    <input name=\"password\" id=\"password\" type=\"password\" pinputText [(ngModel)]=\"password\"\r\n                      class=\"p-inputtext p-component p-filled\"\r\n                      placeholder=\"{{'LOGIN.passwordPlaceholder' | translate}}\">\r\n\r\n                  </span>\r\n                </div>\r\n                <button pButton type=\"submit\" label=\"{{'LOGIN.loginButton' | translate}}\"\r\n                  class=\" fontStyle p-button-raised p-button-rounded buttonCss p-mb-4 p-px-3 p-button p-component p-ripple login-button\"\r\n                  ></button>\r\n              </form>\r\n            </div>\r\n            <a class=\"linkCss p-mb-4 fontStyle\"> {{'LOGIN.passowrdForgetLink' | translate}}</a>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Procedures } from 'src/app/shared/model/procedures';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProcedureService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/procedures';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get() {\r\n    return this._http.get<any>(this._thisURL);\r\n  }\r\n\r\n  insert(p: Procedures) {\r\n    return this._http.post<any>(this._thisURL, p);\r\n  }\r\n\r\n  getOne(id: number) {\r\n    return this._http.get<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n  update(p: Procedures) {\r\n    return this._http.put<any>(this._thisURL + '/' + p.id, p);\r\n  }\r\n\r\n  patch(p) {\r\n    return this._http.put<any>(this._thisURL + '/' + p.id, p);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this._http.delete<any>(this._thisURL + '/' + id);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Organisation } from \"../../shared/model/organisation\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrganisationService } from '../service/organisation.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-organisation-registration',\r\n  templateUrl: './organisation-registration.component.html',\r\n  styleUrls: ['./organisation-registration.component.sass']\r\n})\r\nexport class OrganisationRegistrationComponent implements OnInit {\r\n\r\n  organisation: Organisation = new Organisation();\r\n  id: number;\r\n  imageSrc: string | ArrayBuffer;\r\n  fromFront: boolean = false;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService,\r\n    private _orgService: OrganisationService, public _translateService: TranslateService,\r\n    private _route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = +this._route.snapshot.paramMap.get('id');\r\n    if (this.id > 0) {\r\n      this._orgService\r\n        .getOne(this.id)\r\n        .subscribe(res => {\r\n          if (res.length > 0) {\r\n            this.organisation = res[0];\r\n            this.fromFront = this.organisation.logo? false : true;\r\n          }\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          });\r\n        });\r\n    }\r\n\r\n  } // end of ngInit\r\n\r\n  UploadHandler(event) {\r\n    const selectedFiles: FileList = event.files;\r\n    this.organisation.logo = selectedFiles[0];\r\n    this.fromFront = true;\r\n    if (selectedFiles && selectedFiles[0]) {\r\n      const file = selectedFiles[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = e => this.imageSrc = reader.result;\r\n\r\n      reader.readAsDataURL(file);\r\n  }\r\n  }\r\n\r\n  submitHandler() {\r\n\r\n    const formData: FormData = new FormData();\r\n    formData.append('logo', this.organisation.logo);\r\n    formData.append('data', JSON.stringify(this.organisation));\r\n\r\n    // if organisation has an id value, then the action is update\r\n    if (this.organisation && this.organisation.id > 0) {\r\n      this._orgService\r\n        .update(formData, this.organisation.id)\r\n        .subscribe(res => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation updated successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n    } else {\r\n      this._orgService\r\n        .insert(formData)\r\n        .subscribe(res => {\r\n          this.organisation = res;\r\n          this.fromFront = false;\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS!',\r\n            detail: 'Organisation inserted successfully!'\r\n          });\r\n        }, err => {\r\n          this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n            let errorMsg = \"\";\r\n\r\n            if (err.status === 400) {\r\n              errorMsg = elem.badRequest_400\r\n            }\r\n            else if (err.status === 401) {\r\n              errorMsg = elem.unauthorized_401\r\n            }\r\n            else if (err.status === 403) {\r\n              errorMsg = elem.forbidden_403\r\n            }\r\n            else if (err.status === 404) {\r\n              errorMsg = elem.NotFound_404\r\n            }\r\n            else if (err.status === 500) {\r\n              errorMsg = elem.internalServerError_500\r\n            }\r\n            this._messageService.add({\r\n              severity: 'error',\r\n              summary: 'ERROR',\r\n              life: 10000,\r\n              detail: errorMsg\r\n            });\r\n          })\r\n        });\r\n\r\n    } // end of if-else has an id\r\n  } // end of submit handler function\r\n\r\n\r\n\r\n  cancelHandle() {\r\n    this._router.navigate(['/dashboard/admin/dashboard']);\r\n  }\r\n\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n  <div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <h5 class=\"p-text-center\"> {{'Organisation_Registration.header' | translate}} </h5>\r\n    <form class=\"p-fluid\" (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n      <div class=\"p-fluid\">\r\n\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"name\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.name' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #name=\"ngModel\" name=\"name\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.name\">\r\n            <small *ngIf=\"name.invalid && name.touched \"\r\n              class=\"spanCss \">{{'Organisation_Registration.nameErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.email' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #email=\"ngModel\" name=\"email\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.email\"\r\n              pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\">\r\n            <small *ngIf=\"email.invalid && email.touched \" class=\"spanCss \">\r\n              {{'Organisation_Registration.emailErrorMsg' | translate}}</small>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"street\"\r\n            class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">{{'Organisation_Registration.street' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #street=\"ngModel\" name=\"street\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.street\">\r\n            <small *ngIf=\"street.invalid && street.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.streetErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"houseNr\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.houseNr' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #houseNr=\"ngModel\" name=\"houseNr\" type=\"number\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.houseNr\">\r\n            <small *ngIf=\"houseNr.invalid && houseNr.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.houseNrErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.city' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #city=\"ngModel\" name=\"city\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.city\">\r\n            <small *ngIf=\"city.invalid && city.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.cityErrorMsg' | translate}}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.postcode' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #postCode=\"ngModel\" name=\"postCode\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.postCode\">\r\n            <small *ngIf=\"postCode.invalid && postCode.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.postcodeErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">\r\n            {{'Organisation_Registration.country' | translate}} </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <input required #country=\"ngModel\" name=\"country\" type=\"text\" pinputtext\r\n              class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\" [(ngModel)]=\"organisation.country\">\r\n            <small *ngIf=\"country.invalid && country.touched\"\r\n              class=\"spanCss \">{{'Organisation_Registration.countryErrorMsg' | translate}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-field p-grid\">\r\n          <label for=\"logo\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\"> {{'Organisation_Registration.logo' | translate}}\r\n          </label>\r\n          <div class=\"p-col-12 p-md-10\">\r\n            <p-fileUpload name=\"logo\" mode=\"advanced\" [showUploadButton]=\"false\" customUpload=\"true\"\r\n              (uploadHandler)=\"UploadHandler($event)\" uploadLabel=\"Set Logo\" [auto]=\"true\"\r\n              accept=\"image/*\">\r\n              <ng-template pTemplate=\"content\">\r\n\r\n              </ng-template>\r\n            </p-fileUpload>\r\n            <div *ngIf=\"!fromFront\" class=\"p-mt-2\">\r\n              <img src=\"{{organisation.logo}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n            <div *ngIf=\"fromFront\" class=\"p-mt-2\">\r\n              <img src=\"{{imageSrc}}\" alt=\"organisation logo\" width=\"80\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"p-field p-grid\">\r\n          <div class=\"p-xs-col-5  p-mr-4\">\r\n\r\n            <button pbutton pripple type=\"button\" label=\"cancel\"\r\n              class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-xs-col-5 \">\r\n            <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n              <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OpeningBalance } from '../../model/openingBalance';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-opening-balance',\r\n  templateUrl: './opening-balance.component.html',\r\n  styleUrls: ['./opening-balance.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class OpeningBalanceComponent implements OnInit {\r\n  data: OpeningBalance[] = new Array();\r\n  orgId: number;\r\n  prcId: number;\r\n  procedureName: string;\r\n  cols: TableColumn[];\r\n  originalOpeningBalance: number;\r\n  originalOpeningBalanceDate: Date;\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  filtersNo: number = 0;\r\n\r\n  constructor(\r\n    private _liquidityService: LiquidityService,\r\n    private datepipe: DatePipe,\r\n    private _messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountTypeNewName',\r\n        field: 'accountTypeNewName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalance',\r\n        field: 'StartingBalance',\r\n        width: '250',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.startingBalanceDate',\r\n        field: 'StartingBalanceDate',\r\n        align: 'center',\r\n      },\r\n    ];\r\n    this.searching = true;\r\n    this._liquidityService.getOpeningBalance(this.orgId, this.prcId).subscribe(\r\n      (res) => {\r\n        res.forEach((val) => {\r\n          val.StartingBalanceDate = val.StartingBalanceDate\r\n            ? new Date(val.StartingBalanceDate)\r\n            : null;\r\n          let accountNumber = parseInt(val.accountNumber?.toString(), 10);\r\n          val.accountNumber = isNaN(accountNumber)\r\n            ? val.accountNumber\r\n            : accountNumber;\r\n          let StartingBalance = parseFloat(val?.StartingBalance?.toString());\r\n          val.StartingBalance = isNaN(StartingBalance)\r\n            ? val.StartingBalance\r\n            : StartingBalance;\r\n        });\r\n        this.data = res;\r\n        this.tempData = res;\r\n        this.searching = false;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  } // end of ng on init\r\n\r\n  editRow(row: OpeningBalance) {\r\n    this.data\r\n      .filter((row) => row.isEditable)\r\n      .map((r) => {\r\n        r.isEditable = false;\r\n        return r;\r\n      });\r\n    row.isEditable = true;\r\n    this.originalOpeningBalance = row.StartingBalance;\r\n    this.originalOpeningBalanceDate = row.StartingBalanceDate;\r\n  }\r\n\r\n  resetStartingBalance(row: OpeningBalance) {\r\n    row.StartingBalance = null;\r\n    row.StartingBalanceDate = null;\r\n    this.save(row);\r\n  }\r\n\r\n  save(row: OpeningBalance) {\r\n    this.searching = true;\r\n    let tempRow: any = {...row};\r\n    tempRow.StartingBalanceDate = this.datepipe.transform(row.StartingBalanceDate, 'yyyy-MM-dd');\r\n    this._liquidityService\r\n      .updateOpeningBalance(this.orgId, this.prcId, tempRow)\r\n      .subscribe(\r\n        (res) => {\r\n          row.isEditable = false;\r\n          let numOfRecords = res.length > 0 ? res[0] : 0;\r\n          localStorage.setItem('currentProcedureLiquidity', 'true');\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'DONE!',\r\n            detail: `opening balance is updated successfully in the targeted posting data, \\n ${numOfRecords} updated.`,\r\n          });\r\n          this.searching = false;\r\n        },\r\n        (er) => {\r\n          this.searching = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel(row: OpeningBalance) {\r\n    row.StartingBalance = this.originalOpeningBalance;\r\n    row.StartingBalanceDate = this.originalOpeningBalanceDate;\r\n    row.isEditable = false;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      this.filtersNo--;\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (key == 'StartingBalanceDate') {\r\n              this.data = this.tempData.filter(\r\n                (value) =>\r\n                  value['StartingBalanceDate']?.getDate() ==\r\n                    element.getDate() &&\r\n                  value['StartingBalanceDate']?.getMonth() ==\r\n                    element.getMonth() &&\r\n                  value['StartingBalanceDate']?.getFullYear() ==\r\n                    element.getFullYear()\r\n              );\r\n            } else {\r\n              if (element.length < 3) {\r\n                this.data = this.tempData.filter(\r\n                  (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n                );\r\n              } else {\r\n                this.data = this.tempData.filter((value) =>\r\n                  value[key]?.toLowerCase().includes(element.toLowerCase())\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.filtersNo++;\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (key == 'StartingBalanceDate') {\r\n            this.data = this.tempData.filter(\r\n              (value) =>\r\n                value['StartingBalanceDate']?.getDate() == element.getDate() &&\r\n                value['StartingBalanceDate']?.getMonth() ==\r\n                  element.getMonth() &&\r\n                value['StartingBalanceDate']?.getFullYear() ==\r\n                  element.getFullYear()\r\n            );\r\n          } else {\r\n            if (element.length < 3) {\r\n              this.data = this.data.filter(\r\n                (value) =>\r\n                  value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.data.filter((value) =>\r\n                value[key]\r\n                  ?.toString()\r\n                  .toLowerCase()\r\n                  .includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {};\r\n    this.data = [...this.tempData];\r\n    this.filtersNo = 0;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">\r\n      {{ procedureName }}\r\n    </h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n  </div>\r\n\r\n\r\n  <div class=\"p-col-12\">\r\n    <p-table\r\n      #dt\r\n      dataKey=\"accountNumber\"\r\n      [value]=\"data\"\r\n      [columns]=\"cols\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [resizableColumns]=\"true\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"400px\"\r\n      [reorderableColumns]=\"true\"\r\n      [loading]=\"searching\"\r\n    >\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-mb-4\">\r\n          <button\r\n            type=\"button\"\r\n            pButton\r\n            pRipple\r\n            icon=\"pi pi-filter-slash\"\r\n            (click)=\"clearFilter()\"\r\n            class=\"p-ml-6 clearFilter\"\r\n            pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n            *ngIf=\"filtersNo > 0\"\r\n            tooltipPosition=\"bottom\"\r\n          ></button>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of cols\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{ \"Account_Type.Action\" | translate }}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n              *ngIf=\"col.field != 'StartingBalanceDate'\"\r\n            />\r\n            <p-calendar\r\n              *ngIf=\"col.field == 'StartingBalanceDate'\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              (onSelect)=\"filterChange($event, col.field)\"\r\n              [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\"\r\n              yearRange=\"1900:2100\"\r\n              appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"\r\n            >\r\n            </p-calendar>\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr [pEditableRow]=\"row\">\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of cols\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span\r\n              *ngIf=\"\r\n                col.field != 'StartingBalance' &&\r\n                col.field != 'StartingBalanceDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n\r\n            <span *ngIf=\"!row.isEditable && col.field == 'StartingBalanceDate'\">\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n\r\n            <p-inputNumber\r\n              *ngIf=\"row.isEditable && col.field == 'StartingBalance'\"\r\n              [(ngModel)]=\"row.StartingBalance\"\r\n              mode=\"decimal\"\r\n              locale=\"de-DE\"\r\n              [showButtons]=\"true\"\r\n              buttonLayout=\"horizontal\"\r\n              inputId=\"horizontal\"\r\n              spinnerMode=\"horizontal\"\r\n              [step]=\"100\"\r\n              decrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonClass=\"p-button-secondary\"\r\n              incrementButtonIcon=\"pi pi-plus\"\r\n              decrementButtonIcon=\"pi pi-minus\"\r\n              [style]=\"{ 'margin-right': '10px' }\"\r\n              size=\"8\"\r\n            >\r\n            </p-inputNumber>\r\n\r\n            <p-calendar\r\n              *ngIf=\"row.isEditable && col.field == 'StartingBalanceDate'\"\r\n              [(ngModel)]=\"row.StartingBalanceDate\"\r\n              [monthNavigator]=\"true\"\r\n              [yearNavigator]=\"true\"\r\n              yearRange=\"1900:2100\"\r\n              appendTo=\"body\"\r\n              dateFormat=\"dd.mm.yy\"\r\n              clientTimeZone=\"local\"\r\n            ></p-calendar>\r\n          </td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-pencil\"\r\n              (click)=\"editRow(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Edit' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-save\"\r\n              (click)=\"save(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-times\"\r\n              (click)=\"cancel(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"row.isEditable\"\r\n              pTooltip=\"{{ 'Account_Type.Cancel' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            &nbsp;\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-trash\"\r\n              (click)=\"resetStartingBalance(row)\"\r\n              class=\"p-button-rounded p-button-warning\"\r\n              *ngIf=\"!row.isEditable\"\r\n              pTooltip=\"{{ 'Liquidity.delete' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Titles } from \"../model/titles\";\r\nimport { Users } from \"../model/users\";\r\nimport { UserService } from \"../service/user.service\";\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.sass']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n  titles: Titles[] = Titles.getTitles();\r\n  roles = [{name:'Manager', value: 2}, {name:'User', value: 3}];\r\n  \r\n\r\n  userModel: Users;\r\n\r\n  constructor(private _router: Router, private _messageService: MessageService, private _userService: UserService, public _translateService: TranslateService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userModel = new Users();\r\n    this.userModel.id = +localStorage.getItem('selectedUser_userId');\r\n    this.userModel.RoleId = +localStorage.getItem('selectedUser_roleId');\r\n    this.userModel.username = localStorage.getItem('selectedUser_username');\r\n    this.userModel.email = localStorage.getItem('selectedUser_email');\r\n    this.userModel.title = localStorage.getItem('selectedUser_title');\r\n    this.userModel.firstname = localStorage.getItem('selectedUser_firstname');\r\n    this.userModel.lastname = localStorage.getItem('selectedUser_lastname');\r\n    this.userModel.mobileNumber = localStorage.getItem('selectedUser_mobileNr');\r\n    this.userModel.street = localStorage.getItem('selectedUser_street');\r\n    this.userModel.housenumber = parseFloat(localStorage.getItem('selectedUser_houseNr'));\r\n    this.userModel.postCode = localStorage.getItem('selectedUser_postcode');\r\n    this.userModel.city = localStorage.getItem('selectedUser_city');\r\n    this.userModel.country = localStorage.getItem('selectedUser_country');\r\n  }\r\n\r\n  submitHandler() {\r\n    this._userService.editUser(this.userModel)\r\n      .subscribe(res => {\r\n        // console.dir('done: ' + res);\r\n        this._messageService.add({\r\n          severity: 'success',\r\n          summary: 'Updated successfully!',\r\n          detail: 'Updated successfully'\r\n        });\r\n      }, err => {\r\n        this._translateService.get(\"ErrorHandler\").subscribe(elem => {\r\n          let errorMsg = \"\" ; \r\n\r\n          if(err.status=== 400){\r\n            errorMsg = elem.badRequest_400\r\n          }\r\n          else if (err.status=== 401) {\r\n            errorMsg = elem.unauthorized_401\r\n          }\r\n          else if (err.status=== 403) {\r\n            errorMsg = elem.forbidden_403\r\n          }\r\n          else if (err.status=== 404) {\r\n            errorMsg = elem.NotFound_404\r\n          }\r\n          else if (err.status=== 500) {\r\n            errorMsg = elem.internalServerError_500\r\n          }\r\n          this._messageService.add({\r\n            severity: 'error',\r\n            summary: 'ERROR',\r\n            life: 10000,\r\n            detail: errorMsg\r\n          });\r\n        })\r\n      });\r\n  }\r\n  cancelHandle(){\r\n    this._router.navigate(['/dashboard/shared/user/users']); \r\n    localStorage.removeItem(\"selectedUser_userId\");\r\n    localStorage.removeItem(\"selectedUser_roleId\");\r\n    localStorage.removeItem(\"selectedUser_username\");\r\n    localStorage.removeItem(\"selectedUser_email\");\r\n    localStorage.removeItem(\"selectedUser_title\");\r\n    localStorage.removeItem(\"selectedUser_firstname\");\r\n    localStorage.removeItem(\"selectedUser_lastname\");\r\n    localStorage.removeItem(\"selectedUser_mobileNr\");\r\n    localStorage.removeItem(\"selectedUser_street\");\r\n    localStorage.removeItem(\"selectedUser_houseNr\");\r\n    localStorage.removeItem(\"selectedUser_postcode\");\r\n    localStorage.removeItem(\"selectedUser_city\");\r\n    localStorage.removeItem(\"selectedUser_country\");\r\n\r\n  }\r\n}\r\n","<div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2\">\r\n    <div class=\"card\">\r\n        <p-toast></p-toast>\r\n        <div class=\"p-text-center p-mb-4 titleFontStyle\"> {{'User_Registration.editHeader' | translate}} </div>\r\n        <form class=\"p-fluid\"  (ngSubmit)=\"submitHandler()\">\r\n\r\n\r\n            <div class=\"p-fluid\">\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.role' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown placeholder=\"{{'User_Registration.rolePlaceHolder' | translate}}\" name=\"role\"  #role=\"ngModel\" [options]=\"roles\" optionValue=\"value\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.RoleId\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label  class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.title' | translate}} </label>\r\n                    <div class=\"p-col-12 p-md-10\">\r\n                        <p-dropdown  name=\"title\"  #title1=\"ngModel\" [options]=\"titles\" optionValue=\"name\" optionLabel=\"name\" class=\"ng-tns-c42-167 ng-pristine ng-valid ng-touched\" [showClear]=\"true\"  [(ngModel)]=\"userModel.title\" >\r\n                            <div class=\"ng-tns-c42-167 p-dropdown p-component\">\r\n                                <span class=\"ng-tns-c42-167 p-dropdown-label p-inputtext p-placeholder p-dropdown-label-empty ng-star-inserted\"> </span>\r\n                            </div>\r\n                        </p-dropdown>  \r\n\r\n                    </div>\r\n                </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"firstname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\">{{'User_Registration.firstname' | translate}}</label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #firstname=\"ngModel\"  name=\"firstname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.firstname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"lastname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.lastname' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #lastname=\"ngModel\"  name=\"lastname\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.lastname\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"email\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.email' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #email=\"ngModel\"  name=\"email\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.email\" pattern=\"^(\\D)+(\\w)*((\\.(\\w)+)?)+@(\\D)+(\\w)*((\\.(\\D)+(\\w)*)+)?(\\.)[a-z]{2,}$\" > \r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"username\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.username' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #username=\"ngModel\"  name=\"username\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.username\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"mobileNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.mobileNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #mobileNumber=\"ngModel\"  name=\"mobileNumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.mobileNumber\" > \r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"street\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.street' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #street=\"ngModel\"  name=\"street\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.street\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"housenumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.houseNr' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input   #housenumber=\"ngModel\"  name=\"housenumber\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.housenumber\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"city\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.city' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #city=\"ngModel\"  name=\"city\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.city\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"postCode\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.postcode' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #postCode=\"ngModel\"  name=\"postCode\" type=\"number\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.postCode\" > \r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <label for=\"country\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 fontStyle\"> {{'User_Registration.country' | translate}} </label>\r\n                <div class=\"p-col-12 p-md-10\">\r\n                    <input  #country=\"ngModel\"  name=\"country\" type=\"text\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"userModel.country\" > \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-xs-col-5  p-mr-4\">\r\n    \r\n                    <button pbutton pripple type=\"button\" label=\"cancel\" class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.cancelButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"p-xs-col-5 \">\r\n                    <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \" >\r\n                        <span class=\"p-button-label\"> {{'User_Registration.confirmButton' | translate}} </span>\r\n                    </button>\r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","export const environment = {\r\n  production: false,\r\n  // baseUrl: 'http://localhost:8000/api/',\r\n   baseUrl: 'http://venalytics.de:8000/api/',\r\n  // 'https://www.openthesaurus.de/synonyme/search?format=application/json&q='\r\n  // autocomplete: 'https://www.wordreference.com/2012/autocomplete/autocomplete.aspx?dict=deen&query='\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreCalculateService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin/precalculate/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  textAnalysisByWord(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'text-by-word/' + orgId +'/' + prcId);\r\n  }\r\n\r\n\r\n  textAnalysisByAccount(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'text-by-account/' + orgId +'/' + prcId);\r\n  }\r\n\r\n\r\n  amountAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'amount/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  creditorAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'creditor/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  paymentAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'payment/' + orgId +'/' + prcId);\r\n  }\r\n\r\n  dueDateAnalysis(orgId: number, prcId: number) {\r\n    return this._http.get<any>(this._thisURL + 'due-date/' + orgId +'/' + prcId);\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n\r\n<p-table\r\n  #dtmaxb\r\n  dataKey=\"accountNumber\"\r\n  [value]=\"data\"\r\n  [resizableColumns]=\"true\"\r\n  styleClass=\"p-datatable-gridlines\"\r\n  [columns]=\"cols\"\r\n  responsive=\"true\"\r\n  [scrollable]=\"true\"\r\n  scrollHeight=\"350px\"\r\n  [reorderableColumns]=\"true\"\r\n  [loading]=\"waiting\"\r\n  [lazy]=\"true\"\r\n  [customSort]=\"true\"\r\n  (onLazyLoad)=\"sort($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\">\r\n    <div class=\"p-mb-4\">\r\n      <!-- Limit options -->\r\n      <p-dropdown\r\n        [options]=\"pageLimitSizes\"\r\n        optionValue=\"value\"\r\n        optionLabel=\"label\"\r\n        [(ngModel)]=\"limit\"\r\n        (onChange)=\"limitChange($event)\"\r\n        class=\"p-mr-2\"\r\n      ></p-dropdown>\r\n      <!-- Go to First page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-left\"\r\n        (click)=\"firstPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go previous -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr === 1\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-left\"\r\n        (click)=\"previousPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Page number -->\r\n      <input\r\n        pInputText\r\n        type=\"number\"\r\n        min=\"1\"\r\n        class=\"pageNrInput p-mr-2\"\r\n        (input)=\"pageNrChange($any($event.target).value)\"\r\n        [value]=\"pageNr\"\r\n        [placeholder]=\"pageNr\"\r\n      />\r\n      <!-- Go to next Page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-right\"\r\n        (click)=\"nextPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n      <!-- Go to last page -->\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"pageNr >= maxPageNr\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-angle-double-right\"\r\n        (click)=\"lastPage()\"\r\n        class=\"p-mr-2\"\r\n        pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n\r\n      <!-- dispalyed data of total count -->\r\n      {{ displayedDataCount }} of {{ totalCount }}\r\n      <!-- Clear filter -->\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-filter-slash\"\r\n        (click)=\"clearFilter()\"\r\n        class=\"p-ml-6 clearFilter\"\r\n        pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n        *ngIf=\"filtersNo > 0\"\r\n        tooltipPosition=\"bottom\"\r\n      ></button>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"colgroup\" let-columns>\r\n    <colgroup>\r\n      <col *ngFor=\"let col of columns\" />\r\n      <col />\r\n    </colgroup>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"header\" let-columns>\r\n    <tr>\r\n      <th\r\n        pSortableColumn=\"{{ col.field }}\"\r\n        pResizableColumn\r\n        pReorderableColumn\r\n        class=\"p-text-{{ col.align }}\"\r\n        *ngFor=\"let col of columns\"\r\n      >\r\n        <span pTooltip=\"{{ col.header | translate }}\">\r\n          {{ col.header | translate }}\r\n        </span>\r\n        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n      </th>\r\n      <th>Details</th>\r\n    </tr>\r\n    <tr>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountNumber']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountNumber')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n      <th pResizableColumn class=\"autocomplete\">\r\n        <input\r\n          pInputText\r\n          type=\"text\"\r\n          [(ngModel)]=\"criteria['accountName']\"\r\n          [style]=\"{ width: '90%' }\"\r\n          (input)=\"filterChange($any($event.target).value, 'accountName')\"\r\n          class=\"filterInputCss\"\r\n        />\r\n      </th>\r\n    </tr>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n    <tr [pSelectableRow]=\"row\">\r\n      <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n        <span *ngIf=\"col.field == 'totalBalance'\">\r\n          {{ row.totalBalance | currency: \"EUR\":\"\" }}\r\n        </span>\r\n        <span\r\n          *ngIf=\"col.field != 'totalBalance'\"\r\n          pTooltip=\"{{ row[col.field] }}\"\r\n        >\r\n          {{ row[col.field] }}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          pButton\r\n          pRipple\r\n          icon=\"pi pi-list\"\r\n          class=\"p-button-rounded p-button-warning\"\r\n          (click)=\"goToDetails(row)\"\r\n          pTooltip=\"Details\"\r\n          tooltipPosition=\"bottom\"\r\n        ></button>\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</p-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-analysis-calc',\r\n  templateUrl: './creditor-analysis-calc.component.html',\r\n  styleUrls: ['./creditor-analysis-calc.component.sass']\r\n})\r\nexport class CreditorAnalysisCalcComponent implements OnInit {\r\n\r\n  cols: TableColumn[];\r\n  procedureName: string;\r\n  selectedProcedure: number;\r\n  selectedOrganisation: number;\r\n  waiting: any;\r\n  data: any;\r\n  accountNumber: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  criteria: any = {\r\n    limit: 25,\r\n    offset: 0,\r\n    orderBy: 'accountNumber',\r\n    sortOrder: 1,\r\n  };\r\n  pageLimitSizes = [{ value: 25, label: '25' }, { value: 50, label: '50' }, { value: 100, label: '100' }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _analysisService: AnalysisService,\r\n    private _messageService: MessageService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._translateService.get('CreditorsAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/creditor' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.cols = [\r\n        {\r\n          header: elem.accountNumber,\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.accountName,\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: elem.count,\r\n          field: 'totlaCount',\r\n          align: 'center',\r\n        },\r\n        {\r\n          header: elem.sum,\r\n          field: 'totalBalance',\r\n          align: 'right',\r\n        },\r\n      ];\r\n    });\r\n\r\n    // this.getData();\r\n  } // end of ng o0n init\r\n\r\n  filterChange(query, colName): void {\r\n    this.getData();\r\n  }\r\n\r\n  goToDetails(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/creditor/deails/' + row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    for (const key in this.criteria) {\r\n      if (!this.criteria[key] && key != 'offset') {\r\n        delete this.criteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.criteria).length - 4;\r\n    this._analysisService\r\n      .getCreditorAnalysisCalc(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.criteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.data = res.data;\r\n          this.totalCount = res.count[0]['FOUND_ROWS()'];\r\n          this.displayedDataCount =\r\n            this.totalCount > this.limit ? this.limit : this.totalCount;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    // debugger;\r\n    this.criteria.orderBy = event.sortField? event.sortField : 'accountNumber';\r\n    this.criteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.criteria.offset = 0;\r\n    this.criteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.criteria.offset = 0;\r\n    this.getData();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.criteria.offset += +this.limit;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.criteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.criteria.offset -= +this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.criteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getData();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.criteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getData();\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { TextAnalysisDetails } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ExportDataService } from 'src/app/shared/service/export-data.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-details',\r\n  templateUrl: './text-analysis-details.component.html',\r\n  styleUrls: ['./text-analysis-details.component.sass'],\r\n})\r\nexport class TextAnalysisDetailsComponent implements OnInit {\r\n  @Input('details') details: boolean = false;\r\n  orgId: number;\r\n  prcId: number;\r\n  accountNumber: string;\r\n  data: TextAnalysisDetails[] = new Array();\r\n  allRecordData: TextAnalysisDetails[] = new Array();\r\n  cols: TableColumn[];\r\n  frozenCols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string;\r\n  tempData: any[];\r\n  criteria: any = {};\r\n  searching: boolean = false;\r\n  selected: TextAnalysisDetails[] = new Array();\r\n  detailsOptions: { name: string; value: number }[];\r\n  detailsOption: number = 1;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for pagination\r\n  backCriteria: any;\r\n  pageLimitSizes = [{ value: 25 }, { value: 50 }, { value: 100 }];\r\n  limit: number = 25;\r\n  pageNr: number = 1;\r\n  maxPageNr: number = 0;\r\n  filtersNo: number = 0;\r\n  totalCount: any;\r\n  displayedDataCount: any;\r\n  accountName: string;\r\n  // for pagination ends\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _messageService: MessageService,\r\n    private _route: ActivatedRoute,\r\n    private _analysisService: AnalysisService,\r\n    private _translateService: TranslateService,\r\n    private _exportDataService: ExportDataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      {\r\n        label: 'Text Analysis',\r\n        routerLink: '/dashboard/analysis/text',\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n      {\r\n        label: 'Details',\r\n        routerLink: this._router.url,\r\n        routerLinkActiveOptions: { exact: true },\r\n      },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: 'Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n    this.waiting = true;\r\n    this.orgId = +this._route.snapshot.paramMap.get('orgId');\r\n    this.orgId = this.orgId\r\n      ? this.orgId\r\n      : +localStorage.getItem('organisationId');\r\n    this.prcId = +this._route.snapshot.paramMap.get('prcId');\r\n    this.prcId = this.prcId\r\n      ? this.prcId\r\n      : +localStorage.getItem('currentProcedureId');\r\n    this.accountNumber = this._route.snapshot.paramMap.get('accountNumber');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.backCriteria = {\r\n      limit: 25,\r\n      offset: 0,\r\n      orderBy: 'id',\r\n      sortOrder: 1,\r\n    };\r\n\r\n    this.detailsOptions = [\r\n      { name: 'Sys-Relevants', value: 1 },\r\n      { name: 'Marked', value: 2 },\r\n      { name: 'All', value: 3 },\r\n    ];\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'DataTableColumns.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.accountType',\r\n        field: 'accountType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentType',\r\n        field: 'documentType',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.balance',\r\n        field: 'balance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountNumber',\r\n        field: 'contraAccountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.contraAccountName',\r\n        field: 'contraAccountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentTypeNew',\r\n        field: 'documentTypeNew',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentNumber',\r\n        field: 'documentNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.documentDate',\r\n        field: 'documentDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.recordNumber',\r\n        field: 'recordNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.ledgerId',\r\n        field: 'ledgerId',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.executionDate',\r\n        field: 'executionDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.dueDate',\r\n        field: 'dueDate',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.reference',\r\n        field: 'reference',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textPosting',\r\n        field: 'textPosting',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'DataTableColumns.textHeader',\r\n        field: 'textHeader',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this.frozenCols = [\r\n      {\r\n        header: '',\r\n        field: 'textRelevant',\r\n        width: '6',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'Comment',\r\n        field: 'textRelevantComment',\r\n        width: '35',\r\n        align: 'left',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          if (this.data.length > 0) {\r\n            this.accountName = this.data[0].accountName;\r\n          }\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  goBack() {\r\n    this._router.navigate(['/dashboard/analysis/text/']);\r\n  }\r\n\r\n  async exportExcel() {\r\n    let translatedData = [];\r\n    for (let index = 0; index < this.data.length; index++) {\r\n      let element = this.data[index];\r\n      let translatedRecord = {};\r\n      for (const key in element) {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(element, key) &&\r\n          key != 'id' &&\r\n          key != 'procedureId'\r\n        ) {\r\n          let translatedKey = await this._translateService\r\n            .get('DataTableColumns.' + key)\r\n            .toPromise();\r\n          translatedRecord[translatedKey] = element[key];\r\n\r\n          // formatting\r\n          if (\r\n            element[key] &&\r\n            (key == 'balance' ||\r\n              key == 'debitAmount' ||\r\n              key == 'creditAmount' ||\r\n              key == 'taxAmount' ||\r\n              key == 'taxAmountDebit' ||\r\n              key == 'taxAmountCredit' ||\r\n              key == 'StartingBalance')\r\n          ) {\r\n            try {\r\n              let temp = Number.parseFloat(element[key].toString());\r\n              if (!Number.isNaN(temp)) {\r\n                translatedRecord[translatedKey] = temp.toLocaleString('de-DE', {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                });\r\n              }\r\n            } catch (e) {\r\n              // do nothing\r\n            }\r\n          } else if (\r\n            element[key] &&\r\n            (key == 'documentDate' ||\r\n              key == 'postingDate' ||\r\n              key == 'dueDate' ||\r\n              key == 'dueDateNew' ||\r\n              key == 'executionDate' ||\r\n              key == 'applicationDate' ||\r\n              key == 'StartingBalanceDate')\r\n          ) {\r\n            try {\r\n              let temp = new Date(Date.parse(element[key].toString()));\r\n              if (temp instanceof Date)\r\n                translatedRecord[translatedKey] = temp.toLocaleDateString(\r\n                  'de-DE',\r\n                  {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                  }\r\n                );\r\n            } catch (e) {}\r\n          }\r\n          // end of formatting\r\n        }\r\n      }\r\n      translatedData.push(translatedRecord);\r\n    }\r\n\r\n    import('xlsx').then((xlsx) => {\r\n      const worksheet = xlsx.utils.json_to_sheet(translatedData);\r\n      const workbook = {\r\n        Sheets: { text_analysis: worksheet },\r\n        SheetNames: ['text_analysis'],\r\n      };\r\n      const excelBuffer: any = xlsx.write(workbook, {\r\n        bookType: 'xlsx',\r\n        type: 'array',\r\n      });\r\n      this.saveAsExcelFile(excelBuffer, 'text_analysis');\r\n    });\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    let EXCEL_TYPE =\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    let EXCEL_EXTENSION = '.xlsx';\r\n    const d: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE,\r\n    });\r\n    // FileSaver.saveAs(file);\r\n    FileSaver.saveAs(\r\n      d,\r\n      fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION\r\n    );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]?.toLowerCase().includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  selectRow(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    if (row.textRelevant) {\r\n      row.textRelevant = false;\r\n      row.textRelevantComment = '';\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['textRelevant'] = false;\r\n        this.selected[index]['textRelevantComment'] = '';\r\n      }\r\n    } else {\r\n      row.textRelevant = true;\r\n      if (index == -1) {\r\n        this.selected.push(row);\r\n      } else {\r\n        // update the old one\r\n        this.selected[index]['textRelevant'] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  commentChanged(row: TextAnalysisDetails): void {\r\n    const index = this.selected.map((item) => item.id).indexOf(row.id);\r\n    row.textRelevant = true;\r\n    if (index == -1) {\r\n      this.selected.push(row);\r\n    } else {\r\n      // update the old one\r\n      this.selected[index]['textRelevant'] = true;\r\n      this.selected[index]['textRelevantComment'] = row.textRelevantComment;\r\n    }\r\n  }\r\n\r\n  saveRelevant() {\r\n    console.log(this.selected);\r\n    this._analysisService\r\n      .setRelevantTextAnalysis(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.selected\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this._messageService.add({\r\n            severity: 'success',\r\n            summary: 'SUCCESS',\r\n            life: 10000,\r\n            detail: 'records set as relevant successfully!',\r\n          });\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  changeData(option: number): void {\r\n    switch (option) {\r\n      case 1:\r\n        this.getSysRelevant();\r\n        break;\r\n      case 2:\r\n        this.getUserRelevant();\r\n        break;\r\n      case 3:\r\n        // this.getAllByAccount();\r\n        break;\r\n      default:\r\n        this.getSysRelevant();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getSysRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetails(this.orgId, this.prcId, this.accountNumber)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserRelevant() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getTextAnalysisDetailsRelevant(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllByAccount() {\r\n    this.waiting = true;\r\n    for (const key in this.backCriteria) {\r\n      if (!this.backCriteria[key] && key != 'offset') {\r\n        delete this.backCriteria[key];\r\n      }\r\n    }\r\n    this.filtersNo = Object.keys(this.backCriteria).length - 4;\r\n    this._analysisService\r\n      .getTextAnalysisDetailsByAccount(\r\n        this.orgId,\r\n        this.prcId,\r\n        this.accountNumber,\r\n        this.backCriteria\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.allRecordData = res.rows;\r\n          this.totalCount = res.count;\r\n          this.displayedDataCount = this.allRecordData.length;\r\n          this.maxPageNr = Math.ceil(this.totalCount / this.limit);\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  sort(event) {\r\n    this.backCriteria.orderBy = event.sortField? event.sortField : 'id';\r\n    this.backCriteria.sortOrder = event.sortOrder;\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  // export excel from back-end for all table\r\n  exportXLSX() {\r\n    this.waiting = true;\r\n    const lang = localStorage.getItem('lang');\r\n    let criteriaWithLang = { ...this.backCriteria };\r\n    criteriaWithLang['lang'] = lang;\r\n    criteriaWithLang['accountNumber'] = this.accountNumber;\r\n    criteriaWithLang['procedureId'] = this.prcId;\r\n    // debugger;\r\n    this._exportDataService\r\n      .exportXLSX('text_analysis', this.orgId, this.prcId, criteriaWithLang)\r\n      .subscribe(\r\n        (res) => {\r\n          this.waiting = false;\r\n          this.saveAsExcelFile(res, 'Text_details');\r\n          // window.open(url.toString(), '_blank');\r\n        },\r\n        (err) => {this.waiting = false;}\r\n      );\r\n  }\r\n\r\n  // for pagination starts\r\n\r\n  filterChangeBack(query, colName): void {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  limitChange(e) {\r\n    this.limit = e.value;\r\n    this.backCriteria.offset = 0;\r\n    this.backCriteria.limit = this.limit;\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  firstPage() {\r\n    this.pageNr = 1;\r\n    this.backCriteria.offset = 0;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  nextPage() {\r\n    ++this.pageNr;\r\n    if (this.pageNr > this.maxPageNr) return;\r\n    this.backCriteria.offset += +this.limit;\r\n\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  lastPage() {\r\n    this.pageNr = this.maxPageNr;\r\n    this.backCriteria.offset = (this.pageNr - 1) * +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  previousPage() {\r\n    --this.pageNr;\r\n    if (this.pageNr <= 0) return;\r\n    this.backCriteria.offset -= +this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  pageNrChange(value) {\r\n    this.pageNr = (value && value.trim()) ? value : 1;\r\n    this.backCriteria.offset = (this.pageNr - 1) * this.limit;\r\n    this.getAllByAccount();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.backCriteria = {\r\n      limit: this.limit,\r\n      offset: 0,\r\n    };\r\n    this.pageNr = 1;\r\n    this.getAllByAccount();\r\n  }\r\n  // for pagination ends\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb *ngIf=\"!details\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\" *ngIf=\"!details\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h3 class=\"p-text-center\">{{ accountName }}</h3>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"waiting\"\r\n    ></p-progressBar>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <!-- <div class=\"card\"> -->\r\n  <div class=\"p-col-12\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton\r\n        [options]=\"detailsOptions\"\r\n        (onChange)=\"changeData($event.value)\"\r\n        optionLabel=\"name\"\r\n        optionValue=\"value\"\r\n        [(ngModel)]=\"detailsOption\"\r\n      >\r\n      </p-selectButton>\r\n    </span>\r\n    <p-progressBar\r\n      mode=\"indeterminate\"\r\n      [style]=\"{ height: '5px' }\"\r\n      *ngIf=\"searching\"\r\n    ></p-progressBar>\r\n    <p-table\r\n      #dt\r\n      dataKey=\"id\"\r\n      [value]=\"data\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption != 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportExcel()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <!-- <th> -->\r\n          <!-- <p-tableHeaderCheckbox></p-tableHeaderCheckbox> -->\r\n          <!-- </th> -->\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-center\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <!-- <th></th> -->\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"\r\n                col.field != 'textRelevant' &&\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName'\r\n              \"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"criteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevantComment' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table\r\n      #dtall\r\n      dataKey=\"id\"\r\n      [value]=\"allRecordData\"\r\n      [resizableColumns]=\"true\"\r\n      dataKey=\"id\"\r\n      *ngIf=\"detailsOption == 3\"\r\n      styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\"\r\n      [columns]=\"cols\"\r\n      responsive=\"true\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"350px\"\r\n      [style]=\"{ width: '100%' }\"\r\n      [reorderableColumns]=\"true\"\r\n      [frozenColumns]=\"frozenCols\"\r\n      frozenWidth=\"500px\"\r\n      [(selection)]=\"selected\"\r\n      [lazy]=\"true\"\r\n      [customSort]=\"true\"\r\n      (onLazyLoad)=\"sort($event)\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-grid\">\r\n          <div class=\"p-col-1\" *ngIf=\"!details\">\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-arrow-left\"\r\n              (click)=\"goBack()\"\r\n              class=\"p-button-rounded p-button-primary\"\r\n              label=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              pTooltip=\"{{ 'TextAnalysis.back' | translate }} \"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-4\">\r\n            <!--             <button type=\"button\" pButton pRipple icon=\"pi pi-file-excel\" (click)=\"exportExcel()\"></button>\r\n -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-file-excel\"\r\n              (click)=\"exportXLSX()\"\r\n              class=\"p-button-warning p-mr-2\"\r\n              pTooltip=\"{{ 'TextAnalysis.export' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-check\"\r\n              (click)=\"saveRelevant()\"\r\n              class=\"p-button-primary p-mr-2\"\r\n              pTooltip=\"{{ 'Analysis.save' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n              label=\"{{ 'Analysis.saveRelevant' | translate }}\"\r\n            ></button>\r\n          </div>\r\n          <div class=\"p-col-7\">\r\n            <!-- Limit options -->\r\n            <p-dropdown\r\n              [options]=\"pageLimitSizes\"\r\n              optionValue=\"value\"\r\n              optionLabel=\"value\"\r\n              [(ngModel)]=\"limit\"\r\n              (onChange)=\"limitChange($event)\"\r\n              class=\"p-mr-2\"\r\n            ></p-dropdown>\r\n            <!-- Go to First page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-left\"\r\n              (click)=\"firstPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.firstPage' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go previous -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr === 1\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-left\"\r\n              (click)=\"previousPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.previous' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Page number -->\r\n            <input\r\n              pInputText\r\n              type=\"number\"\r\n              min=\"1\"\r\n              class=\"pageNrInput p-mr-2\"\r\n              (input)=\"pageNrChange($any($event.target).value)\"\r\n              [value]=\"pageNr\"\r\n              [placeholder]=\"pageNr\"\r\n            />\r\n            <!-- Go to next Page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-right\"\r\n              (click)=\"nextPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.next' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n            <!-- Go to last page -->\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"pageNr >= maxPageNr\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-angle-double-right\"\r\n              (click)=\"lastPage()\"\r\n              class=\"p-mr-2\"\r\n              pTooltip=\"{{ 'Data_Table.lastPage' | translate }}\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n\r\n            <!-- dispalyed data of total count -->\r\n            {{ displayedDataCount }} of {{ totalCount }}\r\n            <!-- Clear filter -->\r\n            <button\r\n              type=\"button\"\r\n              pButton\r\n              pRipple\r\n              icon=\"pi pi-filter-slash\"\r\n              (click)=\"clearFilter()\"\r\n              class=\"p-ml-6 clearFilter\"\r\n              pTooltip=\"{{ 'Data_Table.clearFilter' | translate }}\"\r\n              *ngIf=\"filtersNo > 0\"\r\n              tooltipPosition=\"bottom\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col\r\n            *ngFor=\"let col of columns\"\r\n            [style]=\"{ width: (col.width ? col.width : 200) + 'px' }\"\r\n          />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th\r\n            pSortableColumn=\"{{ col.field }}\"\r\n            pResizableColumn\r\n            pReorderableColumn\r\n            class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\"\r\n          >\r\n            {{ col.header | translate }}\r\n            <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input\r\n              *ngIf=\"\r\n                col.field != 'textRelevant' &&\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName'\r\n              \"\r\n              pInputText\r\n              type=\"text\"\r\n              [(ngModel)]=\"backCriteria[col.field]\"\r\n              [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChangeBack($any($event.target).value, col.field)\"\r\n              class=\"filterInputCss\"\r\n            />\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <!-- <td> -->\r\n          <!-- <i class=\"pi pi-star-o\" (click)=\"selectRow(row)\" *ngIf=\"!row.textRelevant\"></i> -->\r\n          <!-- <i class=\"pi pi-star\" (click)=\"selectRow(row)\" *ngIf=\"row.textRelevant\"></i> -->\r\n          <!-- <p-tableCheckbox [value]=\"row\"></p-tableCheckbox> -->\r\n          <!-- </td> -->\r\n          <!-- <td pEditableColumn>\r\n            \r\n        </td> -->\r\n          <td\r\n            pEditableColumn\r\n            pReorderableRowHandle\r\n            *ngFor=\"let col of columns\"\r\n            class=\"p-text-{{ col.align }}\"\r\n          >\r\n            <span *ngIf=\"col.field == 'textRelevant'\">\r\n              <i\r\n                class=\"pi pi-star-o\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"!row.textRelevant\"\r\n              ></i>\r\n              <i\r\n                class=\"pi pi-star\"\r\n                (click)=\"selectRow(row)\"\r\n                *ngIf=\"row.textRelevant\"\r\n              ></i>\r\n            </span>\r\n            <p-cellEditor *ngIf=\"col.field == 'textRelevantComment'\">\r\n              <ng-template pTemplate=\"input\">\r\n                <input\r\n                  pInputText\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"row.textRelevantComment\"\r\n                  style=\"width: 100%; padding: 5px\"\r\n                  (change)=\"commentChanged(row)\"\r\n                />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ row.textRelevantComment }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n            <span *ngIf=\"col.field == 'balance'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'documentDate' ||\r\n                col.field == 'executionDate' ||\r\n                col.field == 'dueDate'\r\n              \"\r\n            >\r\n              {{ row[col.field] | date: \"dd.MM.yyyy\" }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                col.field == 'reference' ||\r\n                col.field == 'textPosting' ||\r\n                col.field == 'textHeader'\r\n              \"\r\n              [innerHTML]=\"row[col.field] | highlight\"\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n            >\r\n            </span>\r\n            <span\r\n              pTooltip=\"{{ row[col.field] }}\"\r\n              *ngIf=\"\r\n                col.field != 'balance' &&\r\n                col.field != 'documentDate' &&\r\n                col.field != 'executionDate' &&\r\n                col.field != 'dueDate' &&\r\n                col.field != 'reference' &&\r\n                col.field != 'textPosting' &&\r\n                col.field != 'textHeader' &&\r\n                col.field != 'textRelevantComment' &&\r\n                col.field != 'textRelevant'\r\n              \"\r\n            >\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td [attr.colspan]=\"columns.length\">No records found</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n  <!-- </div> -->\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentAnalysis, PaymentData } from '../../model/paymentAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n@Component({\r\n  selector: 'app-payment-analysis',\r\n  templateUrl: './payment-analysis.component.html',\r\n  styleUrls: ['./payment-analysis.component.sass'],\r\n})\r\nexport class PaymentAnalysisComponent implements OnInit {\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  specificAccountData: any;\r\n  data: PaymentData[];\r\n  blueData: any[] = new Array();\r\n  RedData: any[] = new Array();\r\n  GreenData: any[] = new Array();\r\n  specificAccountBlueData: any[] = new Array();\r\n  specificAccountRedData: any[] = new Array();\r\n  specificAccountGreenData: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  ready: boolean = false;\r\n  accounts: any[] = new Array();\r\n  blueAccounts: any[] = new Array();\r\n  top10Blue: any[] = new Array();\r\n  greenAccounts: any[] = new Array();\r\n  redAccounts: any[] = new Array();\r\n  startDate: Date = new Date();\r\n  endDate: Date = new Date();\r\n  procedureName: string;\r\n  top10Red: any[];\r\n  top10Green: any[];\r\n  top10: number;\r\n  paymentOptions: { name: string; value: number; color: string }[];\r\n  top10Cols: TableColumn[];\r\n  accountsCols: TableColumn[];\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  selectedMaxAccountNumber: string;\r\n  selectedMaxAccount: any;\r\n  @ViewChild('chart') chart: any;\r\n  selectedMaxAccountName: string;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  blue: string;\r\n  red: string;\r\n  green: string;\r\n  waiting: boolean = true;\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.waiting = true;\r\n    this._translateService.get('PaymentAnalysis').subscribe((elem) => {\r\n      this.blue = elem.blue;\r\n      this.red = elem.red;\r\n      this.green = elem.green;\r\n\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/payment' },\r\n      ];\r\n\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n\r\n      this.basicOptions = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function (tooltipItem, data) {\r\n              let value = tooltipItem.value;\r\n              let currencyPipe = new CurrencyPipe('de');\r\n              value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              return label + ': ' + value;\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 40,\r\n                maxRotation: 90,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                minRotation: 0,\r\n                maxRotation: 0,\r\n                callback: function (label, index, values) {\r\n                  // debugger;\r\n                  let currencyPipe = new CurrencyPipe('de');\r\n                  label = currencyPipe.transform(label, 'EURO', '');\r\n                  return label;\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n      this.top10 = 1;\r\n\r\n      this.paymentOptions = [\r\n        { name: this.blue, value: 1, color: 'rgb(100,100,255)' },\r\n        { name: this.red, value: 2, color: 'rgb(255,100,100)' },\r\n        { name: this.green, value: 3, color: 'rgb(100,255,100)' },\r\n      ];\r\n\r\n      this.top10Cols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.sum',\r\n          field: 'value',\r\n          align: 'right',\r\n        },\r\n      ];\r\n\r\n      this.accountsCols = [\r\n        {\r\n          header: 'PaymentAnalysis.accountNumber',\r\n          field: 'accountNumber',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.accountName',\r\n          field: 'accountName',\r\n          align: 'left',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.blue',\r\n          field: 'blue',\r\n          align: 'right',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.red',\r\n          field: 'red',\r\n          align: 'right',\r\n        },\r\n        {\r\n          header: 'PaymentAnalysis.green',\r\n          field: 'green',\r\n          align: 'right',\r\n        },\r\n      ];\r\n\r\n      this.basicData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.basicData.datasets.push(\r\n        {\r\n          label: this.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.blueData,\r\n        },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.RedData,\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.GreenData,\r\n        }\r\n      );\r\n\r\n      this.specificAccountData = {\r\n        labels: this.labels,\r\n        datasets: new Array(),\r\n      };\r\n\r\n      this.specificAccountData.datasets.push(\r\n        {\r\n          label: this.blue,\r\n          backgroundColor: `rgb(100,100,255)`,\r\n          data: this.specificAccountBlueData,\r\n        },\r\n        {\r\n          label: this.red,\r\n          backgroundColor: `rgb(255,100,100)`,\r\n          data: this.specificAccountRedData,\r\n        },\r\n        {\r\n          label: this.green,\r\n          backgroundColor: `rgb(100,255,100)`,\r\n          data: this.specificAccountGreenData,\r\n        }\r\n      );\r\n    });\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this._analysisService\r\n      .getPaymentAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res.data.res;\r\n          this.accounts = res.data.accounts;\r\n          this.startDate = res.dateRange[0].mindate;\r\n          this.endDate = res.dateRange[0].maxdate;\r\n\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n\r\n            this.labels.push(element.monthName + '-' + element.yearName);\r\n            this.blueData.push(Math.abs(element.blue.value));\r\n            this.GreenData.push(Math.abs(element.green.value));\r\n            this.RedData.push(Math.abs(element.red.value));\r\n          }\r\n\r\n          // get top 10\r\n          this.accounts.sort((a, b) => Math.abs(b.blue) - Math.abs(a.blue));\r\n          this.top10Blue = this.accounts.slice(0, 10);\r\n          this.accounts.sort((a, b) => Math.abs(b.red) - Math.abs(a.red));\r\n          this.top10Red = this.accounts.slice(0, 10);\r\n          this.accounts.sort((a, b) => Math.abs(b.green) - Math.abs(a.green));\r\n          this.top10Green = this.accounts.slice(0, 10);\r\n          // debugger;\r\n          this.accounts.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber, 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.ready = true;\r\n          this.waiting = false;\r\n          this.tempData = [...this.accounts];\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of init function\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/payment/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDueDate() {\r\n    this._router.navigate(['/dashboard/analysis/due-date']);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.accounts = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.accounts = this.accounts.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  onRowSelect(event): void {\r\n    // debugger;\r\n    // this.waiting = true;\r\n    this.selectedMaxAccountNumber = event.data.accountNumber;\r\n    this.selectedMaxAccountName = event.data.accountName;\r\n\r\n    // for each month\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      const element = this.data[i];\r\n      // for each account\r\n      if (element.blue.accounts) {\r\n        let total = 0;\r\n        element.blue.accounts.forEach((b) => {\r\n          // if the account is selected account add the value to the total\r\n          if (b.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += b.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountBlueData[i] = Math.abs(total);\r\n      }\r\n      if (element.red.accounts) {\r\n        let total = 0;\r\n        element.red.accounts.forEach((r) => {\r\n          // if the account is selected account add the value to the total\r\n          if (r.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += r.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountRedData[i] = Math.abs(total);\r\n      }\r\n      if (element.green.accounts) {\r\n        let total = 0;\r\n        element.green.accounts.forEach((g) => {\r\n          // if the account is selected account add the value to the total\r\n          if (g.accountNumber == this.selectedMaxAccountNumber) {\r\n            total += g.value;\r\n          }\r\n        }); // end of for each account\r\n        this.specificAccountGreenData[i] = Math.abs(total);\r\n      }\r\n    }\r\n    this.chart.refresh();\r\n    // this.waiting = false;\r\n    // this.chart.reinit();\r\n  }\r\n\r\n  onRowUnselect(event) {\r\n    this.selectedMaxAccountNumber = null;\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n    <!-- <button type=\"button\" pButton pRipple icon=\"pi pi-clock\" label=\" {{ 'DueDateAnalysis.label' | translate }}\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"goToDueDate()\"\r\n      pTooltip=\"{{ 'DueDateAnalysis.label' | translate }}\" tooltipPosition=\"bottom\"></button> -->\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"basicData && ready\">\r\n  <div class=\"p-col-6\">\r\n    <div class=\"card p-text-center\">\r\n      <span *ngIf=\"!selectedMaxAccountNumber\">\r\n        {{ \"PaymentAnalysis.allAccounts\" | translate }}\r\n      </span>\r\n      <p-chart type=\"bar\" height=\"450\" [data]=\"basicData\" [options]=\"basicOptions\" *ngIf=\"!selectedMaxAccountNumber\">\r\n      </p-chart>\r\n      <span *ngIf=\"selectedMaxAccountNumber\">\r\n        {{ selectedMaxAccountName }}\r\n      </span>\r\n      <p-chart #chart type=\"bar\" height=\"450\" [data]=\"specificAccountData\" [options]=\"basicOptions\"\r\n        *ngIf=\"selectedMaxAccountNumber\"></p-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-col-6\">\r\n    <span class=\"p-text-center\">\r\n      <p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"top10\" optionLabel=\"name\" optionValue=\"value\">\r\n        <!-- <ng-template let-item>\r\n          <i [style]=\"'background: {{item.color}}'\"></i>\r\n        </ng-template> -->\r\n      </p-selectButton>\r\n    </span>\r\n    <p-table #dtmaxb dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Blue\" *ngIf=\"top10 == 1\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.blue | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxr dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Red\" *ngIf=\"top10 == 2\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.red | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table #dtmaxg dataKey=\"accountNumber\" selectionMode=\"single\" [value]=\"top10Green\" *ngIf=\"top10 == 3\"\r\n      [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\" [columns]=\"top10Cols\" responsive=\"true\"\r\n      [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [(selection)]=\"selectedMaxAccount\"\r\n      (onRowSelect)=\"onRowSelect($event)\" (onRowUnselect)=\"onRowUnselect($event)\" [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pResizableColumn pReorderableColumn class=\"p-text-{{ col.align }}\" *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n            </span>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr [pSelectableRow]=\"row\">\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field == 'value'\">\r\n              {{ row.green | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field != 'value'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\" [hidden]=\"!selectedProcedure\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"accountsCols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"waiting\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" sorter=\"number\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th>Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field != 'accountNumber' && col.field != 'accountName'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { AmountAnalysis } from 'src/app/shared/model/amountAnalysis';\r\nimport { Bar } from 'src/app/shared/model/bar';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\n\r\n@Component({\r\n  selector: 'app-amount-analysis-pre',\r\n  templateUrl: './amount-analysis-pre.component.html',\r\n  styleUrls: ['./amount-analysis-pre.component.sass']\r\n})\r\nexport class AmountAnalysisPreComponent implements OnInit {\r\n\r\n  data: AmountAnalysis[] = new Array();\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  baseBalance = 0;\r\n  basicOptions: any;\r\n  basicData: any;\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.baseBalance = +this._route.snapshot.paramMap.get('baseBalance') ?? 500;\r\n    if(!this.baseBalance || isNaN(this.baseBalance)) this.baseBalance = 500;\r\n\r\n    this._translateService.get('AmountAnalysis').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.label, routerLink: '/dashboard/analysis/amount' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    });\r\n\r\n    this.waiting = true;\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.totalBalance',\r\n        field: 'totalBalance',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: AmountAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/amount/' +\r\n      this.selectedOrganisation +\r\n      '/' +\r\n      this.selectedProcedure +\r\n      '/' +\r\n      row.accountNumber +\r\n      '/' +\r\n      this.baseBalance,\r\n    ]);\r\n  }\r\n\r\n  getData() {\r\n    this.waiting = true;\r\n    this._analysisService\r\n      .getAmountAnalysis(\r\n        this.selectedOrganisation,\r\n        this.selectedProcedure,\r\n        this.baseBalance\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n          this.tempData = [...this.data];\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${(Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">Amount Analysis pre-calculated</h2> -->\r\n    <!-- <h2 class=\"p-text-center\">{{procedureName}}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card \">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"350px\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid p-mt-2\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"p-text-right\">\r\n      <label for=\"baseBalance\">{{'AmountAnalysis.baseBalance' | translate}}: </label>\r\n      <!-- <input pInputNumber type=\"number\" name=\"baseBalance\" [(ngModel)]=\"baseBalance\"/> -->\r\n      <p-inputNumber [(ngModel)]=\"baseBalance\" mode=\"decimal\" locale=\"de-DE\" [minFractionDigits]=\"2\" [min]=\"0\"\r\n        [showButtons]=\"true\" buttonLayout=\"horizontal\" inputId=\"horizontal\" spinnerMode=\"horizontal\" [step]=\"100\"\r\n        decrementButtonClass=\"p-button-secondary\" incrementButtonClass=\"p-button-secondary\"\r\n        incrementButtonIcon=\"pi pi-plus\" decrementButtonIcon=\"pi pi-minus\">\r\n      </p-inputNumber>\r\n      <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\" class=\"p-ml-2\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"p-col-12 \" *ngIf=\"selectedProcedure>0\">\r\n    <!-- <p-progressBar mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar> -->\r\n    <p-table #dt dataKey=\"id\" [value]=\"data\" [resizableColumns]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-gridlines\"\r\n      [loading]=\"waiting\" [columns]=\"cols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\">\r\n      <ng-template pTemplate=\"colgroup\">\r\n        <colgroup>\r\n          <col *ngFor=\"let col of cols\">\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pSortableColumn=\"{{col.field}}\" pResizableColumn pReorderableColumn  class=\"p-text-{{col.align}}\" *ngFor=\"let col of cols\">\r\n            <span pTooltip=\"{{ col.header | translate }}\">\r\n              {{col.header | translate}}\r\n            </span><p-sortIcon field=\"{{col.field}}\"></p-sortIcon>\r\n          </th>\r\n          <th>{{'AmountAnalysis.details' | translate}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{width:'90%'}\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field=='accountNumber' || col.field=='accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row>\r\n        <tr>\r\n          <td pReorderableRowHandle *ngFor=\"let col of cols\" class=\"p-text-{{col.align}}\">\r\n            <span *ngIf=\"col.field=='totalBalance'\">{{ row[col.field] | currency:'EUR':''}}</span>\r\n            <span *ngIf=\"col.field!='totalBalance'\" pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td><button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <br><br><br>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AnalysisService } from '../../service/analysis.service';\r\nimport { Bar } from '../../model/bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TextAnalysis } from '../../model/textAnalysis';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ProcedureService } from '../../service/procedure.service';\r\nimport { TableColumn } from '../../model/tableColumn';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis',\r\n  templateUrl: './text-analysis.component.html',\r\n  styleUrls: ['./text-analysis.component.sass'],\r\n})\r\nexport class TextAnalysisComponent implements OnInit {\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    this.waiting = true;\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this._analysisService\r\n      .getTextAnalysis(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWord(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => {}\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  } // end of ng on init\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n        row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n    <h4 class=\"p-text-left\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount?  'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.sass']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n    links\r\n</footer>\r\n","export class Bar {\r\n    label: string;\r\n    backgroundColor: string;\r\n    data: number[];\r\n\r\n    constructor(label: string, backgroundColor: string, data: number) {\r\n        this.label = label;\r\n        this.backgroundColor = backgroundColor;\r\n        this.data = new Array();\r\n        this.data.push(data);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-unauth',\r\n  templateUrl: './unauth.component.html',\r\n  styleUrls: ['./unauth.component.sass']\r\n})\r\nexport class UnauthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>  {{'Unauth.errorMsg' | translate}} </p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LiquidityService } from '../../service/liquidity.service';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { TableColumn } from '../../model/tableColumn';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-free-liquidity',\r\n  templateUrl: './free-liquidity.component.html',\r\n  styleUrls: ['./free-liquidity.component.sass'],\r\n})\r\nexport class FreeLiquidityComponent implements OnInit {\r\n  basicOptions: any;\r\n  basicData: any;\r\n  accounts: any[] = new Array();\r\n  labels: any[] = new Array();\r\n  allAccountsDataBankBalances: any[] = new Array();\r\n  allAccountsDataCreditLines: any[] = new Array();\r\n  selectedDateData: any[] = new Array();\r\n  selectedDate: string;\r\n  procedureName: string = '';\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n  orgId: number;\r\n  prcId: number;\r\n  cols: TableColumn[] = new Array();\r\n  selectedDateCols: TableColumn[] = new Array();\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  searching: boolean;\r\n  bankBalancesTotal: number = 0;\r\n  creditLinesTotal: number = 0;\r\n  freeLiquidityTotal: number = 0;\r\n  baseFromDate: Date;\r\n  baseToDate: Date;\r\n  maxRange: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  rangeValues: number[];\r\n\r\n  constructor(\r\n    public _translateService: TranslateService,\r\n    private _liquidityService: LiquidityService,\r\n    private _messageService: MessageService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orgId = +localStorage.getItem('organisationId');\r\n    this.prcId = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    let baseFromDateTemp = this._route.snapshot.paramMap.get('baseFromDate');\r\n    if (baseFromDateTemp?.trim()) this.baseFromDate = new Date(baseFromDateTemp);\r\n    let baseToDateTemp = this._route.snapshot.paramMap.get('baseToDate');\r\n    if (baseToDateTemp?.trim()) this.baseToDate = new Date(baseToDateTemp);\r\n    let fromDateTemp = this._route.snapshot.paramMap.get('fromDate');\r\n    if (fromDateTemp?.trim()) this.fromDate = new Date(fromDateTemp);\r\n    let toDateTemp = this._route.snapshot.paramMap.get('toDate');\r\n    if (toDateTemp?.trim()) this.toDate = new Date(toDateTemp);\r\n    if (this.baseFromDate && this.baseToDate && this.fromDate && this.toDate) {\r\n      this.maxRange = this.dayDiff(this.baseFromDate, this.baseToDate);\r\n      this.rangeValues = [\r\n        this.dayDiff(this.baseFromDate, this.fromDate),\r\n        this.dayDiff(this.baseFromDate, this.toDate)\r\n      ];\r\n    }\r\n\r\n    this._translateService.get('Liquidity').subscribe((elem) => {\r\n      this.items = [\r\n        { label: elem.freeLiquidity, routerLink: '/dashboard/liquidity/freeLiquidity' },\r\n      ];\r\n      this.home = {\r\n        icon: 'pi pi-home',\r\n        label: elem.data,\r\n        routerLink: '/dashboard/shared/data',\r\n      };\r\n    })\r\n\r\n\r\n\r\n    this.basicOptions = {\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            let value = tooltipItem.value;\r\n            let currencyPipe = new CurrencyPipe('de');\r\n            value = currencyPipe.transform(value, 'EURO', '');\r\n\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            return label + ': ' + value;\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 40,\r\n              maxRotation: 90,\r\n            },\r\n          },\r\n        ],\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              minRotation: 0,\r\n              maxRotation: 0,\r\n              callback: function (label, index, values) {\r\n                // debugger;\r\n                let currencyPipe = new CurrencyPipe('de');\r\n                label = currencyPipe.transform(label, 'EURO', '');\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n\r\n    ];\r\n\r\n    this.selectedDateCols = [\r\n      {\r\n        header: 'Liquidity.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'Liquidity.bankBalance',\r\n        field: 'bankBalance',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.creditLine',\r\n        field: 'creditLine',\r\n        align: 'right',\r\n      },\r\n      {\r\n        header: 'Liquidity.freeLiquidity',\r\n        field: 'freeLiaquidity',\r\n        align: 'right',\r\n      },\r\n    ];\r\n\r\n    this.getData();\r\n    // this.dateRangeChanges();\r\n  } // end of ng on init\r\n\r\n  handleSliderChange(e) {\r\n    let start = e.values[0];\r\n    let end = e.values[1];\r\n    // calculate fromDate: start + baseFromDate\r\n    let tempStart = new Date(this.baseFromDate);\r\n    tempStart.setDate(tempStart.getDate() + start);\r\n    this.fromDate = new Date(tempStart);\r\n    // calculate toDate: baseToDate - end\r\n    let tempEnd = new Date(this.baseToDate);\r\n    tempEnd.setDate(tempEnd.getDate() - (this.maxRange - +end));\r\n    this.toDate = new Date(tempEnd);\r\n  }\r\n\r\n  dayDiff(d1: Date, d2: Date) {\r\n    var diff = Math.abs(d1.getTime() - d2.getTime());\r\n    var diffDays = Math.ceil(diff / (1000 * 3600 * 24));\r\n    return diffDays;\r\n  }\r\n\r\n  getData() {\r\n    this.searching = true;\r\n    debugger;\r\n    let start = this.fromDate?.toISOString().split('T')[0];\r\n    let end = this.toDate?.toISOString().split('T')[0];\r\n    this._liquidityService.getFreeLiquidity(this.orgId, this.prcId, start, end).subscribe(\r\n      (res) => {\r\n        if (!this.baseFromDate) this.baseFromDate = new Date(res.fromDate);\r\n        if (!this.baseToDate) this.baseToDate = new Date(res.toDate);\r\n        if (!this.fromDate) this.fromDate = new Date(res.fromDate);\r\n        if (!this.toDate) this.toDate = new Date(res.toDate);\r\n        if (!this.rangeValues) this.rangeValues = [0, this.dayDiff(this.fromDate, this.toDate)];\r\n        if (!this.maxRange) this.maxRange = this.dayDiff(this.fromDate, this.toDate);\r\n        this.accounts = res.bankBalances.accounts;\r\n        this.tempData = res.bankBalances.accounts;\r\n        this.labels = res.bankBalances.labels;\r\n        this.basicData = {\r\n          labels: res.bankBalances.labels,\r\n          datasets: [\r\n            {\r\n              type: 'line',\r\n              label: 'Credit Line',\r\n              borderColor: '#42A5F5',\r\n              borderWidth: 2,\r\n              fill: false,\r\n              data: res.creditLines.creditLines,\r\n            },\r\n            {\r\n              type: 'line',\r\n              label: 'Free Liquidity',\r\n              fill: false,\r\n              data: res.freeLiquidity,\r\n              borderColor: '#E5A58B',\r\n              borderWidth: 2,\r\n            },\r\n            {\r\n              type: 'bar',\r\n              label: 'Bank Balance',\r\n              backgroundColor: '#88FF88',\r\n              borderColor: '#58dF58',\r\n              data: res.bankBalances.bankBalances,\r\n            },\r\n          ],\r\n        };\r\n        this.searching = false;\r\n        this.allAccountsDataBankBalances = res.bankBalances.data;\r\n        this.allAccountsDataCreditLines = res.creditLines.accounts;\r\n      },\r\n      (er) => {\r\n        this.searching = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  // on clock on a bar in the chart\r\n  selectBarData(e) {\r\n    this.searching = true;\r\n    this.selectedDateData = new Array();\r\n    // console.log(e.element._index);\r\n    // console.log(e.element._model.label);\r\n    // this.selectedDate = e?.element?._model?.label;\r\n    let index = e?.element?._index;\r\n    this.selectedDate = this.labels[index];\r\n    // debugger;\r\n    for (const key in this.allAccountsDataBankBalances) {\r\n      if (\r\n        Object.prototype.hasOwnProperty.call(\r\n          this.allAccountsDataBankBalances,\r\n          key\r\n        )\r\n      ) {\r\n        const element = this.allAccountsDataBankBalances[key];\r\n        const creditLine =\r\n          this.allAccountsDataCreditLines[key] &&\r\n            this.allAccountsDataCreditLines[key][index]\r\n            ? this.allAccountsDataCreditLines[key][index]\r\n            : 0;\r\n        let accountNumber = parseInt(key);\r\n        this.selectedDateData.push({\r\n          accountNumber: isNaN(accountNumber) ? key : accountNumber,\r\n          bankBalance: element[index] ? element[index] : 0,\r\n          creditLine: creditLine,\r\n          accountName: this.accounts.filter(\r\n            (account) => account.accountNumber == key\r\n          )[0]?.accountName,\r\n        });\r\n      }\r\n    }\r\n    // this.selectedDateData = [...this.selectedDateData];\r\n    this.calculateTotals();\r\n    this.searching = false;\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.accounts = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.accounts = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.accounts = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.accounts = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.accounts = this.accounts.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.accounts = this.accounts.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  goToDetails(row: any) {\r\n    this._router.navigate([\r\n      '/dashboard/liquidity/freeLiquidity/details/' + row.accountNumber + '/' +\r\n      this.baseFromDate.toISOString().split('T')[0] + '/' +\r\n      this.baseToDate.toISOString().split('T')[0] + '/' +\r\n      this.fromDate.toISOString().split('T')[0] + '/' +\r\n      this.toDate.toISOString().split('T')[0],\r\n    ]);\r\n  }\r\n\r\n  calculateTotals() {\r\n    this.creditLinesTotal = 0;\r\n    this.bankBalancesTotal = 0;\r\n    this.freeLiquidityTotal = 0;\r\n    for (let data of this.selectedDateData) {\r\n      this.bankBalancesTotal += data.bankBalance;\r\n      this.creditLinesTotal += data.creditLine;\r\n      this.freeLiquidityTotal += data.bankBalance + data.creditLine;\r\n    }\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n  </div>\r\n  <!-- <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{baseFromDate | date}}     -     {{baseToDate | date}}</p>\r\n  </div> -->\r\n  <div class=\"p-col-12\">\r\n    <p class=\"p-text-center\" style=\"margin-left: -25px;\">{{fromDate | date}} - {{toDate | date}}</p>\r\n  </div>\r\n  <div class=\"p-col-3\"></div>\r\n  <div class=\"p-col-1 p-text-right\">{{baseFromDate | date}}</div>\r\n  <div class=\"p-col-4\">\r\n    <p-slider [(ngModel)]=\"rangeValues\" [range]=\"true\" (onChange)=\"handleSliderChange($event)\"\r\n    [min]=\"0\" [max]=\"maxRange\"></p-slider>\r\n  </div>\r\n  <div class=\"p-col-1\">{{baseToDate | date}}</div>\r\n  <div class=\"p-col-1\">\r\n    <button pButton pRipple type=\"button\" icon=\"pi pi-search\" (click)=\"getData()\"\r\n      class=\"p-button-rounded p-button-primary\" style=\"margin-top: -18px;\"></button>\r\n  </div>\r\n</div>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <div class=\"card\">\r\n      <p-chart type=\"bar\" [data]=\"basicData\" [options]=\"basicOptions\" height=\"400px\"\r\n        (onDataSelect)=\"selectBarData($event)\"></p-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-grid\" *ngIf=\"selectedDate\">\r\n  <div class=\"p-col-7\">\r\n    <h2 class=\"p-text-right\">{{ selectedDate }}</h2>\r\n  </div>\r\n  <div class=\"p-col-5 p-text-right\">\r\n    <button type=\"button\" pButton pRipple label=\"All Accounts\" icon=\"pi pi-times\"\r\n      class=\"p-button-rounded p-button-warning\" (click)=\"selectedDate = null\" pTooltip=\"All\" tooltipPosition=\"bottom\"\r\n      style=\"margin-top: 20px;\"></button>\r\n  </div>\r\n  <div class=\"p-col-12\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"selectedDateData\" styleClass=\"p-datatable-gridlines\"\r\n      [columns]=\"selectedDateCols\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n      [reorderableColumns]=\"true\" [resizableColumns]=\"true\" [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{ col.align }}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th class=\"p-text-center\">Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"\r\n                col.field != 'accountNumber' &&\r\n                col.field != 'accountName' &&\r\n                col.field != 'freeLiaquidity'\r\n              \">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span *ngIf=\"col.field == 'freeLiaquidity'\">\r\n              {{\r\n              +row[\"bankBalance\"] + +row[\"creditLine\"] | currency: \"EUR\":\"\"\r\n              }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\" *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"p-text-right\">Totals</td>\r\n          <td class=\"p-text-right\">\r\n            {{ bankBalancesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ creditLinesTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td class=\"p-text-right\">\r\n            {{ freeLiquidityTotal | currency: \"EUR\":\"\" }}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<br /><br />\r\n\r\n<div class=\"p-grid\" *ngIf=\"!selectedDate\">\r\n  <div class=\"p-col-12\" [hidden]=\"!prcId\">\r\n    <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"searching\"></p-progressBar>\r\n    <p-table #dt dataKey=\"accountNumber\" [value]=\"accounts\" styleClass=\"p-datatable-gridlines\" [columns]=\"cols\"\r\n      responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\" [reorderableColumns]=\"true\" [resizableColumns]=\"true\"\r\n      [loading]=\"searching\">\r\n      <ng-template pTemplate=\"colgroup\" let-columns>\r\n        <colgroup>\r\n          <col *ngFor=\"let col of columns\" />\r\n          <col />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th pSortableColumn=\"{{ col.field }}\" pReorderableColumn pResizableColumn class=\"p-text-{{col.align}}\"\r\n            *ngFor=\"let col of columns\">\r\n            <span pTooltip=\"{{ col.header | translate }} \" class=\"p-text-{{ col.align }}\">\r\n              {{ col.header | translate }}\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </span>\r\n          </th>\r\n          <th class=\"p-text-center\">Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th pResizableColumn *ngFor=\"let col of columns\" class=\"autocomplete\">\r\n            <input pInputText type=\"text\" [(ngModel)]=\"criteria[col.field]\" [style]=\"{ width: '90%' }\"\r\n              (input)=\"filterChange($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n              *ngIf=\"col.field == 'accountNumber' || col.field == 'accountName'\" />\r\n          </th>\r\n          <th></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-row let-columns=\"columns\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\" class=\"p-text-{{ col.align }}\">\r\n            <span *ngIf=\"col.field != 'accountNumber' && col.field != 'accountName'\">\r\n              {{ row[col.field] | currency: \"EUR\":\"\" }}\r\n            </span>\r\n            <span pTooltip=\"{{ row[col.field] }}\">\r\n              {{ row[col.field] }}\r\n            </span>\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <button type=\"button\" pButton pRipple icon=\"pi pi-list\" class=\"p-button-rounded p-button-warning\"\r\n              (click)=\"goToDetails(row)\" pTooltip=\"Details\" tooltipPosition=\"bottom\"></button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataFilterService {\r\n\r\n  _thisURL = environment.baseUrl + 'shared';\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  get(params: any) {\r\n    return this._http.get<any>(this._thisURL + '/posting', { params: params });\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  _thisURL = environment.baseUrl + 'admin';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getManagers() {\r\n    return this._http.get<any>(this._thisURL + '/getManagers');\r\n }\r\n\r\n getProcedures(userId) {\r\n   return this._http.get<any>(this._thisURL + '/users/' + userId + '/procedures');\r\n }\r\n\r\n getUsers(userId) {\r\n  return this._http.get<any>(this._thisURL + '/users/' + userId + '/users');\r\n}\r\n\r\n}\r\n","\r\n\r\nexport class Procedures {\r\n    id: number;\r\n    OrganisationId: number;\r\n    name: string ='';\r\n    data:  boolean = false;\r\n    analysis: boolean = false;\r\n    dataSource: string ='';\r\n    amount: boolean = false;\r\n    credit: boolean = false;\r\n    text_word: boolean = false;\r\n    text_account: boolean = false;\r\n    payment: boolean = false;\r\n    due_date: boolean = false;\r\n    liquidity: boolean = false;\r\n    status: string;\r\n    docType: boolean = false;\r\n\r\n\r\n    // constructor(organisationId: number, name: string, data: boolean,analysis: boolean,dataSource: string) {\r\n    //     this.organisationId = organisationId;\r\n    //     this.name = name;\r\n    //     this.data = data;\r\n    //     this.analysis = analysis;\r\n    //     this.dataSource = dataSource;\r\n\r\n    // }\r\n\r\n    static setProcedure(procedureModel) {\r\n\r\n        let result: Procedures = procedureModel\r\n        return result\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './shared/service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  authorized = false;\r\n  roles: any;\r\n\r\n  constructor(private _authSrvc: AuthService, private _router: Router) { }\r\n\r\n  // canActivate(\r\n  //   route: ActivatedRouteSnapshot,\r\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n  //   return true;\r\n  // }\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    this.authorized = false;\r\n    if (this._authSrvc.isLoggedIn()) {\r\n      const currentUserRole = this._authSrvc.getRole();\r\n      \r\n      if (route.data.roles) {\r\n        for (let i = 0; i < route.data.roles.length; i++) {\r\n          if (route.data.roles[i] === currentUserRole) {\r\n            this.authorized = true;\r\n            break;\r\n          }\r\n        }\r\n        // console.log(this.authorized);\r\n        if (this.authorized === false) {\r\n          // console.log('unauthorized from authGuard!');\r\n          this._router.navigate(['/unauthorized']);\r\n        }\r\n        return this.authorized;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      this._router.navigate(['/unauthorized']);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AmountAnalysis, AmountAnalysisDetails } from '../model/amountAnalysis';\r\nimport { TextAnalysis, TextAnalysisDetails } from '../model/textAnalysis';\r\nimport { PaymentAnalysis, PaymentAnalysisDetails, PaymentAnalysisDetailsData } from '../model/paymentAnalysis';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalysisService {\r\n\r\n  _thisURL = environment.baseUrl + 'analysis/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAmountAnalysis(orgId: number, prcId: number, baseBalance: number): Observable<AmountAnalysis[]> {\r\n    return this._http.get<AmountAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/amount-calc/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetails(orgId: number, prcId: number, accountNumber: string, baseBalance: number): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance);\r\n  }\r\n\r\n  getAmountAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.get<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysis(orgId: number, prcId: number): Observable<TextAnalysis[]> {\r\n    return this._http.get<TextAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/text');\r\n  }\r\n\r\n  getTextAnalysisIndex(orgId: number, prcId: number): Observable<TextAnalysis[]> {\r\n    return this._http.get<TextAnalysis[]>(this._thisURL + orgId + '/' + prcId + '/text-index');\r\n  }\r\n\r\n  getTextAnalysisWord(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word');\r\n  }\r\n\r\n  getTextAnalysisWordIndex(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-indexed');\r\n  }\r\n\r\n  getTextAnalysisWordCalcDateRange(orgId: number, prcId: number, step: string = 'MONTHLY'): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc/date-range/' + step);\r\n  }\r\n\r\n  getTextAnalysisWordCalcData(orgId: number, prcId: number, fromDate: string, toDate: string): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc/' + fromDate + '/' + toDate);\r\n  }\r\n\r\n  getTextAnalysisAccountCalcAll(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-account-calc');\r\n  }\r\n\r\n  getTextAnalysisWordCalcAll(orgId: number, prcId: number): Observable<any[]> {\r\n    return this._http.get<any[]>(this._thisURL + orgId + '/' + prcId + '/text-word-calc');\r\n  }\r\n\r\n  getTextAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber);\r\n  }\r\n\r\n  getTextAnalysisWordDetails(orgId: number, prcId: number, keyword: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text-word/details/' + keyword);\r\n  }\r\n\r\n  getTextAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<TextAnalysisDetails[]> {\r\n    return this._http.get<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber + '/relevant');\r\n  }\r\n\r\n  getTextAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: TextAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: TextAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getAmountAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: AmountAnalysisDetails[] }> {\r\n    return this._http.get<{ count: number, rows: AmountAnalysisDetails[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  setRelevantTextAnalysis(orgId: number, prcId: number, accountNumber: string, records: TextAnalysisDetails[]): Observable<TextAnalysisDetails[]> {\r\n    return this._http.put<TextAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/text/details/' + accountNumber, records);\r\n  }\r\n\r\n  setRelevantAmountAnalysis(orgId: number, prcId: number, accountNumber: string, baseBalance: number, records: AmountAnalysisDetails[]): Observable<AmountAnalysisDetails[]> {\r\n    return this._http.put<AmountAnalysisDetails[]>(this._thisURL + orgId + '/' + prcId + '/amount/details/' + accountNumber + '/' + baseBalance, records);\r\n  }\r\n\r\n  setRelevantPaymentAnalysis(orgId: number, prcId: number, accountNumber: string, records: PaymentAnalysisDetailsData[]): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.put<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber, records);\r\n  }\r\n\r\n  getPaymentAnalysis(orgId: number, prcId: number): Observable<PaymentAnalysis> {\r\n    return this._http.get<PaymentAnalysis>(this._thisURL + orgId + '/' + prcId + '/payment');\r\n  }\r\n\r\n  getPaymentAnalysisDetails(orgId: number, prcId: number, accountNumber: String): Observable<PaymentAnalysisDetails> {\r\n    return this._http.get<PaymentAnalysisDetails>(this._thisURL + orgId + '/' + prcId + '/payment/details/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * get the relevant user for this account based on paymentRelevant field ignore other conditions\r\n   * because the user can set any record as relevant even if the record is not blue neither red...\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsRelevant(orgId: number, prcId: number, accountNumber: string): Observable<PaymentAnalysisDetailsData[]> {\r\n    return this._http.get<PaymentAnalysisDetailsData[]>(this._thisURL + orgId + '/' + prcId + '/payment/details-relevant/' + accountNumber);\r\n  }\r\n\r\n  /**\r\n   * Get All records for this account; you can use getAmountAnalysisDetailsByAccount\r\n   * return the same data but the difference in the comment and relative field\r\n   * @param orgId \r\n   * @param prcId \r\n   * @param accountNumber \r\n   * @returns \r\n   */\r\n  getPaymentAnalysisDetailsByAccount(orgId: number, prcId: number, accountNumber: string, criteria: any): Observable<{ count: number, rows: PaymentAnalysisDetailsData[] }> {\r\n    return this._http.get<{ count: number, rows: PaymentAnalysisDetailsData[] }>(this._thisURL + orgId + '/' + prcId + '/details/' + accountNumber, { params: criteria });\r\n  }\r\n\r\n  getDueDateAnalysis(orgId: number, prcId: number, start: string, end: string, params: any): Observable<any> {\r\n    return start?.trim() && end.trim() ? this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate/' + start + '/' + end, { params }) :\r\n      this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate', { params });\r\n  }\r\n\r\n  getDueDateAnalysisDetails(orgId: number, prcId: number, accountNumber: string, start: string, end: string, maxDelay): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/duedate/details/' + accountNumber + '/' + start + '/' + end + '/' + maxDelay);\r\n  }\r\n\r\n\r\n  getCreditorAnalysis(orgId: number, prcId: number, criteria: any): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor', { params: criteria });\r\n  }\r\n\r\n  getCreditorAnalysisCalc(orgId: number, prcId: number, criteria: any): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor-calc', { params: criteria });\r\n  }\r\n\r\n  getCreditorAnalysisDetails(orgId: number, prcId: number, accountNumber: string): Observable<any> {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/credtor/details/' + accountNumber);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ImportComponent } from './admin/import/import.component';\r\nimport { UnauthComponent } from './shared/unauth/unauth.component';\r\nimport { NotfoundComponent } from './shared/notfound/notfound.component';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { LayoutComponent } from './shared/layout/layout.component';\r\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\r\nimport { AdminRegistrationComponent } from './admin/admin-registration/admin-registration.component';\r\nimport { OrganisationRegistrationComponent } from './admin/organisation-registration/organisation-registration.component';\r\nimport { SAPDataTableComponent } from './shared/sap-data-table/sap-data-table.component';\r\nimport { SusaComponent } from './shared/sap-data-table/susa/susa.component';\r\nimport { ResetPasswordNewUserComponent } from './shared/reset-password-new-user/reset-password-new-user.component';\r\nimport { ProcedureRegistrationComponent } from './admin/procedure-registration/procedure-registration.component';\r\nimport { AmountAnalysisComponent } from './shared/analysis/amount-analysis/amount-analysis.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { UserRegistrationComponent } from './shared/user-registration/user-registration.component';\r\nimport { UserEditComponent } from './shared/user-edit/user-edit.component';\r\nimport { ProcedureEditComponent } from './admin/procedure-edit/procedure-edit.component';\r\nimport { UserDashboardComponent } from './shared/user-dashboard/user-dashboard.component';\r\nimport { OrganisationUsersComponent } from './shared/organisation-users/organisation-users.component';\r\nimport { DocumentTypeComponent } from './admin/document-type/document-type.component';\r\nimport { AmountAnalysisDetailsComponent } from './shared/analysis/amount-analysis/details/amount-analysis-details.component';\r\nimport { TextAnalysisComponent } from './shared/analysis/text-analysis/text-analysis.component';\r\nimport { TextAnalysisDetailsComponent } from './shared/analysis/text-analysis/text-analysis-details/text-analysis-details.component';\r\nimport { TextAnalysisWordDetailsComponent } from './shared/analysis/text-analysis/text-analysis-word-details/text-analysis-word-details.component';\r\nimport { TextAnalysisIndexedComponent } from \"./shared/analysis/text-analysis/text-analysis-indexed/text-analysis-indexed.component\";\r\nimport { PaymentAnalysisComponent } from './shared/analysis/payment-analysis/payment-analysis.component';\r\nimport { PaymentAnalysisDetailsComponent } from './shared/analysis/payment-analysis/payment-analysis-details/payment-analysis-details.component';\r\nimport { DueDateComponent } from './shared/analysis/payment-analysis/due-date/due-date.component';\r\nimport { DueDateDetailsComponent } from './shared/analysis/payment-analysis/due-date-details/due-date-details.component';\r\nimport { CreditorAnalysisComponent } from './shared/analysis/creditor-analysis/creditor-analysis.component';\r\nimport { CreditorAnalysisDetailsComponent } from './shared/analysis/creditor-analysis/creditor-analysis-details/creditor-analysis-details.component';\r\nimport { AccountTypeComponent } from './admin/account-type/account-type.component';\r\nimport { OpeningBalanceComponent } from './shared/liquidity/opening-balance/opening-balance.component';\r\nimport { CreditLineComponent } from './shared/liquidity/credit-line/credit-line.component';\r\nimport { FreeLiquidityComponent } from './shared/liquidity/free-liquidity/free-liquidity.component';\r\nimport { FreeLiquidityDetailsComponent } from './shared/liquidity/free-liquidity/free-liquidity-details/free-liquidity-details.component';\r\nimport { TextAnalysisPreComponent } from './shared/analysis/text-analysis/text-analysis-pre/text-analysis-pre.component';\r\nimport { PreCalculateComponent } from './admin/pre-calculate/pre-calculate.component';\r\nimport { AmountAnalysisPreComponent } from './shared/analysis/amount-analysis/amount-analysis-pre/amount-analysis-pre.component';\r\nimport { CreditorAnalysisCalcComponent } from './shared/analysis/creditor-analysis/creditor-analysis-calc/creditor-analysis-calc.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'dashboard',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      // { path: 'import', component: ImportComponent, canActivate: [AuthGuard], data: { roles: ['ADMIN'] } },\r\n\r\n      {\r\n        path: 'admin/admin/add',\r\n        component: AdminRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/organisation/add',\r\n        component: OrganisationRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/organisation/edit/:id',\r\n        component: OrganisationRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/procedure/add',\r\n        component: ProcedureRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/procedure/edit',\r\n        component: ProcedureEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/dashboard',\r\n        component: AdminDashboardComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/import',\r\n        component: ImportComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/document-type',\r\n        component: DocumentTypeComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'admin/pre-calc',\r\n        component: PreCalculateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n\r\n      {\r\n        path: 'shared/user/add',\r\n        component: UserRegistrationComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/user/edit',\r\n        component: UserEditComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/user/procedures',\r\n        component: UserDashboardComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'shared/user/users',\r\n        component: OrganisationUsersComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager'] },\r\n      },\r\n      {\r\n        path: 'shared/data',\r\n        component: SAPDataTableComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'shared/data/susa',\r\n        component: SusaComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      {\r\n        path: 'analysis/amount',\r\n        component: AmountAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/amount/:baseBalance',\r\n        component: AmountAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/amount/:orgId/:prcId/:accountNumber/:baseBalance',\r\n        component: AmountAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text',\r\n        component: TextAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      // {\r\n      //   path: 'analysis/text/:by-word',\r\n      //   component: TextAnalysisComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      // {\r\n      //   path: 'analysis/text-indexed',\r\n      //   component: TextAnalysisIndexedComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      {\r\n        path: 'analysis/text/:by-word',\r\n        component: TextAnalysisPreComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text/:orgId/:prcId/:accountNumber',\r\n        component: TextAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/text/word/:key',\r\n        component: TextAnalysisWordDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/payment',\r\n        component: PaymentAnalysisComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/payment/:orgId/:prcId/:accountNumber',\r\n        component: PaymentAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/due-date',\r\n        component: DueDateComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/due-date/deails/:accountNumber',\r\n        component: DueDateDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      // {\r\n      //   path: 'analysis/creditor',\r\n      //   component: CreditorAnalysisComponent,\r\n      //   canActivate: [AuthGuard],\r\n      //   data: { roles: ['Admin', 'Manager', 'User'] },\r\n      // },\r\n      {\r\n        path: 'analysis/creditor',\r\n        component: CreditorAnalysisCalcComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'analysis/creditor/deails/:accountNumber',\r\n        component: CreditorAnalysisDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      {\r\n        path: 'admin/accountType',\r\n        component: AccountTypeComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin'] },\r\n      },\r\n      {\r\n        path: 'liquidity/openingBalance',\r\n        component: OpeningBalanceComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/creditLine',\r\n        component: CreditLineComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity',\r\n        component: FreeLiquidityComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity/:baseFromDate/:baseToDate/:fromDate/:toDate',\r\n        component: FreeLiquidityComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n      {\r\n        path: 'liquidity/freeLiquidity/details/:accountNumber/:baseFromDate/:baseToDate/:fromDate/:toDate',\r\n        component: FreeLiquidityDetailsComponent,\r\n        canActivate: [AuthGuard],\r\n        data: { roles: ['Admin', 'Manager', 'User'] },\r\n      },\r\n\r\n      { path: 'resetPassword', component: ResetPasswordComponent },\r\n    ], // end of dashboard childs\r\n  },\r\n\r\n  { path: 'unauthorized', component: UnauthComponent },\r\n  { path: 'reset/:token', component: ResetPasswordNewUserComponent },\r\n  { path: '**', component: NotfoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OpeningBalance } from '../model/openingBalance';\r\nimport { CreditLine } from '../model/creditLine';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LiquidityService {\r\n\r\n  _thisURL = environment.baseUrl + 'liquidity/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getOpeningBalance(orgId: number, prcId: number): Observable<OpeningBalance[]> {\r\n    return this._http.get<OpeningBalance[]>(this._thisURL + orgId + '/' + prcId + '/openingBalance');\r\n  }\r\n\r\n  updateOpeningBalance(orgId: number, prcId: number, row: OpeningBalance): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/openingBalance', row);\r\n  }\r\n\r\n\r\n  getCreditLine(orgId: number, prcId: number): Observable<CreditLine[]> {\r\n    return this._http.get<CreditLine[]>(this._thisURL + orgId + '/' + prcId + '/creditLine');\r\n  }\r\n\r\n  updateCreditLine(orgId: number, prcId: number, row: CreditLine): Observable<any> {\r\n    return this._http.put<any>(this._thisURL + orgId + '/' + prcId + '/creditLine', row);\r\n  }\r\n\r\n  deleteCreditLine(orgId: number, prcId: number, row: CreditLine): Observable<any> {\r\n    return this._http.delete<any>(this._thisURL + orgId + '/' + prcId + '/creditLine/' + row.id);\r\n  }\r\n\r\n  getFreeLiquidity(orgId: number, prcId: number, fromDate, toDate) {\r\n    if (!fromDate || !toDate)\r\n      return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity');\r\n    else\r\n      return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/' + fromDate + '/' + toDate);\r\n  }\r\n\r\n  getFreeLiquidityDetails(orgId: number, prcId: number, accountNumber: string, from: string, to: string) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/details/' + accountNumber + '/' + from + '/' + to);\r\n  }\r\n\r\n  getFreeLiquidityDetailsRecords(orgId: number, prcId: number, accountNumber: string, selectedDate: string) {\r\n    return this._http.get<any>(this._thisURL + orgId + '/' + prcId + '/liquidity/details/' + accountNumber + '/specific/' + selectedDate);\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"cardBody\">\r\n    <p-toast></p-toast>\r\n    \r\n    <div class=\"p-grid p-mt-6 \">\r\n\r\n        <div class=\"p-xs-10 p-xs-offset-1 p-md-4 p-md-offset-4   content\" >\r\n            <div class=\"pages-body login-page p-d-flex p-flex-column\">\r\n                <div class=\"p-as-center p-mt-auto p-mb-auto\">\r\n                    <div class=\"pages-panel card p-d-flex p-flex-column\">\r\n                        <div class=\"p-field p-grid\">\r\n                            <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password</label>\r\n                            <div class=\"p-col-12 p-md-10\">\r\n                                <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                                <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">password is required</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-field p-grid\">\r\n                            <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">new password confirmation</label>\r\n                            <div class=\"p-col-12 p-md-10\">\r\n                                <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                                <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">password is required</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-field p-grid\">\r\n                            <div class=\"p-xs-8 p-xs-offset-2 p-md-6 p-md-offset-3 \">\r\n                                <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component submitButtonCss p-filled\"   >\r\n                                    <span class=\"p-button-label\"> Submit </span>\r\n                                </button>\r\n                            </div>\r\n            \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n -->\r\n \r\n <div class=\"p-xs-10 p-xs-offset-1 p-md-8 p-md-offset-2 \">\r\n    <div class=\"card cardBody\">\r\n        <p-toast></p-toast>\r\n        <div class=\"content \">\r\n            <div class=\"p-text-center p-mt-6 p-mb-4 titleFontStyle \">  {{'Password_Reset.header' | translate}} </div>\r\n            <form class=\"p-fluid \"  (ngSubmit)=\"submitHandle()\">\r\n    \r\n    \r\n                <div class=\"p-fluid\">\r\n    \r\n      \r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"selectedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.password' | translate}}</label>\r\n                    <div class=\"p-col-12 p-md-8\">\r\n                        <input required #selectedPassword=\"ngModel\"  name=\"selectedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.selectedPassword\" > \r\n                        <small *ngIf=\"selectedPassword.invalid && selectedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordErrorMsg' | translate}}</small>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-field p-grid\">\r\n                    <label for=\"confirmedPassword\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0 p-ml-2 fontStyle\">{{'Password_Reset.passwordConfirm' | translate}}</label>\r\n                    <div class=\"p-col-12 p-md-8\">\r\n                        <input required #confirmedPassword=\"ngModel\"  name=\"confirmedPassword\" type=\"password\" pinputtext class=\"p-inputtext p-component ng-untouched ng-pristine ng-valid\"  [(ngModel)]=\"passwordObj.confirmedPassword\" > \r\n                        <small *ngIf=\"confirmedPassword.invalid && confirmedPassword.touched \" class=\"spanCss \">{{'Password_Reset.passwordConfirmErrorMsg' | translate}}</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-field p-grid\">\r\n                    <!-- <div class=\"p-xs-col-5  p-mr-4\">\r\n          \r\n                      <button pbutton pripple type=\"button\" label=\"cancel\"\r\n                        class=\"p-mt-4  p-ripple p-button p-component p-cancelButton \" (click)=\"cancelHandle()\">\r\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.cancelButton' | translate}} </span>\r\n                      </button>\r\n                    </div> -->\r\n                    <div class=\"p-xs-col-5 \">\r\n                      <button pbutton pripple type=\"submit\" label=\"Submit\" class=\"p-mt-4  p-ripple p-button p-component \">\r\n                        <span class=\"p-button-label\"> {{'Organisation_Registration.confirmButton' | translate}} </span>\r\n                      </button>\r\n                    </div>\r\n          \r\n                  </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-new-user',\r\n  templateUrl: './reset-password-new-user.component.html',\r\n  styleUrls: ['./reset-password-new-user.component.sass'],\r\n})\r\nexport class ResetPasswordNewUserComponent implements OnInit {\r\n  passwordObj = {\r\n    selectedPassword: '',\r\n    confirmedPassword: '',\r\n  };\r\n  pass: string;\r\n  token: any;\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _authService: AuthService,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    public _translateService: TranslateService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this._translateService.setDefaultLang('de');\r\n    this.token = this._route.snapshot.paramMap.get('token');\r\n    // console.log(this.token)\r\n  }\r\n\r\n  submitHandle() {\r\n    console.log(this.passwordObj);\r\n    if (\r\n      this.passwordObj.selectedPassword === this.passwordObj.confirmedPassword\r\n    ) {\r\n      let password = this.passwordObj.selectedPassword;\r\n      this._authService\r\n        .resetPassword({ password: password, token: this.token })\r\n        .subscribe(\r\n          (res) => {\r\n            this._router.navigate(['/']);\r\n          },\r\n          (err) => {}\r\n        );\r\n    } else {\r\n      this._translateService.get('ErrorHandler').subscribe((elem) => {\r\n        this._messageService.add({\r\n          severity: 'error',\r\n          summary: 'ERROR!',\r\n          detail: elem.passwordsMatch,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  // cancelHandle() {\r\n  //   this._router.navigate(['/dashboard/shared/user/procedures']);\r\n  // }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Bar } from 'src/app/shared/model/bar';\r\nimport { TableColumn } from 'src/app/shared/model/tableColumn';\r\nimport { TextAnalysis } from 'src/app/shared/model/textAnalysis';\r\nimport { AnalysisService } from 'src/app/shared/service/analysis.service';\r\nimport { ProcedureService } from 'src/app/shared/service/procedure.service';\r\n\r\n@Component({\r\n  selector: 'app-text-analysis-pre',\r\n  templateUrl: './text-analysis-pre.component.html',\r\n  styleUrls: ['./text-analysis-pre.component.sass'],\r\n  providers: [DatePipe],\r\n})\r\nexport class TextAnalysisPreComponent implements OnInit {\r\n\r\n  byAccount: boolean = true;\r\n  selectedOrganisation: number = 0;\r\n  selectedProcedure: number = 0;\r\n  basicOptions: any;\r\n  basicOptionsWords: any;\r\n  basicData: any;\r\n  basicDataWord: any;\r\n  data: TextAnalysis[] = new Array();\r\n  dataWord: { recordsCount: number; accountsCount: number; word: string }[] =\r\n    new Array();\r\n  colsWord: TableColumn[];\r\n  cols: TableColumn[];\r\n  waiting: boolean = false;\r\n  procedureName: any;\r\n  items: MenuItem[];\r\n  home: MenuItem;\r\n\r\n  // for filter\r\n  searching: boolean;\r\n  criteria: any = {};\r\n  tempData: any[];\r\n  tempDataWord: { recordsCount: number; accountsCount: number; word: string }[];\r\n  labelsWord: any[];\r\n  wordAccountsData: any[];\r\n  wordRecordsData: any[];\r\n  criteriaWord: any = {};\r\n  // dateRanges: { label, value }[] = new Array();\r\n  // steps: { label, value }[] = new Array();\r\n  // selectedStep: string = 'MONTHLY';\r\n\r\n  constructor(private _analysisService: AnalysisService,\r\n    private _router: Router,\r\n    private prcService: ProcedureService,\r\n    private _route: ActivatedRoute,\r\n    private datepipe: DatePipe,) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.items = [\r\n      // { label: 'Analysis' },\r\n      { label: 'Text Analysis', routerLink: '/dashboard/analysis/text' },\r\n    ];\r\n\r\n    this.home = {\r\n      icon: 'pi pi-home',\r\n      label: ' Data',\r\n      routerLink: '/dashboard/shared/data',\r\n    };\r\n\r\n    // this.steps = [\r\n    //   {\r\n    //     label: 'MONTHLY',\r\n    //     value: 'MONTHLY'\r\n    //   },\r\n    //   {\r\n    //     label: 'TOW_MONTHS',\r\n    //     value: 'TOW_MONTHS'\r\n    //   },\r\n    //   {\r\n    //     label: 'QUARTER',\r\n    //     value: 'QUARTER'\r\n    //   },\r\n    //   {\r\n    //     label: 'HALF_ANNUAL',\r\n    //     value: 'HALF_ANNUAL'\r\n    //   },\r\n    //   {\r\n    //     label: 'ANNUAL',\r\n    //     value: 'ANNUAL'\r\n    //   }\r\n    // ];\r\n\r\n    this.basicOptions = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    this.basicOptionsWords = {\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n            id: 'Count',\r\n            ticks: {\r\n              min: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n    this.selectedOrganisation = +localStorage.getItem('organisationId');\r\n    this.selectedProcedure = +localStorage.getItem('currentProcedureId');\r\n    this.procedureName = localStorage.getItem('currentProcedureName');\r\n    this.byAccount = this._route.snapshot.paramMap.get('by-word') ? false : true;\r\n\r\n    this.cols = [\r\n      {\r\n        header: 'AmountAnalysis.accountNumber',\r\n        field: 'accountNumber',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.accountName',\r\n        field: 'accountName',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: 'AmountAnalysis.NumberOfPostings',\r\n        field: 'totlaCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    this.colsWord = [\r\n      {\r\n        header: 'Key Word',\r\n        field: 'word',\r\n        align: 'left',\r\n      },\r\n      {\r\n        header: \"Accounts' Count\",\r\n        field: 'accountsCount',\r\n        align: 'center',\r\n      },\r\n      {\r\n        header: \"Records' Count\",\r\n        field: 'recordsCount',\r\n        align: 'center',\r\n      },\r\n    ];\r\n\r\n    // this.getDateRanges(this.selectedStep);\r\n    this.getData();\r\n  } // end of ng on init\r\n\r\n  // stepChangedHandler(e) {\r\n  //   this.getDateRanges(e.value);\r\n  // }\r\n\r\n  // getDateRanges(step) {\r\n  //   this._analysisService\r\n  //   .getTextAnalysisWordCalcDateRange(this.selectedOrganisation, this.selectedProcedure, step)\r\n  //   .subscribe(res => {\r\n  //     this.dateRanges = [];\r\n  //     res.forEach(range => {\r\n  //       this.dateRanges.push({\r\n  //         label: this.datepipe.transform(range.fromDate, 'yyyy.MM.dd') + ' - ' + this.datepipe.transform(range.toDate, 'yyyy.MM.dd'),\r\n  //         value: {\r\n  //           fromDate: this.datepipe.transform(range.fromDate, 'yyyy.MM.dd'),\r\n  //           toDate: this.datepipe.transform(range.toDate, 'yyyy.MM.dd')\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   }, er => this.waiting = false\r\n  //   );\r\n  // }\r\n\r\n  // dateChangedHandler(e) {\r\n  //   this.getData(e.value.fromDate, e.value.toDate);\r\n  // }\r\n\r\n  getData() {\r\n    this._analysisService\r\n      .getTextAnalysisAccountCalcAll(this.selectedOrganisation, this.selectedProcedure)\r\n      .subscribe(\r\n        (res) => {\r\n          this.data = res;\r\n          this.tempData = res;\r\n          this.data.forEach((account) => {\r\n            let accountNumber = parseInt(account.accountNumber.toString(), 10);\r\n            account.accountNumber = isNaN(accountNumber)\r\n              ? account.accountNumber\r\n              : accountNumber;\r\n          });\r\n\r\n          this.basicData = {\r\n            labels: ['Total Count'],\r\n            datasets: new Array(),\r\n          };\r\n          for (let i = 0; i < this.data.length; i++) {\r\n            const element = this.data[i];\r\n            this.basicData.datasets.push(\r\n              new Bar(\r\n                element.accountName,\r\n                `rgb(${(Math.random() * 25500) % 255}, ${\r\n                  (Math.random() * 25500) % 255\r\n                },${(Math.random() * 25500) % 255})`,\r\n                element.totlaCount\r\n              )\r\n            );\r\n          }\r\n          this.waiting = false;\r\n\r\n          // get by words in background and after getting by accounts\r\n\r\n          this._analysisService\r\n            .getTextAnalysisWordCalcAll(\r\n              this.selectedOrganisation,\r\n              this.selectedProcedure\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                this.dataWord = res;\r\n                this.tempDataWord = res;\r\n                this.labelsWord = new Array();\r\n                this.wordAccountsData = new Array();\r\n                this.wordRecordsData = new Array();\r\n                this.dataWord.forEach((word) => {\r\n                  let accountsCount = parseInt(\r\n                    word.accountsCount.toString(),\r\n                    10\r\n                  );\r\n                  word.accountsCount = isNaN(accountsCount)\r\n                    ? word.accountsCount\r\n                    : accountsCount;\r\n                  this.labelsWord.push(word.word);\r\n                  this.wordAccountsData.push(word.accountsCount);\r\n                  this.wordRecordsData.push(word.recordsCount);\r\n                });\r\n\r\n                this.basicDataWord = {\r\n                  labels: this.labelsWord,\r\n                  datasets: [\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of Accounts',\r\n                      backgroundColor: '#88FF88',\r\n                      borderColor: '#58dF58',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordAccountsData,\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: 'Count of records',\r\n                      backgroundColor: '#E5A58B',\r\n                      borderColor: '#E5A58B',\r\n                      borderWidth: 2,\r\n                      fill: true,\r\n                      data: this.wordRecordsData,\r\n                    },\r\n                  ],\r\n                };\r\n              },\r\n              (er) => {}\r\n            );\r\n        },\r\n        (er) => {\r\n          this.waiting = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  // getDataWord(fromDate, toDate) {\r\n  //   this.waiting = true;\r\n  //   this._analysisService\r\n  //     .getTextAnalysisWordCalcData(\r\n  //       this.selectedOrganisation,\r\n  //       this.selectedProcedure,\r\n  //       fromDate,\r\n  //       toDate\r\n  //     )\r\n  //     .subscribe(\r\n  //       (res) => {\r\n  //         this.waiting = false;\r\n  //         this.dataWord = res;\r\n  //         this.tempDataWord = res;\r\n  //         this.labelsWord = new Array();\r\n  //         this.wordAccountsData = new Array();\r\n  //         this.wordRecordsData = new Array();\r\n  //         this.dataWord.forEach((word) => {\r\n  //           let accountsCount = parseInt(\r\n  //             word.accountsCount.toString(),\r\n  //             10\r\n  //           );\r\n  //           word.accountsCount = isNaN(accountsCount)\r\n  //             ? word.accountsCount\r\n  //             : accountsCount;\r\n  //           this.labelsWord.push(word.word);\r\n  //           this.wordAccountsData.push(word.accountsCount);\r\n  //           this.wordRecordsData.push(word.recordsCount);\r\n  //         });\r\n\r\n  //         this.basicDataWord = {\r\n  //           labels: this.labelsWord,\r\n  //           datasets: [\r\n  //             {\r\n  //               type: 'bar',\r\n  //               label: 'Count of Accounts',\r\n  //               backgroundColor: '#88FF88',\r\n  //               borderColor: '#58dF58',\r\n  //               borderWidth: 2,\r\n  //               fill: true,\r\n  //               data: this.wordAccountsData,\r\n  //             },\r\n  //             {\r\n  //               type: 'bar',\r\n  //               label: 'Count of records',\r\n  //               backgroundColor: '#E5A58B',\r\n  //               borderColor: '#E5A58B',\r\n  //               borderWidth: 2,\r\n  //               fill: true,\r\n  //               data: this.wordRecordsData,\r\n  //             },\r\n  //           ],\r\n  //         };\r\n  //       },\r\n  //       (er) => { this.waiting = false }\r\n  //     );\r\n  // }\r\n\r\n  goToDetails(row: TextAnalysis) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/' +\r\n        this.selectedOrganisation +\r\n        '/' +\r\n        this.selectedProcedure +\r\n        '/' +\r\n        row.accountNumber,\r\n    ]);\r\n  }\r\n\r\n  goToDetailsWord(row) {\r\n    this._router.navigate([\r\n      '/dashboard/analysis/text/word/' +\r\n      row.word,\r\n    ]);\r\n  }\r\n\r\n  filterChange(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteria[colName];\r\n      if (Object.keys(this.criteria).length < 1) {\r\n        this.data = [...this.tempData];\r\n      } else {\r\n        for (const key in this.criteria) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n            const element = this.criteria[key];\r\n            if (element.length < 3) {\r\n              this.data = this.tempData.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.data = this.tempData.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.data = [...this.tempData];\r\n      for (const key in this.criteria) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteria, key)) {\r\n          const element = this.criteria[key];\r\n          if (element.length < 3) {\r\n            this.data = this.data.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.data = this.data.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteria field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n  filterChangeWord(query, colName): void {\r\n    this.searching = true;\r\n    // debugger;\r\n    if (!query) {\r\n      delete this.criteriaWord[colName];\r\n      if (Object.keys(this.criteriaWord).length < 1) {\r\n        this.dataWord = [...this.tempDataWord];\r\n      } else {\r\n        for (const key in this.criteriaWord) {\r\n          if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n            const element = this.criteriaWord[key];\r\n            if (element.length < 3) {\r\n              this.dataWord = this.tempDataWord.filter(\r\n                (value) => value[key]?.toLowerCase() == element.toLowerCase()\r\n              );\r\n            } else {\r\n              this.dataWord = this.tempDataWord.filter((value) =>\r\n                value[key]?.toLowerCase().includes(element.toLowerCase())\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.dataWord = [...this.tempDataWord];\r\n      for (const key in this.criteriaWord) {\r\n        if (Object.prototype.hasOwnProperty.call(this.criteriaWord, key)) {\r\n          const element = this.criteriaWord[key];\r\n          if (element.length < 3) {\r\n            this.dataWord = this.dataWord.filter(\r\n              (value) =>\r\n                value[key]?.toString().toLowerCase() == element.toLowerCase()\r\n            );\r\n          } else {\r\n            this.dataWord = this.dataWord.filter((value) =>\r\n              value[key]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(element.toLowerCase())\r\n            );\r\n          }\r\n        }\r\n      } // end of for each criteriaWord field\r\n    }\r\n    this.searching = false;\r\n  }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-breadcrumb [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n<div class=\"p-grid\">\r\n  <div class=\"p-col-12\">\r\n    <!-- <h2 class=\"p-text-center\">{{ procedureName }}</h2> -->\r\n    <h4 class=\"p-text-center\">{{'PaymentAnalysis.allAccounts' | translate}}</h4>\r\n    <h4 class=\"p-text-left\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount?  'By Word' : 'By Account' }}\"\r\n      ></button>\r\n      <!-- <button (click)=\"byAccount = !byAccount\">ByWord</button> -->\r\n    </h4>\r\n  </div>\r\n</div>\r\n\r\n<!-- ------------------------------- By accounts starts here ----------------------------------------- -->\r\n<div [hidden]=\"!byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicData\"\r\n          [options]=\"basicOptions\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dt\r\n        dataKey=\"id\"\r\n        [value]=\"data\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"id\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"cols\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of cols\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of cols\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th pResizableColumn *ngFor=\"let col of cols\" class=\"autocomplete\">\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteria[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChange($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"\r\n                  col.field == 'accountNumber' || col.field == 'accountName'\r\n                \"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of cols\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetails(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By accounts ends here ----------------------------------------- -->\r\n\r\n<!-- ------------------------------- By key Word starts here ----------------------------------------- -->\r\n<div [hidden]=\"byAccount\">\r\n  <div class=\"p-grid\" *ngIf=\"this.basicData\">\r\n    <div class=\"p-col-12\">\r\n      <div class=\"card\">\r\n        <p-chart\r\n          type=\"bar\"\r\n          [data]=\"basicDataWord\"\r\n          [options]=\"basicOptionsWords\"\r\n          height=\"350px\"\r\n        ></p-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n      <p-table\r\n        #dtword\r\n        [value]=\"dataWord\"\r\n        [resizableColumns]=\"true\"\r\n        dataKey=\"word\"\r\n        styleClass=\"p-datatable-gridlines\"\r\n        [loading]=\"waiting\"\r\n        [columns]=\"colsWord\"\r\n        responsive=\"true\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"350px\"\r\n        [reorderableColumns]=\"true\"\r\n      >\r\n        <ng-template pTemplate=\"colgroup\">\r\n          <colgroup>\r\n            <col *ngFor=\"let col of colsWord\" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th\r\n              pSortableColumn=\"{{ col.field }}\"\r\n              pResizableColumn\r\n              pReorderableColumn\r\n              class=\"p-text-{{col.align}}\"\r\n              *ngFor=\"let col of colsWord\"\r\n            >\r\n              <span pTooltip=\"{{ col.header | translate }}\">\r\n                {{ col.header | translate }}\r\n              </span>\r\n              <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n            </th>\r\n            <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th\r\n              pResizableColumn\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"autocomplete\"\r\n            >\r\n              <input\r\n                pInputText\r\n                type=\"text\"\r\n                [(ngModel)]=\"criteriaWord[col.field]\"\r\n                [style]=\"{ width: '90%' }\"\r\n                (input)=\"filterChangeWord($any($event.target).value, col.field)\"\r\n                class=\"filterInputCss\"\r\n                *ngIf=\"col.field == 'word'\"\r\n              />\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-row>\r\n          <tr>\r\n            <td\r\n              pReorderableRowHandle\r\n              *ngFor=\"let col of colsWord\"\r\n              class=\"p-text-{{ col.align }}\"\r\n            >\r\n              <span pTooltip=\"{{ row[col.field] }}\">\r\n                {{ row[col.field] }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                pButton\r\n                pRipple\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button-rounded p-button-warning\"\r\n                (click)=\"goToDetailsWord(row)\"\r\n                pTooltip=\"Details\"\r\n                tooltipPosition=\"bottom\"\r\n              ></button>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ------------------------------- By key Word ends here ----------------------------------------- -->\r\n\r\n<!-- <div class=\"p-grid\">\r\n    <div class=\"p-col-12\">\r\n        <h1 class=\"p-text-center\">Text Analysis By Word pre calculated</h1>\r\n        <h2 class=\"p-text-center\">{{ procedureName }}</h2>\r\n        <h4 class=\"p-text-center\">All Accounts</h4>\r\n        <h4 class=\"p-text-center\">\r\n            <p-dropdown [options]=\"steps\" placeholder=\"Step\"\r\n                optionLabel=\"label\" optionValue=\"value\" [filter]=\"true\" filterBy=\"label\" required\r\n                (onChange)=\"stepChangedHandler($event)\" [style]=\"{width:'500px'}\">\r\n            </p-dropdown>\r\n            </h4>\r\n            <h4 class=\"p-text-center\">\r\n            <p-dropdown [options]=\"dateRanges\"  placeholder=\"Date Range\"\r\n                optionLabel=\"label\" optionValue=\"value\" [filter]=\"true\" filterBy=\"label\" required\r\n                (onChange)=\"dateChangedHandler($event)\" [style]=\"{width:'500px'}\">\r\n            </p-dropdown>\r\n        </h4>\r\n        <p-progressBar mode=\"indeterminate\" [style]=\"{ height: '5px' }\" *ngIf=\"waiting\"></p-progressBar>\r\n        <h4 class=\"p-text-right\">\r\n      <button\r\n        type=\"button\"\r\n        pButton\r\n        pRipple\r\n        icon=\"pi pi-undo\"\r\n        class=\"p-button-rounded p-button-warning\"\r\n        (click)=\"byAccount = !byAccount\"\r\n        pTooltip=\"Details\"\r\n        tooltipPosition=\"bottom\"\r\n        label=\"{{ byAccount? 'By Word' : 'By Account' }}\"\r\n      ></button> \r\n         <button (click)=\"byAccount = !byAccount\">ByWord</button> \r\n        </h4>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"p-grid\" *ngIf=\"basicDataWord\">\r\n    <div class=\"p-col-12\">\r\n        <div class=\"card\">\r\n            <p-chart type=\"bar\" [data]=\"basicDataWord\" [options]=\"basicOptionsWords\" height=\"350px\"></p-chart>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"p-grid\">\r\n    <div class=\"p-col-12\" *ngIf=\"selectedProcedure > 0\">\r\n        <p-table #dtword [value]=\"dataWord\" [resizableColumns]=\"true\" dataKey=\"word\" styleClass=\"p-datatable-gridlines\"\r\n            [loading]=\"waiting\" [columns]=\"colsWord\" responsive=\"true\" [scrollable]=\"true\" scrollHeight=\"350px\"\r\n            [reorderableColumns]=\"true\">\r\n            <ng-template pTemplate=\"colgroup\">\r\n                <colgroup>\r\n                    <col *ngFor=\"let col of colsWord\" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th pSortableColumn=\"{{ col.field }}\" pResizableColumn pReorderableColumn\r\n                        class=\"p-text-{{col.align}}\" *ngFor=\"let col of colsWord\">\r\n                        <span pTooltip=\"{{ col.header | translate }}\">\r\n                            {{ col.header | translate }}\r\n                        </span>\r\n                        <p-sortIcon field=\"{{ col.field }}\"></p-sortIcon>\r\n                    </th>\r\n                    <th>{{ \"AmountAnalysis.details\" | translate }}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th pResizableColumn *ngFor=\"let col of colsWord\" class=\"autocomplete\">\r\n                        <input pInputText type=\"text\" [(ngModel)]=\"criteriaWord[col.field]\" [style]=\"{ width: '90%' }\"\r\n                            (input)=\"filterChangeWord($any($event.target).value, col.field)\" class=\"filterInputCss\"\r\n                            *ngIf=\"col.field == 'word'\" />\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-row>\r\n                <tr>\r\n                    <td pReorderableRowHandle *ngFor=\"let col of colsWord\" class=\"p-text-{{ col.align }}\">\r\n                        <span pTooltip=\"{{ row[col.field] }}\">\r\n                            {{ row[col.field] }}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" pButton pRipple icon=\"pi pi-list\"\r\n                            class=\"p-button-rounded p-button-warning\" (click)=\"goToDetailsWord(row)\" pTooltip=\"Details\"\r\n                            tooltipPosition=\"bottom\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div> -->","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}